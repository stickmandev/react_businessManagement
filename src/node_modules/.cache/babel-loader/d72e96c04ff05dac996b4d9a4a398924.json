{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport React from 'react';\nimport Modal from 'react-modal';\nimport './createFlow.css';\nimport useGlobalState from \"../../../Store_&_State/GlobalState\";\nimport useAccess from \"../../auths/accessToken\";\nimport { create_cashFlow } from './api/cashFow_CRUD';\nimport { get_categories, create_categories } from \"./api/categories_api\";\n\nfunction CreateFlow(prop) {//     const [description, setDescription] = useState(\"\");\n  //     const [selected_Streamm, setSelected_Streamm] = useState(\"\");\n  //     const [credit, setCredit] = useState(0);\n  //     const [debit, setDebit] = useState(0);\n  //     const [categoryList, setcategoryList] = useState(\"\");\n  //     const [newCategory, setNewCategory] = useState(\"\");\n  //     const [selected_Category, setSelected_Category] = useState(\"\");\n  //     const [savedTransaction, setSavedTransaction] = useState('');\n  //     const {createFlowModalIsOpen, setCreateFlowIsOpen} = useGlobalState([]);\n  //     const [selectColor, setSelectColor] = useState(\"gray\");\n  //     const [stream, setStream] = useState([]);\n  //     const {access, setAccess} = useAccess('')\n  //     const {streamList, setStreamList} = useGlobalState([]);\n  //     const set_Access = (Access_token) => {\n  //         setAccess(Access_token)\n  //     }\n  //     const create_Category = async(e)=>{\n  //         e.preventDefault()\n  //         await create_categories(newCategory, create_Success, access, set_Access);\n  //     };\n  //     // GET category ......................................................\n  //     const getCategories_success = async(data) => {\n  //         // console.log(data)\n  //         // console.log(data.results)\n  //         setcategoryList(\n  //             data.results.map(function(item){\n  //               return(\n  //                 <>\n  //                     <div className='categories'>\n  //                         <input type=\"radio\" id={item.name} name=\"category\" value={item.name}/>\n  //                         <label for={item.name}>{item.name}</label>\n  //                     </div><br/>\n  //                 </>\n  //               )\n  //             })\n  //         )\n  //     };\n  //     const getCategories_fail = async(failed) => {\n  //         console.log(failed)\n  //     };\n  //     const load_categories = () => {\n  //         get_categories(getCategories_success, getCategories_fail, access, setAccess)\n  //     }\n  //     useEffect(() => {\n  //         load_categories()\n  //     }, []);\n  //     useEffect(() => {\n  //         setStream(\n  //           streamList.map(function(item){\n  //             return(\n  //                 <button required onClick={(e)=>{ e.preventDefault(); setSelected_Streamm(item.id)}}>{item.name}</button>\n  //             )\n  //           })\n  //         );\n  //     }, [streamList]);\n  //     if (createFlowModalIsOpen){\n  //         prop.blur(8)\n  //     }\n  //     function afterOpenModal() {\n  //         // references are now sync'd and can be accessed.\n  //     }\n  //     function closeModal(e) {\n  //         e.preventDefault();\n  //         setCreateFlowIsOpen(false);\n  //         prop.blur(0)\n  //     }\n  //     const create_Success = async(data, page) => {\n  //         setCreateFlowIsOpen(false);\n  //         prop.blur(0)\n  //     };\n  //     const create_Data = async(e)=>{\n  //         e.preventDefault()\n  //         await create_cashFlow(description, selected_Streamm, credit, debit, create_Success, access, set_Access);\n  //     };\n  //     useEffect(\n  //         () => {\n  //             if(savedTransaction == ''){\n  //                 setSelectColor(\"gray\")\n  //             }else{\n  //                 setSelectColor(\"black\")\n  //             }\n  //         },[savedTransaction]\n  //     )\n  //   return (\n  //     <div>\n  //       <Modal\n  //         isOpen={createFlowModalIsOpen}\n  //         onAfterOpen={afterOpenModal}\n  //         onRequestClose={closeModal}\n  //         contentLabel=\"Add new Entry\"\n  //         className=\"Modal\"\n  //         overlayClassName=\"Overlay\"\n  //       >\n  //         <form id=\"loginForm\" className='column' >\n  //             <div id='form_blur_Overlay'></div>\n  //             <div id='record_Header_Overlay' className='row'>\n  //                 <h2>Add Record</h2> \n  //                 <button onClick={closeModal}>X</button>\n  //             </div>\n  //             <div id='descriptionOverlay' className=\"\">\n  //                 Description<br/>\n  //                 <input className=\"record_form\" autoFocus type=\"text\" id=\"description\" placeholder=\"e.g. worker salary\" onChange={(e)=>{setDescription(e.target.value)}} value={description} /><br/>\n  //             </div>\n  //             <div id='accountOverlay'>\n  //                 Account<br/>\n  //                 {stream}\n  //             </div><br/>\n  //             <div id='AmountOverlay' className=\"inputTextOverlay\">\n  //                 Amount<br/>\n  //                 <div className='row'>\n  //                     <div>\n  //                         Credit<input className=\"record_form\" type=\"credit\" id=\"password\" placeholder=\"0.00\" onChange={(e)=>{setCredit(e.target.value)}} value={credit} />\n  //                     </div>\n  //                     <div>\n  //                         Debit<input className=\"record_form\" type=\"debit\" id=\"password\" placeholder=\"0.00\" onChange={(e)=>{setDebit(e.target.value)}} value={debit} />\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //             <div id='savedTransactionOverlay' className='row'>\n  //                 <label>\n  //                     <select value={savedTransaction} placeholder='' onChange={(e)=>{setSavedTransaction(e.target.value)}} style={{color:selectColor}} >\n  //                         <option value=\"\">Choose from saved transactions</option>\n  //                         <option value=\"lime\">Lime</option>\n  //                         <option value=\"coconut\">Coconut</option>\n  //                         <option value=\"mango\">Mango</option>\n  //                         {/* <option value=\"grapefruit\">coco</option> */}\n  //                     </select>\n  //                 </label>\n  //                 <div className='column'>\n  //                     <button></button>\n  //                     Save transaction\n  //                 </div>\n  //             </div>\n  //             <div id='categoryOverlay' className='column'>\n  //                 Category<br/>\n  //                 <div className='row'>\n  //                     {categoryList}\n  //                 </div>\n  //             </div>\n  //             <div id='addCategoryOverlay'>\n  //                 Add category<br/>\n  //                 <input className=\"add_category\" type=\"text\" id=\"category\" onChange={(e)=>{setNewCategory(e.target.value)}} value={newCategory} />\n  //                 <button onClick={create_Category}>+</button>\n  //             </div>\n  //             <div id=\"BTN_overlay\" >\n  //                 <div>\n  //                     <button id=\"submit\"  value=\"Done\" onClick={closeModal}>cancel</button>\n  //                     <button id=\"submit\" type=\"submit\" value=\"Done\" onClick={create_Data}>Done</button>\n  //                 </div>\n  //             </div>\n  //         </form>\n  //       </Modal>\n  //     </div>\n  //   )\n}\n\n_c = CreateFlow;\nexport default CreateFlow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateFlow\");","map":{"version":3,"names":["useState","useEffect","React","Modal","useGlobalState","useAccess","create_cashFlow","get_categories","create_categories","CreateFlow","prop"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/CreateFlow.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport React from 'react'\nimport Modal from 'react-modal';\nimport './createFlow.css'\nimport useGlobalState from \"../../../Store_&_State/GlobalState\"\nimport useAccess from \"../../auths/accessToken\"\nimport {create_cashFlow} from './api/cashFow_CRUD'\nimport {get_categories, create_categories} from \"./api/categories_api\"\n\nfunction CreateFlow(prop) {\n//     const [description, setDescription] = useState(\"\");\n//     const [selected_Streamm, setSelected_Streamm] = useState(\"\");\n//     const [credit, setCredit] = useState(0);\n//     const [debit, setDebit] = useState(0);\n//     const [categoryList, setcategoryList] = useState(\"\");\n//     const [newCategory, setNewCategory] = useState(\"\");\n//     const [selected_Category, setSelected_Category] = useState(\"\");\n//     const [savedTransaction, setSavedTransaction] = useState('');\n//     const {createFlowModalIsOpen, setCreateFlowIsOpen} = useGlobalState([]);\n//     const [selectColor, setSelectColor] = useState(\"gray\");\n//     const [stream, setStream] = useState([]);\n    \n//     const {access, setAccess} = useAccess('')\n//     const {streamList, setStreamList} = useGlobalState([]);\n\n    \n    \n//     const set_Access = (Access_token) => {\n//         setAccess(Access_token)\n//     }\n\n//     const create_Category = async(e)=>{\n//         e.preventDefault()\n//         await create_categories(newCategory, create_Success, access, set_Access);\n//     };\n\n//     // GET category ......................................................\n//     const getCategories_success = async(data) => {\n//         // console.log(data)\n//         // console.log(data.results)\n\n//         setcategoryList(\n//             data.results.map(function(item){\n//               return(\n//                 <>\n//                     <div className='categories'>\n//                         <input type=\"radio\" id={item.name} name=\"category\" value={item.name}/>\n//                         <label for={item.name}>{item.name}</label>\n//                     </div><br/>\n//                 </>\n//               )\n//             })\n//         )\n\n//     };\n\n//     const getCategories_fail = async(failed) => {\n//         console.log(failed)\n//     };\n\n//     const load_categories = () => {\n//         get_categories(getCategories_success, getCategories_fail, access, setAccess)\n        \n//     }\n\n//     useEffect(() => {\n//         load_categories()\n\n        \n//     }, []);\n    \n//     useEffect(() => {\n//         setStream(\n//           streamList.map(function(item){\n//             return(\n//                 <button required onClick={(e)=>{ e.preventDefault(); setSelected_Streamm(item.id)}}>{item.name}</button>\n//             )\n//           })\n//         );\n    \n//     }, [streamList]);\n\n//     if (createFlowModalIsOpen){\n//         prop.blur(8)\n//     }\n\n//     function afterOpenModal() {\n//         // references are now sync'd and can be accessed.\n//     }\n\n//     function closeModal(e) {\n//         e.preventDefault();\n//         setCreateFlowIsOpen(false);\n//         prop.blur(0)\n//     }\n\n//     const create_Success = async(data, page) => {\n//         setCreateFlowIsOpen(false);\n//         prop.blur(0)\n//     };\n\n//     const create_Data = async(e)=>{\n//         e.preventDefault()\n//         await create_cashFlow(description, selected_Streamm, credit, debit, create_Success, access, set_Access);\n        \n//     };\n\n//     useEffect(\n//         () => {\n//             if(savedTransaction == ''){\n//                 setSelectColor(\"gray\")\n//             }else{\n//                 setSelectColor(\"black\")\n//             }\n//         },[savedTransaction]\n//     )\n\n//   return (\n//     <div>\n//       <Modal\n//         isOpen={createFlowModalIsOpen}\n//         onAfterOpen={afterOpenModal}\n//         onRequestClose={closeModal}\n//         contentLabel=\"Add new Entry\"\n//         className=\"Modal\"\n//         overlayClassName=\"Overlay\"\n//       >\n//         <form id=\"loginForm\" className='column' >\n//             <div id='form_blur_Overlay'></div>\n//             <div id='record_Header_Overlay' className='row'>\n//                 <h2>Add Record</h2> \n//                 <button onClick={closeModal}>X</button>\n//             </div>\n            \n//             <div id='descriptionOverlay' className=\"\">\n//                 Description<br/>\n//                 <input className=\"record_form\" autoFocus type=\"text\" id=\"description\" placeholder=\"e.g. worker salary\" onChange={(e)=>{setDescription(e.target.value)}} value={description} /><br/>\n//             </div>\n\n//             <div id='accountOverlay'>\n//                 Account<br/>\n//                 {stream}\n//             </div><br/>\n              \n//             <div id='AmountOverlay' className=\"inputTextOverlay\">\n//                 Amount<br/>\n//                 <div className='row'>\n//                     <div>\n//                         Credit<input className=\"record_form\" type=\"credit\" id=\"password\" placeholder=\"0.00\" onChange={(e)=>{setCredit(e.target.value)}} value={credit} />\n//                     </div>\n//                     <div>\n//                         Debit<input className=\"record_form\" type=\"debit\" id=\"password\" placeholder=\"0.00\" onChange={(e)=>{setDebit(e.target.value)}} value={debit} />\n//                     </div>\n//                 </div>\n//             </div>\n\n//             <div id='savedTransactionOverlay' className='row'>\n//                 <label>\n//                     <select value={savedTransaction} placeholder='' onChange={(e)=>{setSavedTransaction(e.target.value)}} style={{color:selectColor}} >\n//                         <option value=\"\">Choose from saved transactions</option>\n//                         <option value=\"lime\">Lime</option>\n//                         <option value=\"coconut\">Coconut</option>\n//                         <option value=\"mango\">Mango</option>\n//                         {/* <option value=\"grapefruit\">coco</option> */}\n//                     </select>\n//                 </label>\n//                 <div className='column'>\n//                     <button></button>\n//                     Save transaction\n//                 </div>\n//             </div>\n              \n//             <div id='categoryOverlay' className='column'>\n//                 Category<br/>\n//                 <div className='row'>\n//                     {categoryList}\n//                 </div>\n//             </div>\n\n//             <div id='addCategoryOverlay'>\n//                 Add category<br/>\n//                 <input className=\"add_category\" type=\"text\" id=\"category\" onChange={(e)=>{setNewCategory(e.target.value)}} value={newCategory} />\n//                 <button onClick={create_Category}>+</button>\n//             </div>\n              \n//             <div id=\"BTN_overlay\" >\n//                 <div>\n//                     <button id=\"submit\"  value=\"Done\" onClick={closeModal}>cancel</button>\n//                     <button id=\"submit\" type=\"submit\" value=\"Done\" onClick={create_Data}>Done</button>\n//                 </div>\n//             </div>\n//         </form>\n//       </Modal>\n//     </div>\n//   )\n}\n\nexport default CreateFlow"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,eAAR,QAA8B,oBAA9B;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,sBAAhD;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B,CAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAIA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EAEA;EAEA;EACA;EAGA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACC;;KA1LQD,U;AA4LT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}