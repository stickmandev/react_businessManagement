{"ast":null,"code":"import { backendURL } from \"../../backendURL\";\nexport const verifyTokens = async access => {\n  const refreshtoken = localStorage.getItem(\"refreshToken\");\n  console.log(\"verifying tokens......\"); // console.log(access)\n  // console.log(refreshtoken)\n  // Verifying access token___________________________________________________________________________________\n\n  console.log(\"verifying access token......\");\n  const verify_access_token = await fetch(`${backendURL}/user/verifyAccess/`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'Application/JSON',\n      'Content-Type': 'Application/json'\n    },\n    body: JSON.stringify({\n      access: `${access}`\n    })\n  });\n  console.log(\"finished verifying access token\");\n  console.log(verify_access_token);\n\n  if (verify_access_token.status === 400) {\n    console.log(\"access token expired......: \" + verify_access_token.status); // fetching new access and refresh token___________________________________________________________________________________\n\n    console.log(\"fetching new access and refresh token......\");\n    const get_access_token = await fetch(`${backendURL}/user/refresh/`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'Application/JSON',\n        'Content-Type': 'Application/json'\n      },\n      body: JSON.stringify({\n        refresh: `${refreshtoken}`\n      })\n    });\n    const access_text = await get_access_token.text();\n    console.log('finished fetching access and refresh token');\n    console.log(get_access_token);\n    console.log(\"setting access and refresh token\");\n\n    if (get_access_token.status === 200) {\n      localStorage.setItem(\"refreshToken\", JSON.parse(access_text));\n      const access = verify_access_token.access;\n      console.log('finished setting tokens');\n    }\n\n    console.log(verify_access_token.refresh);\n\n    if (get_access_token.status === 400) {\n      // Verifying refresh token__________________________________________________________________________________\n      console.log('Verifying refresh token....');\n      const verify_refresh_token = await fetch(`${backendURL}/user/verifyRefresh/`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'Application/JSON',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refresh: `${refreshtoken}`\n        })\n      });\n      console.log('finished verifying refresh token');\n\n      if (verify_refresh_token.status === (401 || 400)) {\n        alert(\"session expired, please log in again\");\n        console.log('redirecting to login');\n        window.location.assign(\"/login\");\n      }\n    }\n  }\n\n  ;\n};","map":{"version":3,"names":["backendURL","verifyTokens","access","refreshtoken","localStorage","getItem","console","log","verify_access_token","fetch","method","headers","body","JSON","stringify","status","get_access_token","refresh","access_text","text","setItem","parse","verify_refresh_token","alert","window","location","assign"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/auths/verifyTokens.js"],"sourcesContent":["import {backendURL} from \"../../backendURL\"\n\nexport const verifyTokens = async (access) => {\n    \n    const refreshtoken =  localStorage.getItem(\"refreshToken\");\n    console.log(\"verifying tokens......\")\n    // console.log(access)\n    // console.log(refreshtoken)\n    \n    // Verifying access token___________________________________________________________________________________\n    console.log(\"verifying access token......\")\n    const verify_access_token = await fetch(\n      `${backendURL}/user/verifyAccess/`,\n      {\n          method: 'POST',\n          headers: {\n              'Accept': 'Application/JSON',\n              'Content-Type': 'Application/json',\n          },\n          body: JSON.stringify({\n            access: `${access}`,\n          })\n      }\n    );\n    console.log(\"finished verifying access token\")\n    console.log(verify_access_token)\n  \n    if (verify_access_token.status === 400 ) {\n        console.log(\"access token expired......: \"+verify_access_token.status)\n\n        // fetching new access and refresh token___________________________________________________________________________________\n        console.log(\"fetching new access and refresh token......\")\n        const get_access_token = await fetch(\n            `${backendURL}/user/refresh/`,\n            {\n                method: 'POST',\n                headers: {\n                    'Accept': 'Application/JSON',\n                    'Content-Type': 'Application/json',\n                },\n                body: JSON.stringify({\n                    refresh: `${refreshtoken}`,\n                })\n            }\n        );\n        const access_text = await get_access_token.text();\n        console.log('finished fetching access and refresh token')\n\n        console.log(get_access_token)\n        console.log(\"setting access and refresh token\")\n        if (get_access_token.status === 200) {\n            localStorage.setItem(\"refreshToken\", JSON.parse(access_text));\n            const access = verify_access_token.access\n            console.log('finished setting tokens')\n        }\n        console.log(verify_access_token.refresh)\n\n        if (get_access_token.status === (400)) {\n            // Verifying refresh token__________________________________________________________________________________\n            console.log('Verifying refresh token....')\n            const verify_refresh_token = await fetch(\n            `${backendURL}/user/verifyRefresh/`,\n            {\n                method: 'POST',\n                headers: {\n                    'Accept': 'Application/JSON',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    refresh: `${refreshtoken}`,\n                })\n            }\n            );\n            console.log('finished verifying refresh token')\n            \n        \n            if (verify_refresh_token.status === (401||400)) {\n                alert(\"session expired, please log in again\")\n                console.log('redirecting to login')\n                window.location.assign(\"/login\");\n            }\n\n      }\n  \n    };\n    \n    \n}\n"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,kBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAOC,MAAP,IAAkB;EAE1C,MAAMC,YAAY,GAAIC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAtB;EACAC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAH0C,CAI1C;EACA;EAEA;;EACAD,OAAO,CAACC,GAAR,CAAY,8BAAZ;EACA,MAAMC,mBAAmB,GAAG,MAAMC,KAAK,CACpC,GAAET,UAAW,qBADuB,EAErC;IACIU,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB;IAFX,CAFb;IAMIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBZ,MAAM,EAAG,GAAEA,MAAO;IADC,CAAf;EANV,CAFqC,CAAvC;EAaAI,OAAO,CAACC,GAAR,CAAY,iCAAZ;EACAD,OAAO,CAACC,GAAR,CAAYC,mBAAZ;;EAEA,IAAIA,mBAAmB,CAACO,MAApB,KAA+B,GAAnC,EAAyC;IACrCT,OAAO,CAACC,GAAR,CAAY,iCAA+BC,mBAAmB,CAACO,MAA/D,EADqC,CAGrC;;IACAT,OAAO,CAACC,GAAR,CAAY,6CAAZ;IACA,MAAMS,gBAAgB,GAAG,MAAMP,KAAK,CAC/B,GAAET,UAAW,gBADkB,EAEhC;MACIU,MAAM,EAAE,MADZ;MAEIC,OAAO,EAAE;QACL,UAAU,kBADL;QAEL,gBAAgB;MAFX,CAFb;MAMIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBG,OAAO,EAAG,GAAEd,YAAa;MADR,CAAf;IANV,CAFgC,CAApC;IAaA,MAAMe,WAAW,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,EAA1B;IACAb,OAAO,CAACC,GAAR,CAAY,4CAAZ;IAEAD,OAAO,CAACC,GAAR,CAAYS,gBAAZ;IACAV,OAAO,CAACC,GAAR,CAAY,kCAAZ;;IACA,IAAIS,gBAAgB,CAACD,MAAjB,KAA4B,GAAhC,EAAqC;MACjCX,YAAY,CAACgB,OAAb,CAAqB,cAArB,EAAqCP,IAAI,CAACQ,KAAL,CAAWH,WAAX,CAArC;MACA,MAAMhB,MAAM,GAAGM,mBAAmB,CAACN,MAAnC;MACAI,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACH;;IACDD,OAAO,CAACC,GAAR,CAAYC,mBAAmB,CAACS,OAAhC;;IAEA,IAAID,gBAAgB,CAACD,MAAjB,KAA6B,GAAjC,EAAuC;MACnC;MACAT,OAAO,CAACC,GAAR,CAAY,6BAAZ;MACA,MAAMe,oBAAoB,GAAG,MAAMb,KAAK,CACvC,GAAET,UAAW,sBAD0B,EAExC;QACIU,MAAM,EAAE,MADZ;QAEIC,OAAO,EAAE;UACL,UAAU,kBADL;UAEL,gBAAgB;QAFX,CAFb;QAMIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACjBG,OAAO,EAAG,GAAEd,YAAa;QADR,CAAf;MANV,CAFwC,CAAxC;MAaAG,OAAO,CAACC,GAAR,CAAY,kCAAZ;;MAGA,IAAIe,oBAAoB,CAACP,MAArB,MAAiC,OAAK,GAAtC,CAAJ,EAAgD;QAC5CQ,KAAK,CAAC,sCAAD,CAAL;QACAjB,OAAO,CAACC,GAAR,CAAY,sBAAZ;QACAiB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,QAAvB;MACH;IAEN;EAEF;;EAAA;AAGJ,CArFM"},"metadata":{},"sourceType":"module"}