{"ast":null,"code":"import _regeneratorRuntime from\"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{backendURL}from\"../../../../backendURL\";var login_api=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(email,password,success,fail){var response,text;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(backendURL,\"/user/login/\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({\"email\":email,\"password\":password}),cache:'default',// *default, no-cache, reload, force-cache, only-\n// credentials: \"same-origin\"\ncredentials:\"include\"});case 2:response=_context.sent;_context.next=5;return response.text();case 5:text=_context.sent;if(response.status===200){// console.log(\"success\", JSON.parse(text));\nsuccess(JSON.parse(text));}else{console.log(\"failed\",text);Object.entries(JSON.parse(text)).forEach(function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];fail(\"\".concat(key,\": \").concat(value));});}case 7:case\"end\":return _context.stop();}}},_callee);}));return function login_api(_x,_x2,_x3,_x4){return _ref.apply(this,arguments);};}();export default login_api;","map":{"version":3,"names":["backendURL","login_api","email","password","success","fail","fetch","method","headers","body","JSON","stringify","cache","credentials","response","text","status","parse","console","log","Object","entries","forEach","key","value"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/login/components/api/login_api.js"],"sourcesContent":["import {backendURL} from \"../../../../backendURL\"\n\nconst login_api = async (email, password, success, fail) => {\n  const response = await fetch(\n        `${backendURL}/user/login/`,\n        {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              \"email\": email,\n              \"password\": password,\n            }),\n            cache: 'default', // *default, no-cache, reload, force-cache, only-\n            // credentials: \"same-origin\"\n            credentials: \"include\"\n        }\n    );\n  const text = await response.text();\n  if (response.status === 200) {\n    // console.log(\"success\", JSON.parse(text));\n    success(JSON.parse(text));\n  } else {\n    console.log(\"failed\", text);\n    Object.entries(JSON.parse(text)).forEach(([key, value])=>{\n      fail(`${key}: ${value}`);\n    });\n  }\n};\n\nexport default login_api"],"mappings":"4lBAAA,OAAQA,UAAR,KAAyB,wBAAzB,CAEA,GAAMC,UAAS,4FAAG,iBAAOC,KAAP,CAAcC,QAAd,CAAwBC,OAAxB,CAAiCC,IAAjC,4JACOC,MAAK,WACnBN,UADmB,iBAEtB,CACIO,MAAM,CAAE,MADZ,CAEIC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFb,CAMIC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnB,QAAST,KADU,CAEnB,WAAYC,QAFO,CAAf,CANV,CAUIS,KAAK,CAAE,SAVX,CAUsB;AAClB;AACAC,WAAW,CAAE,SAZjB,CAFsB,CADZ,QACVC,QADU,qCAkBGA,SAAQ,CAACC,IAAT,EAlBH,QAkBVA,IAlBU,eAmBhB,GAAID,QAAQ,CAACE,MAAT,GAAoB,GAAxB,CAA6B,CAC3B;AACAZ,OAAO,CAACM,IAAI,CAACO,KAAL,CAAWF,IAAX,CAAD,CAAP,CACD,CAHD,IAGO,CACLG,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBJ,IAAtB,EACAK,MAAM,CAACC,OAAP,CAAeX,IAAI,CAACO,KAAL,CAAWF,IAAX,CAAf,EAAiCO,OAAjC,CAAyC,eAAgB,mCAAdC,GAAc,UAATC,KAAS,UACvDnB,IAAI,WAAIkB,GAAJ,cAAYC,KAAZ,EAAJ,CACD,CAFD,EAGD,CA3Be,sDAAH,kBAATvB,UAAS,wDAAf,CA8BA,cAAeA,UAAf"},"metadata":{},"sourceType":"module"}