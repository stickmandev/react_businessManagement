{"ast":null,"code":"var _jsxFileName = \"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/Store_&_State/GlobalState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalState = /*#__PURE__*/createContext(null);\n\nconst useGlobalState = () => {\n  _s();\n\n  return useContext(GlobalState);\n};\n\n_s(useGlobalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default useGlobalState;\nexport const GlobalStateProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [stream, setStream] = useState([]);\n  const [streamList, setStreamList] = useState([]);\n  const [createmodalIsOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(GlobalState.Provider, {\n    value: {\n      stream,\n      setStream,\n      streamList,\n      setStreamList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(GlobalStateProvider, \"mBx80iI5yM7Xvj0YlxOxTAgUXao=\");\n\n_c = GlobalStateProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStateProvider\");","map":{"version":3,"names":["createContext","useContext","useState","ReactDOM","GlobalState","useGlobalState","GlobalStateProvider","children","stream","setStream","streamList","setStreamList","createmodalIsOpen","setIsOpen"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/Store_&_State/GlobalState.js"],"sourcesContent":["import {createContext, useContext, useState} from 'react'\nimport ReactDOM from \"react-dom/client\";\n\nexport const GlobalState = createContext(null)\nconst useGlobalState = () => useContext(GlobalState)\nexport default useGlobalState\n\nexport const GlobalStateProvider = ({children}) => {\n  const [stream, setStream] = useState([])\n  const [streamList, setStreamList] = useState([])\n  const [createmodalIsOpen, setIsOpen] = useState(false);\n\n  return (\n    <GlobalState.Provider value={{ stream, setStream, streamList, setStreamList}}>\n      {children}\n    </GlobalState.Provider>\n  )\n}\n\n"],"mappings":";;;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,QAAnC,QAAkD,OAAlD;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,IAAD,CAAjC;;AACP,MAAMK,cAAc,GAAG;EAAA;;EAAA,OAAMJ,UAAU,CAACG,WAAD,CAAhB;AAAA,CAAvB;;GAAMC,c;;AACN,eAAeA,cAAf;AAEA,OAAO,MAAMC,mBAAmB,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACjD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACU,iBAAD,EAAoBC,SAApB,IAAiCX,QAAQ,CAAC,KAAD,CAA/C;EAEA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEM,MAAF;MAAUC,SAAV;MAAqBC,UAArB;MAAiCC;IAAjC,CAA7B;IAAA,UACGJ;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAVM;;IAAMD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}