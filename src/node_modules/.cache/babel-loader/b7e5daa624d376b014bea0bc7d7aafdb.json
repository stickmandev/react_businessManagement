{"ast":null,"code":"import { verifyTokens } from \"../../../auths/verifyTokens\";\nimport { backendURL } from \"../../../../backendURL\"; // `${backendURL}/ledger/cashflow/ratios/weekly?start_date=${start_date}&end_date=${end_date}&date_range=${date_range}`,\n\nexport const get_ratioApi = async (success, fail, start_date, end_date, date_range, access, set_access) => {\n  // console.log(start_date+\"-----To------\"+end_date)\n  // console.log(filterCategory)\n  const success_Status = async (status, access_token) => {\n    alert('dsd');\n\n    if (status === 200) {\n      // if(filterCategory==='' || filterCategory===undefined){\n      console.log('fetching cashflow data'); // fetching cashflow data\n\n      const response = await fetch(`${backendURL}/ledger/cashflow/ratios/weekly?start_date=${start_date}&end_date=${end_date}&date_range=${date_range}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'Application/JSON',\n          'Authorization': `Bearer ${access_token}`\n        }\n      });\n      const text = await response.text();\n\n      if (response.status === 401) {\n        console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to view this page\");\n        window.location.assign(\"/login\");\n        return [];\n      }\n\n      if (response.status === 200) {\n        // console.log(\"success\", JSON.parse(text));\n        console.log('successfuly fetched cashflow data');\n        success(JSON.parse(text));\n      } else {\n        console.log(\"failed\", text);\n        Object.entries(JSON.parse(text)).forEach(_ref => {\n          let [key, value] = _ref;\n          fail(`${key}: ${value}`);\n          console.log('faillllled');\n        });\n      } // }\n\n    }\n  };\n\n  verifyTokens(access, set_access, success_Status);\n  success_Status();\n};","map":{"version":3,"names":["verifyTokens","backendURL","get_ratioApi","success","fail","start_date","end_date","date_range","access","set_access","success_Status","status","access_token","alert","console","log","response","fetch","method","headers","text","window","location","assign","JSON","parse","Object","entries","forEach","key","value"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/ratios_api.js"],"sourcesContent":["import {verifyTokens} from \"../../../auths/verifyTokens\"\nimport {backendURL} from \"../../../../backendURL\"\n// `${backendURL}/ledger/cashflow/ratios/weekly?start_date=${start_date}&end_date=${end_date}&date_range=${date_range}`,\n\n\nexport const get_ratioApi = async ( success, fail, start_date, end_date, date_range, access, set_access) => {\n  \n    // console.log(start_date+\"-----To------\"+end_date)\n    // console.log(filterCategory)\n\n    const success_Status = async(status, access_token) => {\n      alert('dsd')\n    if (status  === 200){\n      \n      // if(filterCategory==='' || filterCategory===undefined){\n        console.log('fetching cashflow data')\n        // fetching cashflow data\n        const response = await fetch(\n          `${backendURL}/ledger/cashflow/ratios/weekly?start_date=${start_date}&end_date=${end_date}&date_range=${date_range}`,\n          {\n              method: 'GET',\n              headers: {\n                  'Content-Type': 'Application/JSON',\n                  'Authorization': `Bearer ${access_token}`,\n              }\n          }\n        );\n        const text = await response.text();\n        if (response.status === 401) {\n          console.log(\"accesstoken not valid\");\n          alert(\"you are not authorized to view this page\")\n          window.location.assign(\"/login\");\n          return [];\n        }\n        if (response.status === 200) {\n          // console.log(\"success\", JSON.parse(text));\n          console.log('successfuly fetched cashflow data')\n          success(JSON.parse(text));\n        } else {\n          console.log(\"failed\", text);\n          Object.entries(JSON.parse(text)).forEach(([key, value])=>{\n            fail(`${key}: ${value}`);\n            console.log('faillllled')\n          });\n        }\n      // }\n    }\n  }\n\n  verifyTokens(access, set_access, success_Status)\n  \n  success_Status()\n};\n\n"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,6BAA3B;AACA,SAAQC,UAAR,QAAyB,wBAAzB,C,CACA;;AAGA,OAAO,MAAMC,YAAY,GAAG,OAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,QAAnC,EAA6CC,UAA7C,EAAyDC,MAAzD,EAAiEC,UAAjE,KAAgF;EAExG;EACA;EAEA,MAAMC,cAAc,GAAG,OAAMC,MAAN,EAAcC,YAAd,KAA+B;IACpDC,KAAK,CAAC,KAAD,CAAL;;IACF,IAAIF,MAAM,KAAM,GAAhB,EAAoB;MAElB;MACEG,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAHgB,CAIhB;;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEhB,UAAW,6CAA4CI,UAAW,aAAYC,QAAS,eAAcC,UAAW,EADzF,EAE1B;QACIW,MAAM,EAAE,KADZ;QAEIC,OAAO,EAAE;UACL,gBAAgB,kBADX;UAEL,iBAAkB,UAASP,YAAa;QAFnC;MAFb,CAF0B,CAA5B;MAUA,MAAMQ,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;;MACA,IAAIJ,QAAQ,CAACL,MAAT,KAAoB,GAAxB,EAA6B;QAC3BG,OAAO,CAACC,GAAR,CAAY,uBAAZ;QACAF,KAAK,CAAC,0CAAD,CAAL;QACAQ,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,QAAvB;QACA,OAAO,EAAP;MACD;;MACD,IAAIP,QAAQ,CAACL,MAAT,KAAoB,GAAxB,EAA6B;QAC3B;QACAG,OAAO,CAACC,GAAR,CAAY,mCAAZ;QACAZ,OAAO,CAACqB,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAD,CAAP;MACD,CAJD,MAIO;QACLN,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBK,IAAtB;QACAM,MAAM,CAACC,OAAP,CAAeH,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAf,EAAiCQ,OAAjC,CAAyC,QAAgB;UAAA,IAAf,CAACC,GAAD,EAAMC,KAAN,CAAe;UACvD1B,IAAI,CAAE,GAAEyB,GAAI,KAAIC,KAAM,EAAlB,CAAJ;UACAhB,OAAO,CAACC,GAAR,CAAY,YAAZ;QACD,CAHD;MAID,CAhCe,CAiClB;;IACD;EACF,CArCC;;EAuCFf,YAAY,CAACQ,MAAD,EAASC,UAAT,EAAqBC,cAArB,CAAZ;EAEAA,cAAc;AACf,CA/CM"},"metadata":{},"sourceType":"module"}