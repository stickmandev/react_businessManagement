{"ast":null,"code":"var _jsxFileName = \"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/Flow.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst addFirst = () => {\n  // console.log(\"preparing to send flow to the DOM\")\n  let newList = [];\n  const trEmpty = [];\n  const data = Array.from(streamList);\n  let total_balanceArr = []; // console.log('about to map stream and flow lists and set new list')\n\n  data.map(function (streamItem, id, arr) {\n    // console.log('mapping through stream list')\n    trEmpty.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"td\",\n        style: {\n          width: `${flowWidth}vw`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"td\",\n        style: {\n          width: `${flowWidth}vw`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true));\n\n    if (balances[streamItem.name] !== undefined) {\n      total_balanceArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"streamHeader\",\n          style: {\n            height: \"3.3vw\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"th\",\n            style: {\n              width: `${flowWidth}vw`\n            },\n            children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n              value: balances[streamItem.name].total_Credit,\n              displayType: 'text',\n              thousandSeparator: true // prefix={'$'}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"th\",\n            style: {\n              width: `${flowWidth}vw`\n            },\n            children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n              value: balances[streamItem.name].total_Debit,\n              displayType: 'text',\n              thousandSeparator: true // prefix={'$'}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"th\",\n          style: {\n            height: \"4vw\"\n          },\n          children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n            value: balances[streamItem.name].balance,\n            displayType: 'text',\n            thousandSeparator: true // prefix={'$'}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this));\n    }\n\n    return flowList.map(function (flowItem, pk, flow_arr) {\n      // console.log(\"mapping through flow list\")\n      if (flowItem.CashStream_Data.name === arr[id].name) {\n        // alert(arr[id].name)\n        const nullTd = [];\n        const reversNullTd = [];\n        const editDelete = [];\n\n        for (var i = 0; i < id; i++) {\n          nullTd.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"td\",\n              id: flowItem.id,\n              style: {\n                width: `${flowWidth}vw`\n              },\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"td\",\n              id: flowItem.id,\n              style: {\n                width: `${flowWidth}vw`\n              },\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true));\n        }\n\n        ;\n\n        for (var i = arr.length - 1; id < i; i--) {\n          reversNullTd.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"td\",\n              id: flowItem.id,\n              style: {\n                width: `${flowWidth}vw`\n              },\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"td\",\n              id: flowItem.id,\n              style: {\n                width: `${flowWidth}vw`\n              },\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true));\n        }\n\n        ;\n        const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g, \"\");\n        const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g, \"\");\n        const sortByDateTime = date + time;\n        newList.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tr\",\n            id: flowItem.id,\n            onMouseMove: mouseInEditDelete,\n            onMouseOver: mouseInEditDelete,\n            onMouseOut: mouseOutEditDelete,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tr sticky_offset\",\n              style: {\n                position: 'sticky',\n                left: `${0}`\n              },\n              onMouseMove: mouseInEditDelete,\n              onMouseOver: mouseInEditDelete,\n              onMouseOut: mouseOutEditDelete,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${snWidth}vw`\n                },\n                children: flow_arr.length - pk\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${dateWidth}vw`\n                },\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"YYYY/MM/DD HH:mm a\",\n                    children: flowItem.created_at\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td discriptionTd\",\n                id: flowItem.id,\n                style: {\n                  width: `${descriptionWidth}vw`\n                },\n                children: flowItem.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tr\",\n              children: [nullTd, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                  value: flowItem.Credit,\n                  displayType: 'text',\n                  thousandSeparator: true // prefix={'$'}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                  value: flowItem.Debit,\n                  displayType: 'text',\n                  thousandSeparator: true // prefix={'$'}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this), reversNullTd]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 27\n            }, this)]\n          }, sortByDateTime, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false));\n      }\n    });\n  }); // console.log(\"finished setting new flow list whiling mapping\")\n  // console.log('new list: '+newList)\n  // console.log(newList)\n  // console.log(\"setting flow\")\n\n  setFlow(newList);\n  setEmptyTR(trEmpty);\n  setTotal_balance( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'sticky',\n        left: `${0}`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"total_balance_dummyBlock\",\n        style: {\n          position: 'sticky',\n          left: `${0}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Total($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Balance($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), total_balanceArr]\n  }, void 0, true));\n};\n\nconst addMore_cashFlow = () => {\n  if (page !== 1) {\n    // let newList = []\n    const trEmpty = [];\n    const data = Array.from(streamList);\n    let total_balanceArr = []; // console.log('about to map stream and flow lists and set new list')\n\n    data.map(function (streamItem, id, arr) {\n      // console.log('mapping through stream list')\n      trEmpty.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"td\",\n          style: {\n            width: `${flowWidth}vw`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"td\",\n          style: {\n            width: `${flowWidth}vw`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true));\n\n      if (balances[streamItem.name] !== undefined) {\n        total_balanceArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"streamHeader\",\n            style: {\n              height: \"3.3vw\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"th\",\n              style: {\n                width: `${flowWidth}vw`\n              },\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: balances[streamItem.name].total_Credit,\n                displayType: 'text',\n                thousandSeparator: true // prefix={'$'}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"th\",\n              style: {\n                width: `${flowWidth}vw`\n              },\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: balances[streamItem.name].total_Debit,\n                displayType: 'text',\n                thousandSeparator: true // prefix={'$'}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"th\",\n            style: {\n              height: \"4vw\"\n            },\n            children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n              value: balances[streamItem.name].balance,\n              displayType: 'text',\n              thousandSeparator: true // prefix={'$'}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }, this));\n      } // let sn = flowSN\n      // setFlowSN(flow_arr.length-pk)  \n      // console.log(sn)  \n\n\n      return flowList.map(function (flowItem, pk, flow_arr) {\n        // console.log(\"mapping through flow list\")\n        setFlowSN(flow_arr.length - pk);\n\n        if (flowItem.CashStream_Data.name === arr[id].name) {\n          // alert(arr[id].name)\n          const nullTd = [];\n          const reversNullTd = [];\n          const editDelete = [];\n\n          for (var i = 0; i < id; i++) {\n            nullTd.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true));\n          }\n\n          ;\n\n          for (var i = arr.length - 1; id < i; i--) {\n            reversNullTd.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true));\n          }\n\n          ;\n          const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g, \"\");\n          const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g, \"\");\n          const sortByDateTime = date + time;\n          setFlow(oldArray => [/*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tr\",\n              id: flowItem.id,\n              onMouseMove: mouseInEditDelete,\n              onMouseOver: mouseInEditDelete,\n              onMouseOut: mouseOutEditDelete,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tr sticky_offset\",\n                style: {\n                  position: 'sticky',\n                  left: `${0}`\n                },\n                onMouseMove: mouseInEditDelete,\n                onMouseOver: mouseInEditDelete,\n                onMouseOut: mouseOutEditDelete,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${snWidth}vw`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${dateWidth}vw`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    style: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Moment, {\n                      format: \"YYYY/MM/DD HH:mm a\",\n                      children: flowItem.created_at\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td discriptionTd\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${descriptionWidth}vw`\n                  },\n                  children: flowItem.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tr\",\n                children: [nullTd, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${flowWidth}vw`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: flowItem.Credit,\n                    displayType: 'text',\n                    thousandSeparator: true // prefix={'$'}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${flowWidth}vw`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: flowItem.Debit,\n                    displayType: 'text',\n                    thousandSeparator: true // prefix={'$'}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 33\n                }, this), reversNullTd]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 31\n              }, this)]\n            }, sortByDateTime, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false), ...oldArray]);\n        }\n      });\n    }); // console.log(\"finished setting new flow list whiling mapping\")\n    // console.log(\"setting flow\")\n\n    setEmptyTR(trEmpty);\n    setTotal_balance( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'sticky',\n          left: `${0}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"total_balance_dummyBlock\",\n          style: {\n            position: 'sticky',\n            left: `${0}`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Total($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Balance($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }, this), total_balanceArr]\n    }, void 0, true));\n  }\n};","map":{"version":3,"names":["addFirst","newList","trEmpty","data","Array","from","streamList","total_balanceArr","map","streamItem","id","arr","push","width","flowWidth","balances","name","undefined","height","total_Credit","total_Debit","balance","flowList","flowItem","pk","flow_arr","CashStream_Data","nullTd","reversNullTd","editDelete","i","length","date","moment","Date","created_at","format","replace","time","sortByDateTime","mouseInEditDelete","mouseOutEditDelete","position","left","snWidth","dateWidth","textAlign","descriptionWidth","description","Credit","Debit","setFlow","setEmptyTR","setTotal_balance","addMore_cashFlow","page","setFlowSN","oldArray"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/Flow.js"],"sourcesContent":["  const addFirst = () => {\n    // console.log(\"preparing to send flow to the DOM\")\n\n    let newList = []\n    const trEmpty = []\n    const data = Array.from(streamList)\n\n    let total_balanceArr = []\n\n    // console.log('about to map stream and flow lists and set new list')\n    data.map(\n        function(streamItem, id, arr){\n          // console.log('mapping through stream list')\n\n          trEmpty.push(\n            <>\n              <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n              <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n            </>\n          );\n\n          if (balances[streamItem.name] !== undefined){\n            total_balanceArr.push(\n              <div>\n                <div className='streamHeader' style={{height:\"3.3vw\"}}>\n                  <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n                    <NumberFormat\n                      value={balances[streamItem.name].total_Credit}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      // prefix={'$'}\n                    />\n                  </div>\n                  <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n                    <NumberFormat\n                      value={balances[streamItem.name].total_Debit}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      // prefix={'$'}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"th\" style={{height:\"4vw\"}}>\n                  <NumberFormat\n                    value={balances[streamItem.name].balance}\n                    displayType={'text'}\n                    thousandSeparator={true}\n                    // prefix={'$'}\n                  />\n                </div>\n              </div>\n            )\n          }\n          \n          return (\n              flowList.map(\n                function(flowItem, pk, flow_arr){\n                  // console.log(\"mapping through flow list\")\n\n                  if (flowItem.CashStream_Data.name === arr[id].name){\n                    // alert(arr[id].name)\n                  const nullTd = [];\n                  const reversNullTd = [];\n                  const editDelete = [];\n\n                    for( var i =0; i < id; i++ ){\n                      nullTd.push(\n                        <>\n                          <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                          <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                        </>\n                      );\n                    };\n\n                    for(var i = (arr.length-1); id < i; i-- ){\n                      reversNullTd.push(\n                        <>\n                          <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                          <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                        </>\n                      );\n\n                    };\n\n                    const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g,\"\");\n                    const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g,\"\");\n                    const sortByDateTime = date+time\n                    \n                    newList.push( \n                      <>\n                        <div  className=\"tr\" key={sortByDateTime} id={flowItem.id} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete} >\n                          <div className=\"tr sticky_offset\" style={{ position: 'sticky', left: `${0}`}} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete}>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${snWidth}vw`}}>{flow_arr.length-pk}</div> \n                            <div className=\"td\" id={flowItem.id} style={{width:`${dateWidth}vw`}}> \n                              <small style={{textAlign:'center'}}>\n                                <Moment format=\"YYYY/MM/DD HH:mm a\">\n                                  {flowItem.created_at}\n                                </Moment>\n                              </small>\n                            </div>\n                            <div className=\"td discriptionTd\" id={flowItem.id} style={{width:`${descriptionWidth}vw`}}>{flowItem.description}</div>\n                          </div>\n                          {/* {moment(new Date(flowItem.created_at.slice(0, 10))).format('DD-MM-YYYY')} */}\n                          <div className='tr'>\n                            {nullTd}\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n                              \n                              <NumberFormat\n                                value={flowItem.Credit}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                // prefix={'$'}\n                              />\n                            </div>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n                            <NumberFormat\n                                value={flowItem.Debit}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                // prefix={'$'}\n                              />\n                            </div> \n                            {reversNullTd}\n                          </div>\n                        </div>\n                      </>\n                    )\n                  }\n                }\n              )\n        )\n        }\n      )\n      \n    // console.log(\"finished setting new flow list whiling mapping\")\n    // console.log('new list: '+newList)\n    // console.log(newList)\n    // console.log(\"setting flow\")\n    setFlow( newList );\n    setEmptyTR(trEmpty)\n    setTotal_balance(\n      <>\n        <div style={{ position: 'sticky', left: `${0}`}}>\n          <div id='total_balance_dummyBlock' style={{ position: 'sticky', left: `${0}`}}>\n            <strong><p>Total($)</p></strong>\n            <strong><p>Balance($)</p></strong>\n          </div>\n        </div>\n        {total_balanceArr}\n      </>\n    )\n  }\n\n  const addMore_cashFlow = () => {\n    if(page !== 1){\n        // let newList = []\n        const trEmpty = []\n        const data = Array.from(streamList)\n  \n        let total_balanceArr = []\n  \n        // console.log('about to map stream and flow lists and set new list')\n        data.map(\n            function(streamItem, id, arr){\n              // console.log('mapping through stream list')\n  \n              trEmpty.push(\n                <>\n                  <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n                  <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n                </>\n              );\n  \n              if (balances[streamItem.name] !== undefined){\n                total_balanceArr.push(\n                  <div>\n                    <div className='streamHeader' style={{height:\"3.3vw\"}}>\n                      <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n                        <NumberFormat\n                          value={balances[streamItem.name].total_Credit}\n                          displayType={'text'}\n                          thousandSeparator={true}\n                          // prefix={'$'}\n                        />\n                      </div>\n                      <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n                        <NumberFormat\n                          value={balances[streamItem.name].total_Debit}\n                          displayType={'text'}\n                          thousandSeparator={true}\n                          // prefix={'$'}\n                        />\n                      </div>\n                    </div>\n      \n                    <div className=\"th\" style={{height:\"4vw\"}}>\n                      <NumberFormat\n                        value={balances[streamItem.name].balance}\n                        displayType={'text'}\n                        thousandSeparator={true}\n                        // prefix={'$'}\n                      />\n                    </div>\n                  </div>\n                )\n              }\n              \n              // let sn = flowSN\n              // setFlowSN(flow_arr.length-pk)  \n              // console.log(sn)  \n              return (\n                flowList.map(\n                  function(flowItem, pk, flow_arr){\n                    // console.log(\"mapping through flow list\")\n                    setFlowSN(flow_arr.length-pk)  \n                    \n                    if (flowItem.CashStream_Data.name === arr[id].name){\n                      // alert(arr[id].name)\n                    const nullTd = [];\n                    const reversNullTd = [];\n                    const editDelete = [];\n  \n                      for( var i =0; i < id; i++ ){\n                        nullTd.push(\n                          <>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                          </>\n                        );\n                      };\n  \n                      for(var i = (arr.length-1); id < i; i-- ){\n                        reversNullTd.push(\n                          <>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                          </>\n                        );\n  \n                      };\n  \n                      const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g,\"\");\n                      const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g,\"\");\n                      const sortByDateTime = date+time\n                      setFlow(oldArray => [ ( \n                          <>\n                            <div  className=\"tr\" key={sortByDateTime} id={flowItem.id} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete} >\n                              <div className=\"tr sticky_offset\" style={{ position: 'sticky', left: `${0}`}} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete}>\n                                {/* <div className=\"td\" id={flowItem.id} style={{width:`${snWidth}vw`}}>{flowSN+flow_arr.length-pk}</div>  */}\n                                <div className=\"td\" id={flowItem.id} style={{width:`${snWidth}vw`}}></div> \n                                <div className=\"td\" id={flowItem.id} style={{width:`${dateWidth}vw`}}> \n                                  <small style={{textAlign:'center'}}>\n                                    <Moment format=\"YYYY/MM/DD HH:mm a\">\n                                      {flowItem.created_at}\n                                    </Moment>\n                                  </small>\n                                </div>\n                                <div className=\"td discriptionTd\" id={flowItem.id} style={{width:`${descriptionWidth}vw`}}>{flowItem.description}</div>\n                              </div>\n                              {/* {moment(new Date(flowItem.created_at.slice(0, 10))).format('DD-MM-YYYY')} */}\n                              <div className='tr'>\n                                {nullTd}\n                                <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n                                  \n                                  <NumberFormat\n                                    value={flowItem.Credit}\n                                    displayType={'text'}\n                                    thousandSeparator={true}\n                                    // prefix={'$'}\n                                  />\n                                </div>\n                                <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n                                <NumberFormat\n                                    value={flowItem.Debit}\n                                    displayType={'text'}\n                                    thousandSeparator={true}\n                                    // prefix={'$'}\n                                  />\n                                </div> \n                                {reversNullTd}\n                              </div>\n                            </div>\n                          </>\n                        ), ...oldArray\n                      ])\n                    }\n                  }\n                )\n              )\n            }\n          )\n          \n        // console.log(\"finished setting new flow list whiling mapping\")\n        // console.log(\"setting flow\")\n        setEmptyTR(trEmpty)\n        setTotal_balance(\n          <>\n            <div style={{ position: 'sticky', left: `${0}`}}>\n              <div id='total_balance_dummyBlock' style={{ position: 'sticky', left: `${0}`}}>\n                <strong><p>Total($)</p></strong>\n                <strong><p>Balance($)</p></strong>\n              </div>\n            </div>\n            {total_balanceArr}\n          </>\n        )  \n    }   \n\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}