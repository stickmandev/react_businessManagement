{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\n\nconst useEffectOnce = effect => {\n  _s();\n\n  const destroyFunc = useRef();\n  const effectCalled = useRef(false);\n  const renderAfterCalled = useRef(false);\n  const [val, setVal] = useState(0);\n\n  if (effectCalled.current) {\n    renderAfterCalled.current = true;\n  }\n\n  useEffect(() => {\n    // only execute the effect first time around\n    if (!effectCalled.current) {\n      destroyFunc.current = effect();\n      effectCalled.current = true;\n    } // this forces one render after the effect is run\n\n\n    setVal(val => val + 1);\n    return () => {\n      // if the comp didn't render since the useEffect was called,\n      // we know it's the dummy React cycle\n      if (!renderAfterCalled.current) {\n        return;\n      }\n\n      if (destroyFunc.current) {\n        destroyFunc.current();\n      }\n    };\n  }, []);\n};\n\n_s(useEffectOnce, \"HYhMZy6Xz6sFfDRJNxQPOEPefdA=\");","map":{"version":3,"names":["useEffect","useState","useRef","useEffectOnce","effect","destroyFunc","effectCalled","renderAfterCalled","val","setVal","current"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/custom_Hooks/useEffectOnce.js"],"sourcesContent":["import {useEffect, useState, useRef} from 'react'\n\n\nconst useEffectOnce = ( effect )=> {\n\n    const destroyFunc = useRef();\n    const effectCalled = useRef(false);\n    const renderAfterCalled = useRef(false);\n    const [val, setVal] = useState(0);\n  \n    if (effectCalled.current) {\n        renderAfterCalled.current = true;\n    }\n  \n    useEffect( ()=> {\n  \n        // only execute the effect first time around\n        if (!effectCalled.current) { \n          destroyFunc.current = effect();\n          effectCalled.current = true;\n        }\n  \n        // this forces one render after the effect is run\n        setVal(val => val + 1);\n  \n        return ()=> {\n          // if the comp didn't render since the useEffect was called,\n          // we know it's the dummy React cycle\n          if (!renderAfterCalled.current) { return; }\n          if (destroyFunc.current) { destroyFunc.current(); }\n        };\n    }, []);\n  };\n"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA0C,OAA1C;;AAGA,MAAMC,aAAa,GAAKC,MAAF,IAAa;EAAA;;EAE/B,MAAMC,WAAW,GAAGH,MAAM,EAA1B;EACA,MAAMI,YAAY,GAAGJ,MAAM,CAAC,KAAD,CAA3B;EACA,MAAMK,iBAAiB,GAAGL,MAAM,CAAC,KAAD,CAAhC;EACA,MAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;;EAEA,IAAIK,YAAY,CAACI,OAAjB,EAA0B;IACtBH,iBAAiB,CAACG,OAAlB,GAA4B,IAA5B;EACH;;EAEDV,SAAS,CAAE,MAAK;IAEZ;IACA,IAAI,CAACM,YAAY,CAACI,OAAlB,EAA2B;MACzBL,WAAW,CAACK,OAAZ,GAAsBN,MAAM,EAA5B;MACAE,YAAY,CAACI,OAAb,GAAuB,IAAvB;IACD,CANW,CAQZ;;;IACAD,MAAM,CAACD,GAAG,IAAIA,GAAG,GAAG,CAAd,CAAN;IAEA,OAAO,MAAK;MACV;MACA;MACA,IAAI,CAACD,iBAAiB,CAACG,OAAvB,EAAgC;QAAE;MAAS;;MAC3C,IAAIL,WAAW,CAACK,OAAhB,EAAyB;QAAEL,WAAW,CAACK,OAAZ;MAAwB;IACpD,CALD;EAMH,CAjBQ,EAiBN,EAjBM,CAAT;AAkBD,CA7BH;;GAAMP,a"},"metadata":{},"sourceType":"module"}