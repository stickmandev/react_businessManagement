{"ast":null,"code":"import _regeneratorRuntime from\"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{backendURL}from\"../../backendURL\";export var verifyTokens=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(old_access,set_Access,success_Status){var refreshtoken,verify_access_token,get_tokens,access_text,verify_refresh_token;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:refreshtoken=localStorage.getItem(\"refreshToken\");// console.log(\"verifying tokens......\")\n// Verifying access token___________________________________________________________________________________\n// console.log(\"verifying access token......\")\n_context.next=3;return fetch(\"\".concat(backendURL,\"/user/verifyAccess/\"),{method:'POST',headers:{'Accept':'Application/JSON','Content-Type':'Application/json'},body:JSON.stringify({access:\"\".concat(old_access)})});case 3:verify_access_token=_context.sent;if(!(verify_access_token.status===400)){_context.next=22;break;}_context.next=7;return fetch(\"\".concat(backendURL,\"/user/refresh/\"),{method:'POST',headers:{'Accept':'Application/JSON','Content-Type':'Application/json'},body:JSON.stringify({refresh:\"\".concat(refreshtoken)})});case 7:get_tokens=_context.sent;_context.next=10;return get_tokens.text();case 10:access_text=_context.sent;if(!(get_tokens.status==200)){_context.next=16;break;}// console.log(\"fetching access and refresh token succesful\")\n// console.log(\"setting access and refresh token\")\nlocalStorage.setItem(\"refreshToken\",JSON.parse(access_text).refresh);set_Access(JSON.parse(access_text).access);// console.log('finished setting tokens')\n_context.next=16;return success_Status(get_tokens.status,JSON.parse(access_text).access);case 16:if(!(get_tokens.status===(400||401))){_context.next=22;break;}_context.next=19;return fetch(\"\".concat(backendURL,\"/user/verifyRefresh/\"),{method:'POST',headers:{'Accept':'Application/JSON','Content-Type':'application/json'},body:JSON.stringify({refresh:\"\".concat(refreshtoken)})});case 19:verify_refresh_token=_context.sent;// console.log('finished verifying refresh token')\nif(verify_refresh_token.status===(401||400)){alert(\"session expired, please log in again\");// console.log('redirecting to login')\nwindow.location.assign(\"/login\");}if(verify_refresh_token.status===200){// console.log(\"refresh token is valid\")\n}case 22:;if(!(verify_access_token.status===200)){_context.next=26;break;}_context.next=26;return success_Status(verify_access_token.status,old_access);case 26:case\"end\":return _context.stop();}}},_callee);}));return function verifyTokens(_x,_x2,_x3){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["backendURL","verifyTokens","old_access","set_Access","success_Status","refreshtoken","localStorage","getItem","fetch","method","headers","body","JSON","stringify","access","verify_access_token","status","refresh","get_tokens","text","access_text","setItem","parse","verify_refresh_token","alert","window","location","assign"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/auths/verifyTokens.js"],"sourcesContent":["import {backendURL} from \"../../backendURL\"\n\nexport const verifyTokens = async (old_access, set_Access, success_Status) => {\n    \n    const refreshtoken =  localStorage.getItem(\"refreshToken\");\n    // console.log(\"verifying tokens......\")\n    \n    // Verifying access token___________________________________________________________________________________\n    // console.log(\"verifying access token......\")\n    const verify_access_token = await fetch(\n      `${backendURL}/user/verifyAccess/`,\n      {\n          method: 'POST',\n          headers: {\n              'Accept': 'Application/JSON',\n              'Content-Type': 'Application/json',\n          },\n          body: JSON.stringify({\n            access: `${old_access}`,\n          })\n      }\n    );\n    // console.log(\"finished verifying access token\")\n  \n    if (verify_access_token.status === 400 ) {\n        // console.log(\"access token expired......: \"+verify_access_token.status)\n\n        // fetching new access and refresh token___________________________________________________________________________________\n        // console.log(\"fetching new access and refresh token......\")\n        const get_tokens = await fetch(\n            `${backendURL}/user/refresh/`,\n            {\n                method: 'POST',\n                headers: {\n                    'Accept': 'Application/JSON',\n                    'Content-Type': 'Application/json',\n                },\n                body: JSON.stringify({\n                    refresh: `${refreshtoken}`,\n                })\n            }\n        );\n        const access_text = await get_tokens.text();\n        // console.log('finished fetching access and refresh token')\n\n        // console.log(get_tokens.status)\n        \n        if (get_tokens.status == 200) {\n            // console.log(\"fetching access and refresh token succesful\")\n            // console.log(\"setting access and refresh token\")\n            localStorage.setItem(\"refreshToken\", JSON.parse(access_text).refresh);\n            set_Access(JSON.parse(access_text).access)\n            // console.log('finished setting tokens')\n            await success_Status(get_tokens.status, JSON.parse(access_text).access)\n        }\n\n        if (get_tokens.status === (400||401)) {\n            // console.log(\"failed to verify access and refresh token\")\n\n            // Verifying refresh token__________________________________________________________________________________\n            // console.log('Verifying refresh token....')\n            const verify_refresh_token = await fetch(\n            `${backendURL}/user/verifyRefresh/`,\n            {\n                method: 'POST',\n                headers: {\n                    'Accept': 'Application/JSON',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    refresh: `${refreshtoken}`,\n                })\n            }\n            );\n            // console.log('finished verifying refresh token')\n            \n        \n            if (verify_refresh_token.status === (401||400)) {\n                alert(\"session expired, please log in again\")\n                // console.log('redirecting to login')\n                window.location.assign(\"/login\");\n            }\n\n            if (verify_refresh_token.status === 200) {\n                // console.log(\"refresh token is valid\")\n            }\n      }\n  \n    };\n\n    if (verify_access_token.status === 200 ) {\n        // console.log(\"access token is valid\")\n        await success_Status(verify_access_token.status, old_access)\n        // console.log('access token verified')\n    }\n    \n}\n"],"mappings":"wZAAA,OAAQA,UAAR,KAAyB,kBAAzB,CAEA,MAAO,IAAMC,aAAY,4FAAG,iBAAOC,UAAP,CAAmBC,UAAnB,CAA+BC,cAA/B,qMAElBC,YAFkB,CAEFC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAFE,CAGxB;AAEA;AACA;AANwB,sBAOUC,MAAK,WAClCR,UADkC,wBAErC,CACIS,MAAM,CAAE,MADZ,CAEIC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFb,CAMIC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,MAAM,WAAKZ,UAAL,CADa,CAAf,CANV,CAFqC,CAPf,QAOlBa,mBAPkB,oBAsBpBA,mBAAmB,CAACC,MAApB,GAA+B,GAtBX,iDA2BKR,MAAK,WACvBR,UADuB,mBAE1B,CACIS,MAAM,CAAE,MADZ,CAEIC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFb,CAMIC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBI,OAAO,WAAKZ,YAAL,CADU,CAAf,CANV,CAF0B,CA3BV,QA2Bda,UA3Bc,sCAwCMA,WAAU,CAACC,IAAX,EAxCN,SAwCdC,WAxCc,oBA6ChBF,UAAU,CAACF,MAAX,EAAqB,GA7CL,2BA8ChB;AACA;AACAV,YAAY,CAACe,OAAb,CAAqB,cAArB,CAAqCT,IAAI,CAACU,KAAL,CAAWF,WAAX,EAAwBH,OAA7D,EACAd,UAAU,CAACS,IAAI,CAACU,KAAL,CAAWF,WAAX,EAAwBN,MAAzB,CAAV,CACA;AAlDgB,uBAmDVV,eAAc,CAACc,UAAU,CAACF,MAAZ,CAAoBJ,IAAI,CAACU,KAAL,CAAWF,WAAX,EAAwBN,MAA5C,CAnDJ,cAsDhBI,UAAU,CAACF,MAAX,IAAuB,KAAK,GAA5B,CAtDgB,kDA2DmBR,MAAK,WACrCR,UADqC,yBAExC,CACIS,MAAM,CAAE,MADZ,CAEIC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFb,CAMIC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBI,OAAO,WAAKZ,YAAL,CADU,CAAf,CANV,CAFwC,CA3DxB,SA2DVkB,oBA3DU,eAwEhB;AAGA,GAAIA,oBAAoB,CAACP,MAArB,IAAiC,KAAK,GAAtC,CAAJ,CAAgD,CAC5CQ,KAAK,CAAC,sCAAD,CAAL,CACA;AACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,QAAvB,EACH,CAED,GAAIJ,oBAAoB,CAACP,MAArB,GAAgC,GAApC,CAAyC,CACrC;AACH,CAnFe,QAsFvB,CAtFuB,KAwFpBD,mBAAmB,CAACC,MAApB,GAA+B,GAxFX,kDA0FdZ,eAAc,CAACW,mBAAmB,CAACC,MAArB,CAA6Bd,UAA7B,CA1FA,wDAAH,kBAAZD,aAAY,oDAAlB"},"metadata":{},"sourceType":"module"}