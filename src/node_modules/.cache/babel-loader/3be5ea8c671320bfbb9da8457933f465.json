{"ast":null,"code":"var _jsxFileName = \"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Answer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increase_CurrentNum } from './slices/currentNum_Slice';\nimport { increase_Data_Id } from './slices/data_Id_Slice';\nimport { increase_answeredCorrect } from './slices/answeredCorrect_Slice';\nimport { increase_answeredFailed } from './slices/answeredFailed_Slice';\nimport data from \"../questions.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Answer() {\n  _s();\n\n  const data_Id = useSelector(state => state.data_Id.value);\n  const numOfQuestions = useSelector(state => state.numOfQuestions.value);\n  const currentNum = useSelector(state => state.currentNum.value);\n  const [answers, setAnswers] = React.useState([]);\n  const [answerStatus, setAnswerStatus] = React.useState([]);\n  const [answersArr, setAnswersArr] = React.useState([]);\n  const [nextBTN, setnextBTN] = React.useState(true);\n  const [nextBTN_Disp, setNextBTN_Disp] = React.useState(\"hidden\");\n  const dispatch = useDispatch();\n\n  const nextQuestion = () => {\n    if (currentNum < numOfQuestions) {\n      dispatch(increase_CurrentNum());\n      dispatch(increase_Data_Id());\n      setNextBTN_Disp(\"hidden\");\n    }\n\n    const answerClass = document.getElementsByClassName(\"answers\");\n\n    for (let i = 0; i < answerClass.length; i++) {\n      answerClass[i].disabled = false;\n    }\n\n    setnextBTN(true);\n    setAnswerStatus(\"\");\n  };\n\n  const validateAns = e => {\n    if (e.target.innerText === decodeURIComponent(data[data_Id].correct_answer)) {\n      setAnswerStatus(\"Correct!\");\n      dispatch(increase_answeredCorrect());\n      setNextBTN_Disp(\"visible\");\n    } else {\n      setAnswerStatus(\"Sorry!\");\n      dispatch(increase_answeredFailed());\n      setNextBTN_Disp(\"visible\");\n    }\n\n    const answerClass = document.getElementsByClassName(\"answers\");\n\n    for (let i = 0; i < answerClass.length; i++) {\n      answerClass[i].disabled = true;\n    }\n\n    setnextBTN(false);\n  };\n\n  useEffect(() => {\n    const answersConbinedArr = [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"answers\",\n      id: \"corr\",\n      onClick: validateAns,\n      children: decodeURIComponent(data[data_Id].correct_answer)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)];\n    data[data_Id].incorrect_answers.map((answers, pk, answersObj) => {\n      answersConbinedArr.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"answers\",\n        onClick: validateAns,\n        children: decodeURIComponent(answers)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this));\n    });\n\n    const shuffleArray = array => {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    };\n\n    shuffleArray(answersConbinedArr);\n    setAnswersArr(answersConbinedArr);\n  }, [data_Id]);\n  useMemo(() => {\n    setAnswers(answersArr);\n  }, [answersArr]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"answers\",\n      children: answers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"answerStatus\",\n      children: answerStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"nextQuestion\",\n      onClick: nextQuestion,\n      disabled: nextBTN,\n      style: {\n        visibility: nextBTN_Disp\n      },\n      children: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Answer, \"elRSyjYwmTQ2i4MvcAWeWJVMRoI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Answer;\nexport default Answer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useSelector","useDispatch","increase_CurrentNum","increase_Data_Id","increase_answeredCorrect","increase_answeredFailed","data","Answer","data_Id","state","value","numOfQuestions","currentNum","answers","setAnswers","answerStatus","setAnswerStatus","answersArr","setAnswersArr","nextBTN","setnextBTN","nextBTN_Disp","setNextBTN_Disp","dispatch","nextQuestion","answerClass","document","getElementsByClassName","i","length","disabled","validateAns","e","target","innerText","decodeURIComponent","correct_answer","answersConbinedArr","incorrect_answers","map","pk","answersObj","push","shuffleArray","array","j","Math","floor","random","temp","visibility"],"sources":["/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Answer.js"],"sourcesContent":["import React, {useState, useEffect, useMemo} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {increase_CurrentNum} from './slices/currentNum_Slice'\nimport {increase_Data_Id} from './slices/data_Id_Slice'\nimport {increase_answeredCorrect} from './slices/answeredCorrect_Slice'\nimport {increase_answeredFailed} from './slices/answeredFailed_Slice'\nimport data from \"../questions.json\"  \n\nfunction Answer() {\n    const data_Id = useSelector((state) => state.data_Id.value)\n    const numOfQuestions = useSelector((state) => state.numOfQuestions.value)\n    const currentNum = useSelector((state) => state.currentNum.value)\n    \n    const [answers, setAnswers] = React.useState([]);\n    const [answerStatus, setAnswerStatus] = React.useState([]);\n    const [answersArr, setAnswersArr] = React.useState([]);\n    const [nextBTN, setnextBTN] = React.useState(true);\n    const [nextBTN_Disp, setNextBTN_Disp] = React.useState(\"hidden\");\n\n    const dispatch = useDispatch()\n    \n    const nextQuestion =()=>{\n        if(currentNum<numOfQuestions){\n            dispatch(increase_CurrentNum())\n            dispatch(increase_Data_Id())\n            setNextBTN_Disp(\"hidden\")\n        }\n        const answerClass = document.getElementsByClassName(\"answers\")\n        for(let i=0; i<answerClass.length; i++){\n            answerClass[i].disabled = false\n        }\n        setnextBTN(true)\n        setAnswerStatus(\"\")\n    }\n\n    const validateAns =(e)=>{\n        if(e.target.innerText===decodeURIComponent(data[data_Id].correct_answer)){\n            setAnswerStatus(\"Correct!\")\n            dispatch(increase_answeredCorrect())\n            setNextBTN_Disp(\"visible\")\n        }else{\n            setAnswerStatus(\"Sorry!\")\n            dispatch(increase_answeredFailed())\n            setNextBTN_Disp(\"visible\")\n\n        }\n        const answerClass = document.getElementsByClassName(\"answers\")\n        for(let i=0; i<answerClass.length; i++){\n            answerClass[i].disabled = true\n        }\n        setnextBTN(false)\n    }\n\n\n    useEffect(\n        () => {\n            const answersConbinedArr = [\n                <button className='answers' id='corr' onClick={validateAns} >\n                    {decodeURIComponent(data[data_Id].correct_answer)}\n                </button>\n            ];\n            \n            data[data_Id].incorrect_answers.map(  \n                (answers, pk, answersObj)=>{\n                    answersConbinedArr.push(\n                        <button className='answers' onClick={validateAns} >\n                            {decodeURIComponent(answers)}\n                        </button>\n                    )\n                }\n            );\n\n            const shuffleArray = array => {\n                for (let i = array.length - 1; i > 0; i--) {\n                  const j = Math.floor(Math.random() * (i + 1));\n                  const temp = array[i];\n                  array[i] = array[j];\n                  array[j] = temp;\n                }\n            };\n    \n            shuffleArray(answersConbinedArr);\n            setAnswersArr(answersConbinedArr);\n        }, [data_Id]\n    );\n\n\n    useMemo(\n        ()=>{\n            setAnswers(answersArr)  \n        }, [answersArr]\n    )\n\n\n    return (\n        <>\n            <div id='answers'>\n                {answers}\n            </div>\n\n            <h2 id='answerStatus' >{answerStatus}</h2>\n\n            <button id='nextQuestion'  onClick={nextQuestion} disabled={nextBTN} style={{visibility:nextBTN_Disp}}>next</button>\n        </>\n    )\n}\n\nexport default Answer"],"mappings":"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"},"metadata":{},"sourceType":"module"}