{"ast":null,"code":"import { useState, useEffect, useMemo } from 'react';\nimport { get_cashStream } from './api/cashStream_CRUD';\nimport useAccess from \"../../auths/accessToken\";\nimport useGlobalState from \"../../../Store_&_State/GlobalState\";\nimport { useEffectOnce } from \"../../../custom_Hooks/useEffectOnce\";\nimport Ledger from '../Ledger';\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\n\nfunction Streams() {// const {streamList, setStreamList} = useGlobalState([]);\n  // const {stream, setStream} = useGlobalState([]);\n  // const [StreamPages, setStreamPages] = useState([]);\n  // const [Streampage, setStreamPage] = useState(0);\n  // const {access, setAccess} = useAccess('')\n  // const streamWidth = 14.4\n  // const periodWidth = 28\n  // const flowWidth = streamWidth/2\n  // const snWidth = periodWidth*(0.1)\n  // const dateWidth = periodWidth*(0.2)\n  // const descriptionWidth = periodWidth*(0.7)\n  // Ledger(stream.length)\n  //   // CashStream data management----------------------------------------------------------------------------------------------------\n  // const stream_Success = async(data) => {\n  //   // alert(\"d\")\n  //   await setStreamList(data.results);\n  //   const newPages = [];\n  //   if (data.count > 10) {\n  //     for (let i=0; i<Math.ceil(data.count / 10); i++) {\n  //       newPages.push({\n  //         name: (i+1).toString(),\n  //         page: i,\n  //       });\n  //       console.log(\"page\",i);\n  //     }\n  //     if (Streampage > newPages.length-1) {\n  //       await setStreamPage(Streampage-1);\n  //     }\n  //   } else {\n  //     await setStreamPage(0);\n  //   }\n  //   await setStreamPages(newPages);\n  // };\n  // const set_Access = (Access_token) => {\n  //   setAccess(Access_token)\n  // }\n  // // console.log(access)\n  // useEffectOnce(\n  //   () => {\n  //     set_Access()\n  //   },[]\n  // )\n  // const getStreamData = async()=>{\n  //   await get_cashStream(Streampage, stream_Success, (text)=>{console.log(\"Error: \", text)}, access, set_Access );\n  // };\n  // useEffectOnce(()=>{\n  // // useEffect(()=>{\n  //   getStreamData();\n  // }, [access]);\n  // useEffect(() => {\n  //   setStream(\n  //     streamList.map(function(item){\n  //       return(\n  //         <div >\n  //           <div className=\"th stream th_stream\" >{item.name}</div>\n  //           <div className='streamHeader' style={{height:\"3.3vw\"}}>\n  //             <div className=\"th\" style={{width:`${flowWidth}vw`}}>Credit</div>\n  //             <div className=\"th\" style={{width:`${flowWidth}vw`}}>Debit</div>\n  //           </div>\n  //         </div>\n  //       )\n  //     })\n  //   );\n  // }, [streamList]);\n  //   return (\n  //   <ScrollSyncPane>\n  //     <div id=\"thead\"  >\n  //       <div className=\"tr\" >\n  //         <div style={{ position: 'sticky', left: `${0}`}}>\n  //           <div className=\"th\" id=\"period\" style={{height:\"4vw\"}}>12/04/22 - 12/04/22</div>\n  //           <div className=\"tr\" id=\"trSecondRow\" style={{height:\"3.3vw\"}}>\n  //             <div  className=\"th\" id=\"snHeader\" style={{width:`${snWidth}vw`}}>S/N</div>\n  //             <div  className=\"th\" id=\"dateHeader\" style={{width:`${dateWidth}vw`}}>Date</div>\n  //             <div   className=\"th\" id=\"descriptionHeader\" style={{width:`${descriptionWidth}vw`}}>Description</div>\n  //           </div>\n  //         </div>\n  //         <div className='tr' id='stream'>\n  //           {stream} \n  //         </div>\n  //       </div>\n  //         {/* <div id=\"dummybar\" ></div>          */}\n  //     </div>\n  //     </ScrollSyncPane>\n  //   )\n}\n\n_c = Streams;\nexport default Streams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Streams\");","map":{"version":3,"names":["useState","useEffect","useMemo","get_cashStream","useAccess","useGlobalState","useEffectOnce","Ledger","ScrollSync","ScrollSyncPane","Streams"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/Streams.js"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport {get_cashStream} from './api/cashStream_CRUD'\nimport useAccess from \"../../auths/accessToken\"\nimport useGlobalState from \"../../../Store_&_State/GlobalState\"\nimport {useEffectOnce} from \"../../../custom_Hooks/useEffectOnce\"\nimport Ledger from '../Ledger'\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\n\nfunction Streams() {\n  // const {streamList, setStreamList} = useGlobalState([]);\n  // const {stream, setStream} = useGlobalState([]);\n  // const [StreamPages, setStreamPages] = useState([]);\n  // const [Streampage, setStreamPage] = useState(0);\n  // const {access, setAccess} = useAccess('')\n\n  // const streamWidth = 14.4\n  // const periodWidth = 28\n  // const flowWidth = streamWidth/2\n  // const snWidth = periodWidth*(0.1)\n  // const dateWidth = periodWidth*(0.2)\n  // const descriptionWidth = periodWidth*(0.7)\n\n  // Ledger(stream.length)\n  //   // CashStream data management----------------------------------------------------------------------------------------------------\n  // const stream_Success = async(data) => {\n  //   // alert(\"d\")\n  //   await setStreamList(data.results);\n  //   const newPages = [];\n  //   if (data.count > 10) {\n  //     for (let i=0; i<Math.ceil(data.count / 10); i++) {\n  //       newPages.push({\n  //         name: (i+1).toString(),\n  //         page: i,\n  //       });\n  //       console.log(\"page\",i);\n  //     }\n  //     if (Streampage > newPages.length-1) {\n  //       await setStreamPage(Streampage-1);\n  //     }\n  //   } else {\n  //     await setStreamPage(0);\n  //   }\n  //   await setStreamPages(newPages);\n  // };\n  \n  // const set_Access = (Access_token) => {\n  //   setAccess(Access_token)\n  // }\n\n  // // console.log(access)\n\n  // useEffectOnce(\n  //   () => {\n  //     set_Access()\n  //   },[]\n  // )\n\n  // const getStreamData = async()=>{\n  //   await get_cashStream(Streampage, stream_Success, (text)=>{console.log(\"Error: \", text)}, access, set_Access );\n  // };\n\n  // useEffectOnce(()=>{\n  // // useEffect(()=>{\n  //   getStreamData();\n  // }, [access]);\n\n  // useEffect(() => {\n  //   setStream(\n  //     streamList.map(function(item){\n  //       return(\n  //         <div >\n  //           <div className=\"th stream th_stream\" >{item.name}</div>\n            \n  //           <div className='streamHeader' style={{height:\"3.3vw\"}}>\n  //             <div className=\"th\" style={{width:`${flowWidth}vw`}}>Credit</div>\n  //             <div className=\"th\" style={{width:`${flowWidth}vw`}}>Debit</div>\n  //           </div>\n  //         </div>\n  //       )\n  //     })\n  //   );\n\n  // }, [streamList]);\n\n\n\n  //   return (\n  //   <ScrollSyncPane>\n\n  //     <div id=\"thead\"  >\n  //       <div className=\"tr\" >\n  //         <div style={{ position: 'sticky', left: `${0}`}}>\n  //           <div className=\"th\" id=\"period\" style={{height:\"4vw\"}}>12/04/22 - 12/04/22</div>\n  //           <div className=\"tr\" id=\"trSecondRow\" style={{height:\"3.3vw\"}}>\n  //             <div  className=\"th\" id=\"snHeader\" style={{width:`${snWidth}vw`}}>S/N</div>\n  //             <div  className=\"th\" id=\"dateHeader\" style={{width:`${dateWidth}vw`}}>Date</div>\n  //             <div   className=\"th\" id=\"descriptionHeader\" style={{width:`${descriptionWidth}vw`}}>Description</div>\n  //           </div>\n  //         </div>\n\n             \n  //         <div className='tr' id='stream'>\n  //           {stream} \n  //         </div>\n  //       </div>\n  //         {/* <div id=\"dummybar\" ></div>          */}\n  //     </div>\n  //     </ScrollSyncPane>\n  //   )\n}\n\nexport default Streams"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,aAAR,QAA4B,qCAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,mBAA3C;;AAEA,SAASC,OAAT,GAAmB,CACjB;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAIA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD;;KArGQA,O;AAuGT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}