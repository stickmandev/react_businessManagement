{"ast":null,"code":"import { verifyTokens } from \"../../../auths/verifyTokens\";\nimport { backendURL } from \"../../../../backendURL\";\nexport const get_savedTransctions = async (success, fail, access, set_access) => {\n  const success_Status = async (status, access_token) => {\n    if (status === 200) {\n      // fetching cashflow data\n      const response = await fetch(`${backendURL}/ledger/savedtransaction/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'Application/JSON',\n          'Authorization': `Bearer ${access_token}`\n        }\n      });\n      const text = await response.text();\n\n      if (response.status === 401) {\n        // console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to view this page\");\n        window.location.assign(\"/login\");\n        return [];\n      }\n\n      if (response.status === 200) {\n        // console.log(\"success\", JSON.parse(text));\n        success(text);\n      } else {\n        // console.log(\"failed\", text);\n        Object.entries(JSON.parse(text)).forEach(_ref => {\n          let [key, value] = _ref;\n          fail(`${key}: ${value}`);\n        });\n      }\n    }\n  };\n\n  verifyTokens(access, set_access, success_Status);\n  success_Status();\n};\nexport const create_savedTransctions = async (description, selectd_Streamm, credit, debit, categorySelected, success, access, set_access) => {\n  console.log(credit);\n\n  const success_Status = async (status, access_token) => {\n    if (status === 200) {\n      // creating cashflow data\n      const response = await fetch(`${backendURL}/ledger/savedtransaction/`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${access_token}`\n        },\n        body: JSON.stringify({\n          \"description\": description,\n          \"cashStream\": selectd_Streamm,\n          \"Credit\": credit.replace(/[$]|,/g, \"\"),\n          \"Debit\": debit,\n          \"category\": categorySelected\n        })\n      });\n      const text = await response.text();\n\n      if (response.status === 401) {\n        // console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to delete this data\");\n        return [];\n      }\n\n      if (response.status === 201) {\n        // console.log(\"data created\", text);\n        success();\n      } else {// console.log(\"failed to delete\", text);\n      }\n    }\n  };\n\n  verifyTokens(access, set_access, success_Status);\n  success_Status();\n}; // export const delete_savedTransctions = async (flowId, success, access, set_access) => {\n//     const success_Status = async(status, access_token) => {\n//       if (status  === 200){\n//         // fetching cashflow data\n//         const response = await fetch(\n//           `${backendURL}/ledger/cashflow/${flowId}/delete/`,\n//           {\n//               method: 'DELETE',\n//               headers: {\n//                   'Content-Type': 'Application/JSON',\n//                   'Authorization': `Bearer ${access_token}`,\n//               }\n//           }\n//       );\n//     const text = await response.text();\n//     if (response.status === 401) {\n//       console.log(\"accesstoken not valid\");\n//       alert(\"you are not authorized to delete this data\")\n//       return [];\n//     }\n//     if (response.status === 204) {\n//       console.log(\"deleted\", text);\n//       success()\n//     } else {\n//       console.log(\"failed to delete\", text);\n//     }\n//       }\n//     }\n//     verifyTokens(access, set_access, success_Status)\n//     success_Status()\n//   };","map":{"version":3,"names":["verifyTokens","backendURL","get_savedTransctions","success","fail","access","set_access","success_Status","status","access_token","response","fetch","method","headers","text","alert","window","location","assign","Object","entries","JSON","parse","forEach","key","value","create_savedTransctions","description","selectd_Streamm","credit","debit","categorySelected","console","log","body","stringify","replace"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/savedTransaction_api.js"],"sourcesContent":["import {verifyTokens} from \"../../../auths/verifyTokens\"\nimport {backendURL} from \"../../../../backendURL\"\n\n\nexport const get_savedTransctions = async (success, fail, access, set_access) => {\n  const success_Status = async(status, access_token) => {\n    if (status  === 200){\n      // fetching cashflow data\n      const response = await fetch(\n        `${backendURL}/ledger/savedtransaction/`,\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'Application/JSON',\n                'Authorization': `Bearer ${access_token}`,\n            }\n        }\n      );\n      const text = await response.text();\n      if (response.status === 401) {\n        // console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to view this page\")\n        window.location.assign(\"/login\");\n        return [];\n      }\n      if (response.status === 200) {\n        // console.log(\"success\", JSON.parse(text));\n        success(text);\n      } else {\n        // console.log(\"failed\", text);\n        Object.entries(JSON.parse(text)).forEach(([key, value])=>{\n        fail(`${key}: ${value}`);\n      });\n      }\n    }\n  }\n\n  verifyTokens(access, set_access, success_Status)\n  \n  success_Status()\n};\n\nexport const create_savedTransctions = async (description, selectd_Streamm, credit, debit, categorySelected, success, access, set_access) => {\n  console.log(credit)\n  const success_Status = async(status, access_token) => {\n    if (status  === 200){\n      // creating cashflow data\n      const response = await fetch(\n        `${backendURL}/ledger/savedtransaction/`,\n        {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${access_token}`,\n          },\n          body: JSON.stringify({\n            \"description\": description,\n            \"cashStream\": selectd_Streamm,\n            \"Credit\": credit.replace(/[$]|,/g,\"\"),\n            \"Debit\": debit,\n            \"category\": categorySelected,\n          }),\n        }\n      );\n\n      const text = await response.text();\n      if (response.status === 401) {\n        // console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to delete this data\")\n        return [];\n      }\n      if (response.status === 201) {\n        // console.log(\"data created\", text);\n        success()\n      } else {\n        // console.log(\"failed to delete\", text);\n      }\n    }\n  }\n\n  verifyTokens(access, set_access, success_Status)\n  \n  success_Status()\n};\n\n\n// export const delete_savedTransctions = async (flowId, success, access, set_access) => {\n  \n//     const success_Status = async(status, access_token) => {\n//       if (status  === 200){\n//         // fetching cashflow data\n//         const response = await fetch(\n//           `${backendURL}/ledger/cashflow/${flowId}/delete/`,\n//           {\n//               method: 'DELETE',\n//               headers: {\n//                   'Content-Type': 'Application/JSON',\n//                   'Authorization': `Bearer ${access_token}`,\n//               }\n//           }\n//       );\n//     const text = await response.text();\n//     if (response.status === 401) {\n//       console.log(\"accesstoken not valid\");\n//       alert(\"you are not authorized to delete this data\")\n//       return [];\n//     }\n//     if (response.status === 204) {\n//       console.log(\"deleted\", text);\n//       success()\n//     } else {\n//       console.log(\"failed to delete\", text);\n//     }\n//       }\n//     }\n  \n//     verifyTokens(access, set_access, success_Status)\n    \n//     success_Status()\n//   };"],"mappings":"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"},"metadata":{},"sourceType":"module"}