{"ast":null,"code":"var _jsxFileName = \"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/Flow.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useMemo } from 'react';\nimport { get_cashFlow, delete_cashFlow } from './api/cashFow_CRUD';\nimport useGlobalState from \"../../../Store_&_State/GlobalState\";\nimport useAccess from \"../../auths/accessToken\";\nimport { useEffectOnce } from \"../../../custom_Hooks/useEffectOnce\";\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\nimport Moment from 'react-moment';\nimport moment from \"moment\";\nimport NumberFormat from 'react-number-format';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FlowDomManagement(prop) {\n  _s();\n\n  const [flowList, setFlowList] = useState([]);\n  const [flow, setFlow] = useState([]);\n  const [flowPages, setFlowPages] = useState([]);\n  const [flowPage, setFlowPage] = useState(0);\n  const [flow_DateSorted, setFlow_DateSorted] = useState([]);\n  const [emptyTR, setEmptyTR] = useState([]);\n  const [flowId, setFlowId] = useState([]); // const [currentStream, setCurrentStream] = useState([]);\n\n  const [balances, setBalances] = useState([]);\n  const [page, setPage] = useState(1);\n  const [nextPage, setNextPage] = useState(1);\n  const {\n    access,\n    setAccess\n  } = useAccess('');\n  const {\n    createFlowModalIsOpen,\n    setCreateFlowIsOpen\n  } = useGlobalState([]);\n  const {\n    reRender,\n    setReRender\n  } = useGlobalState([0]);\n  const {\n    streamList,\n    setStreamList\n  } = useGlobalState([]);\n  const {\n    stream,\n    setStream\n  } = useGlobalState([]);\n  const {\n    priodStart,\n    setPriodStart\n  } = useGlobalState([]);\n  const {\n    priodEnd,\n    setPriodEnd\n  } = useGlobalState([]);\n  const {\n    start_date,\n    setStart_date\n  } = useGlobalState('');\n  const {\n    end_date,\n    setEnd_date\n  } = useGlobalState('');\n  const {\n    filterCategory,\n    setFilterCategory\n  } = useGlobalState('');\n  const {\n    search,\n    setSearch\n  } = useGlobalState('');\n  const {\n    total_balance,\n    setTotal_balance\n  } = useGlobalState([]);\n  const {\n    grandTotal,\n    setGrandTotal\n  } = useGlobalState('');\n  const streamWidth = 14.4;\n  const periodWidth = 28;\n  const flowWidth = streamWidth / 2;\n  const snWidth = periodWidth * 0.1;\n  const dateWidth = periodWidth * 0.2;\n  const descriptionWidth = periodWidth * 0.7;\n  const [display, setDisplay] = useState(\"none\");\n  const [offsetTop, setoffsetTop] = useState(0);\n  const [trHeight, setTrHeight] = useState(0);\n  const table_width = stream.length * streamWidth + periodWidth; // console.log(start_date+\"-----To------\"+end_date)\n\n  const set_Access = Access_token => {\n    setAccess(Access_token);\n  };\n\n  useEffectOnce(() => {\n    set_Access();\n  }, []);\n\n  const addFirst = () => {\n    // console.log(\"preparing to send flow to the DOM\")\n    let newList = [];\n    const trEmpty = [];\n    const data = Array.from(streamList);\n    let total_balanceArr = []; // console.log('about to map stream and flow lists and set new list')\n\n    data.map(function (streamItem, id, arr) {\n      // console.log('mapping through stream list')\n      trEmpty.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"td\",\n          style: {\n            width: `${flowWidth}vw`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"td\",\n          style: {\n            width: `${flowWidth}vw`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true));\n\n      if (balances[streamItem.name] !== undefined) {\n        total_balanceArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"streamHeader\",\n            style: {\n              height: \"3.3vw\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"th\",\n              style: {\n                width: `${flowWidth}vw`\n              },\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: balances[streamItem.name].total_Credit,\n                displayType: 'text',\n                thousandSeparator: true // prefix={'$'}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"th\",\n              style: {\n                width: `${flowWidth}vw`\n              },\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: balances[streamItem.name].total_Debit,\n                displayType: 'text',\n                thousandSeparator: true // prefix={'$'}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"th\",\n            style: {\n              height: \"4vw\"\n            },\n            children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n              value: balances[streamItem.name].balance,\n              displayType: 'text',\n              thousandSeparator: true // prefix={'$'}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this));\n      }\n\n      return flowList.map(function (flowItem, pk, flow_arr) {\n        // console.log(\"mapping through flow list\")\n        if (flowItem.CashStream_Data.name === arr[id].name) {\n          // alert(arr[id].name)\n          const nullTd = [];\n          const reversNullTd = [];\n          const editDelete = [];\n\n          for (var i = 0; i < id; i++) {\n            nullTd.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true));\n          }\n\n          ;\n\n          for (var i = arr.length - 1; id < i; i--) {\n            reversNullTd.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                id: flowItem.id,\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true));\n          }\n\n          ;\n          const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g, \"\");\n          const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g, \"\");\n          const sortByDateTime = date + time;\n          newList.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tr\",\n              id: flowItem.id,\n              onMouseMove: mouseInEditDelete,\n              onMouseOver: mouseInEditDelete,\n              onMouseOut: mouseOutEditDelete,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tr sticky_offset\",\n                style: {\n                  position: 'sticky',\n                  left: `${0}`\n                },\n                onMouseMove: mouseInEditDelete,\n                onMouseOver: mouseInEditDelete,\n                onMouseOut: mouseOutEditDelete,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${snWidth}vw`\n                  },\n                  children: flow_arr.length - pk\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${dateWidth}vw`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    style: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Moment, {\n                      format: \"YYYY/MM/DD HH:mm a\",\n                      children: flowItem.created_at\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td discriptionTd\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${descriptionWidth}vw`\n                  },\n                  children: flowItem.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tr\",\n                children: [nullTd, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${flowWidth}vw`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: flowItem.Credit,\n                    displayType: 'text',\n                    thousandSeparator: true // prefix={'$'}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${flowWidth}vw`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: flowItem.Debit,\n                    displayType: 'text',\n                    thousandSeparator: true // prefix={'$'}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 29\n                }, this), reversNullTd]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 27\n              }, this)]\n            }, sortByDateTime, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, this)\n          }, void 0, false));\n        }\n      });\n    }); // console.log(\"finished setting new flow list whiling mapping\")\n    // console.log('new list: '+newList)\n    // console.log(newList)\n    // console.log(\"setting flow\")\n\n    setFlow(newList);\n    setEmptyTR(trEmpty);\n    setTotal_balance( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'sticky',\n          left: `${0}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"total_balance_dummyBlock\",\n          style: {\n            position: 'sticky',\n            left: `${0}`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Total($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Balance($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), total_balanceArr]\n    }, void 0, true));\n  };\n\n  const addCashFlow = () => {\n    if (true) {\n      const trEmpty = [];\n      const data = Array.from(streamList);\n      let total_balanceArr = []; // console.log('about to map stream and flow lists and set new list')\n\n      data.map(function (streamItem, id, arr) {\n        // console.log('mapping through stream list')\n        trEmpty.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"td\",\n            style: {\n              width: `${flowWidth}vw`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"td\",\n            style: {\n              width: `${flowWidth}vw`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true));\n\n        if (balances[streamItem.name] !== undefined) {\n          total_balanceArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"streamHeader\",\n              style: {\n                height: \"3.3vw\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"th\",\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                  value: balances[streamItem.name].total_Credit,\n                  displayType: 'text',\n                  thousandSeparator: true // prefix={'$'}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"th\",\n                style: {\n                  width: `${flowWidth}vw`\n                },\n                children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                  value: balances[streamItem.name].total_Debit,\n                  displayType: 'text',\n                  thousandSeparator: true // prefix={'$'}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"th\",\n              style: {\n                height: \"4vw\"\n              },\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: balances[streamItem.name].balance,\n                displayType: 'text',\n                thousandSeparator: true // prefix={'$'}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }, this));\n        } // let sn = flowSN\n        // setFlowSN(flow_arr.length-pk)  \n        // console.log(sn)  \n\n\n        return flowList.map(function (flowItem, pk, flow_arr) {\n          // console.log(\"mapping through flow list\")\n          if (flowItem.CashStream_Data.name === arr[id].name) {\n            // alert(arr[id].name)\n            const nullTd = [];\n            const reversNullTd = [];\n            const editDelete = [];\n\n            for (var i = 0; i < id; i++) {\n              nullTd.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${flowWidth}vw`\n                  },\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${flowWidth}vw`\n                  },\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true));\n            }\n\n            ;\n\n            for (var i = arr.length - 1; id < i; i--) {\n              reversNullTd.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${flowWidth}vw`\n                  },\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"td\",\n                  id: flowItem.id,\n                  style: {\n                    width: `${flowWidth}vw`\n                  },\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true));\n            }\n\n            ;\n            const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g, \"\");\n            const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g, \"\");\n            const sortByDateTime = date + time;\n            setFlow(oldArray => [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tr\",\n                id: flowItem.id,\n                onMouseMove: mouseInEditDelete,\n                onMouseOver: mouseInEditDelete,\n                onMouseOut: mouseOutEditDelete,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tr sticky_offset\",\n                  style: {\n                    position: 'sticky',\n                    left: `${0}`\n                  },\n                  onMouseMove: mouseInEditDelete,\n                  onMouseOver: mouseInEditDelete,\n                  onMouseOut: mouseOutEditDelete,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"td\",\n                    id: flowItem.id,\n                    style: {\n                      width: `${snWidth}vw`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"td\",\n                    id: flowItem.id,\n                    style: {\n                      width: `${dateWidth}vw`\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      style: {\n                        textAlign: 'center'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Moment, {\n                        format: \"YYYY/MM/DD HH:mm a\",\n                        children: flowItem.created_at\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"td discriptionTd\",\n                    id: flowItem.id,\n                    style: {\n                      width: `${descriptionWidth}vw`\n                    },\n                    children: flowItem.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tr\",\n                  children: [nullTd, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"td\",\n                    id: flowItem.id,\n                    style: {\n                      width: `${flowWidth}vw`\n                    },\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: flowItem.Credit,\n                      displayType: 'text',\n                      thousandSeparator: true // prefix={'$'}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"td\",\n                    id: flowItem.id,\n                    style: {\n                      width: `${flowWidth}vw`\n                    },\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: flowItem.Debit,\n                      displayType: 'text',\n                      thousandSeparator: true // prefix={'$'}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 33\n                  }, this), reversNullTd]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 31\n                }, this)]\n              }, sortByDateTime, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 29\n              }, this)\n            }, void 0, false), ...oldArray]);\n          }\n        });\n      }); // console.log(\"finished setting new flow list whiling mapping\")\n      // console.log(\"setting flow\")\n\n      setEmptyTR(trEmpty);\n      setTotal_balance( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'sticky',\n            left: `${0}`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"total_balance_dummyBlock\",\n            style: {\n              position: 'sticky',\n              left: `${0}`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Total($)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Balance($)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), total_balanceArr]\n      }, void 0, true));\n      setPage(page + 1);\n    }\n  };\n\n  const flow_Success = async data => {\n    // console.log('data extracton on flow successful')\n    // console.log('setting flowList')\n    setNextPage(data.next);\n    setFlowList(data.results[0]); // console.log(data.results)\n\n    setGrandTotal(data.results[1].grandTotal.total);\n    setBalances(data.results[1]);\n    setPriodStart(moment(new Date(data.results[2].firstDate.created_at)).format('YYYY-MM-DD'));\n    setPriodEnd(moment(new Date(data.results[2].lastDate.created_at)).format('YYYY-MM-DD')); // console.log(data.results[1]['bank'].total_Credit)\n    // console.log('finished setting flowList')\n    // addFirst()\n\n    if (page !== 1) {\n      addCashFlow();\n    } // setPage(page+1)\n\n  };\n\n  useEffect(() => {\n    if (page !== 1) {\n      addCashFlow();\n    } else {\n      addFirst();\n    }\n  }, [stream, access, flowList, flowPage]);\n\n  const flow_fail = text => {\n    console.log(\"Error: \", text);\n  };\n\n  const getData = async pagez => {\n    console.log('%c getting data', 'background:yellow; color:red');\n\n    if (nextPage !== null) {\n      await get_cashFlow(flow_Success, flow_fail, start_date, end_date, filterCategory, search, pagez, access, set_Access);\n    } else {\n      console.log('%c end reached', 'background:yellow; color:red');\n      console.log(`%c ${nextPage}`, 'background:yellow; color:red');\n    }\n  };\n\n  useEffect(() => {\n    // console.log(\"flow useEffet getting data\")\n    // if(page === 1){\n    getData(1); // }\n    // console.log(page)\n  }, [streamList, stream, reRender, search, start_date, end_date]);\n\n  const deleteFlowData = async () => {\n    await delete_cashFlow(flowId, () => {\n      getData();\n    }, access, set_Access); // getData()\n\n    setDisplay(\"none\");\n  };\n\n  const mouseInEditDelete = e => {\n    let target = e.target;\n    let scrolled_by = document.getElementsByClassName('tbody_class')[0].scrollTop;\n\n    if (target.offsetTop === 0) {\n      const sticky_offset = flowList.length - target.parentElement.firstChild.innerText;\n      const id = sticky_offset;\n      let sticky_scroll = document.getElementsByClassName('sticky_offset')[id].offsetTop;\n      setoffsetTop(sticky_scroll - scrolled_by);\n    } else {\n      setoffsetTop(target.offsetTop - scrolled_by);\n    }\n\n    setFlowId(target.id);\n    setTrHeight(target.scrolled_by);\n    setDisplay(\"flex\");\n  };\n\n  const mouseOutEditDelete = () => {\n    // alert('mouce out')\n    setDisplay(\"none\");\n  }; // send flow list to the dom\n  // useEffect(() => {   \n  //   let newList = []\n  //   // console.log(\"preparing to send flow to the DOM\")\n  //   const trEmpty = []\n  //   const data = Array.from(streamList)\n  //   let total_balanceArr = []\n  //   // console.log('about to map stream and flow lists and set new list')\n  //   data.map(\n  //       function(streamItem, id, arr){\n  //         // console.log('mapping through stream list')\n  //         trEmpty.push(\n  //           <>\n  //             <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n  //             <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n  //           </>\n  //         );\n  //         if (balances[streamItem.name] !== undefined){\n  //           total_balanceArr.push(\n  //             <div>\n  //               <div className='streamHeader' style={{height:\"3.3vw\"}}>\n  //                 <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n  //                   <NumberFormat\n  //                     value={balances[streamItem.name].total_Credit}\n  //                     displayType={'text'}\n  //                     thousandSeparator={true}\n  //                     // prefix={'$'}\n  //                   />\n  //                 </div>\n  //                 <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n  //                   <NumberFormat\n  //                     value={balances[streamItem.name].total_Debit}\n  //                     displayType={'text'}\n  //                     thousandSeparator={true}\n  //                     // prefix={'$'}\n  //                   />\n  //                 </div>\n  //               </div>\n  //               <div className=\"th\" style={{height:\"4vw\"}}>\n  //                 <NumberFormat\n  //                   value={balances[streamItem.name].balance}\n  //                   displayType={'text'}\n  //                   thousandSeparator={true}\n  //                   // prefix={'$'}\n  //                 />\n  //               </div>\n  //             </div>\n  //           )\n  //         }\n  //         return (\n  //             flowList.map(\n  //               function(flowItem, pk, flow_arr){\n  //                 // console.log(\"mapping through flow list\")\n  //                 if (flowItem.CashStream_Data.name === arr[id].name){\n  //                   // alert(arr[id].name)\n  //                 const nullTd = [];\n  //                 const reversNullTd = [];\n  //                 const editDelete = [];\n  //                   for( var i =0; i < id; i++ ){\n  //                     nullTd.push(\n  //                       <>\n  //                         <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n  //                         <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n  //                       </>\n  //                     );\n  //                   };\n  //                   for(var i = (arr.length-1); id < i; i-- ){\n  //                     reversNullTd.push(\n  //                       <>\n  //                         <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n  //                         <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n  //                       </>\n  //                     );\n  //                   };\n  //                   const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g,\"\");\n  //                   const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g,\"\");\n  //                   const sortByDateTime = date+time\n  //                   newList.push( \n  //                     <>\n  //                       <div  className=\"tr\" key={sortByDateTime} id={flowItem.id} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete} style={{ width:`${table_width}vw`}}>\n  //                         <div className=\"tr sticky_offset\" style={{ position: 'sticky', left: `${0}`}} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete}>\n  //                           <div className=\"td\" id={flowItem.id} style={{width:`${snWidth}vw`}}>{flow_arr.length-pk}</div> \n  //                           <div className=\"td\" id={flowItem.id} style={{width:`${dateWidth}vw`}}> \n  //                             <small style={{textAlign:'center'}}>\n  //                               <Moment format=\"YYYY/MM/DD HH:mm a\">\n  //                                 {flowItem.created_at}\n  //                               </Moment>\n  //                             </small>\n  //                           </div>\n  //                           <div className=\"td discriptionTd\" id={flowItem.id} style={{width:`${descriptionWidth}vw`}}>{flowItem.description}</div>\n  //                         </div>\n  //                         {/* {moment(new Date(flowItem.created_at.slice(0, 10))).format('DD-MM-YYYY')} */}\n  //                         <div className='tr'>\n  //                           {nullTd}\n  //                           <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n  //                             <NumberFormat\n  //                               value={flowItem.Credit}\n  //                               displayType={'text'}\n  //                               thousandSeparator={true}\n  //                               // prefix={'$'}\n  //                             />\n  //                           </div>\n  //                           <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n  //                           <NumberFormat\n  //                               value={flowItem.Debit}\n  //                               displayType={'text'}\n  //                               thousandSeparator={true}\n  //                               // prefix={'$'}\n  //                             />\n  //                           </div> \n  //                           {reversNullTd}\n  //                         </div>\n  //                       </div>\n  //                     </>\n  //                   )\n  //                 }\n  //               }\n  //             )\n  //       )\n  //       }\n  //     )\n  //   // console.log(\"finished setting new flow list whiling mapping\")\n  //   // console.log('new list: '+newList)\n  //   // console.log(newList)\n  //   // console.log(\"setting flow\")\n  //   setFlow( newList );\n  //   setEmptyTR(trEmpty)\n  //   setTotal_balance(\n  //     <>\n  //       <div style={{ position: 'sticky', left: `${0}`}}>\n  //         <div id='total_balance_dummyBlock' style={{ position: 'sticky', left: `${0}`}}>\n  //           <strong><p>Total($)</p></strong>\n  //           <strong><p>Balance($)</p></strong>\n  //         </div>\n  //       </div>\n  //       {total_balanceArr}\n  //     </>\n  //   )\n  // }, [stream, access,flowList,flowPage]);\n  // const sortedFlow = flow.sort(function(a, b){return a.props.children.key - b.props.children.key})\n\n\n  const sortedFlow = flow.sort(function (a, b) {\n    return b.props.children.key - a.props.children.key;\n  }); // const sortedFlow = flow.sort((a, b) => a.itemM > b.itemM ? 1 : -1)\n  // console.log(balances)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ScrollSyncPane, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tbody\",\n        className: \"tbody_class\",\n        children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          dataLength: flow.length // dataLength={4}\n          ,\n          next: () => {\n            getData;\n          },\n          style: {\n            display: 'flex',\n            flexDirection: 'column-reverse',\n            overflow: 'unset'\n          } //To put endMessage and loader to the top.\n          ,\n          inverse: true //\n          ,\n          hasMore: true,\n          loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 19\n          }, this),\n          scrollableTarget: \"tbody\",\n          children: [sortedFlow, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tr\",\n            id: \"addTr\",\n            style: {\n              width: `${table_width}vw`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tr\",\n              style: {\n                position: 'sticky',\n                left: `${0}`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                style: {\n                  width: `${snWidth}vw`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td\",\n                style: {\n                  width: `${dateWidth}vw`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"td discriptionTd\",\n                style: {\n                  width: `${descriptionWidth}vw`\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"open_CreateFlowModal_btn\",\n                  onClick: () => {\n                    setCreateFlowIsOpen(true);\n                    prop.blur(8);\n                  },\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 112\n                  }, this), \" Add\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tr\",\n              children: emptyTR\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"EditDeleteOverlay\",\n      onMouseOver: () => {\n        setDisplay(\"flex\");\n      },\n      onMouseOut: mouseOutEditDelete,\n      style: {\n        display: display,\n        top: offsetTop,\n        height: trHeight\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteFlowData,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FlowDomManagement, \"kw/lc2zwnzJlEYL7NiJ8PtvAPZ4=\", false, function () {\n  return [useAccess, useGlobalState, useGlobalState, useGlobalState, useGlobalState, useGlobalState, useGlobalState, useGlobalState, useGlobalState, useGlobalState, useGlobalState, useGlobalState, useGlobalState, useEffectOnce];\n});\n\n_c = FlowDomManagement;\nexport default FlowDomManagement; //          <InfiniteScroll\n//             dataLength={flow.length}\n//             // dataLength={4}\n//             next={addCashFlow}\n//             style={{ display: 'flex', flexDirection: 'column-reverse' }} //To put endMessage and loader to the top.\n//             inverse={true} //\n//             hasMore={true}\n//             loader={<h4>Loading...</h4>}\n//             scrollableTarget=\"tbody\"\n//           >\n\nvar _c;\n\n$RefreshReg$(_c, \"FlowDomManagement\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","get_cashFlow","delete_cashFlow","useGlobalState","useAccess","useEffectOnce","ScrollSync","ScrollSyncPane","Moment","moment","NumberFormat","InfiniteScroll","FlowDomManagement","prop","flowList","setFlowList","flow","setFlow","flowPages","setFlowPages","flowPage","setFlowPage","flow_DateSorted","setFlow_DateSorted","emptyTR","setEmptyTR","flowId","setFlowId","balances","setBalances","page","setPage","nextPage","setNextPage","access","setAccess","createFlowModalIsOpen","setCreateFlowIsOpen","reRender","setReRender","streamList","setStreamList","stream","setStream","priodStart","setPriodStart","priodEnd","setPriodEnd","start_date","setStart_date","end_date","setEnd_date","filterCategory","setFilterCategory","search","setSearch","total_balance","setTotal_balance","grandTotal","setGrandTotal","streamWidth","periodWidth","flowWidth","snWidth","dateWidth","descriptionWidth","display","setDisplay","offsetTop","setoffsetTop","trHeight","setTrHeight","table_width","length","set_Access","Access_token","addFirst","newList","trEmpty","data","Array","from","total_balanceArr","map","streamItem","id","arr","push","width","name","undefined","height","total_Credit","total_Debit","balance","flowItem","pk","flow_arr","CashStream_Data","nullTd","reversNullTd","editDelete","i","date","Date","created_at","format","replace","time","sortByDateTime","mouseInEditDelete","mouseOutEditDelete","position","left","textAlign","description","Credit","Debit","addCashFlow","oldArray","flow_Success","next","results","total","firstDate","lastDate","flow_fail","text","console","log","getData","pagez","deleteFlowData","e","target","scrolled_by","document","getElementsByClassName","scrollTop","sticky_offset","parentElement","firstChild","innerText","sticky_scroll","sortedFlow","sort","a","b","props","children","key","flexDirection","overflow","blur","top"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/Flow.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect, useMemo } from 'react';\nimport {get_cashFlow, delete_cashFlow} from './api/cashFow_CRUD'\nimport useGlobalState from \"../../../Store_&_State/GlobalState\"\nimport useAccess from \"../../auths/accessToken\"\nimport {useEffectOnce} from \"../../../custom_Hooks/useEffectOnce\"\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\nimport Moment from 'react-moment';\nimport moment from \"moment\";\nimport NumberFormat from 'react-number-format';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nfunction FlowDomManagement(prop) {\n  const [flowList, setFlowList] = useState([]);\n  const [flow, setFlow] = useState([]);\n  const [flowPages, setFlowPages] = useState([]);\n  const [flowPage, setFlowPage] = useState(0);\n  const [flow_DateSorted, setFlow_DateSorted] = useState([]);\n  const [emptyTR, setEmptyTR] = useState([]);\n  const [flowId, setFlowId] = useState([]);\n  // const [currentStream, setCurrentStream] = useState([]);\n  const [balances, setBalances] = useState([]);\n\tconst [page, setPage] = useState(1);\n\tconst [nextPage, setNextPage] = useState(1);\n\n  const {access, setAccess} = useAccess('')\n  const {createFlowModalIsOpen, setCreateFlowIsOpen} = useGlobalState([]);\n  const {reRender, setReRender} = useGlobalState([0]);\n\n  const {streamList, setStreamList} = useGlobalState([]);\n  const {stream, setStream} = useGlobalState([]);\n  const {priodStart, setPriodStart} = useGlobalState([]);\n  const {priodEnd, setPriodEnd} = useGlobalState([]);\n  \n  const {start_date, setStart_date} = useGlobalState(''); \n  const {end_date, setEnd_date} = useGlobalState('');\n  const {filterCategory, setFilterCategory} = useGlobalState('');\n  const {search, setSearch} = useGlobalState('');\n\n\n\n  const {total_balance, setTotal_balance} = useGlobalState([]);\n  const {grandTotal, setGrandTotal} = useGlobalState('');\n  \n\n  const streamWidth = 14.4\n  const periodWidth = 28\n  const flowWidth = streamWidth/2\n  const snWidth = periodWidth*(0.1)\n  const dateWidth = periodWidth*(0.2)\n  const descriptionWidth = periodWidth*(0.7)\n\n  const [display, setDisplay] = useState(\"none\");\n  const [offsetTop, setoffsetTop] = useState(0);\n  const [trHeight, setTrHeight] = useState(0);\n  const table_width = (stream.length*streamWidth) + periodWidth\n\n\n  // console.log(start_date+\"-----To------\"+end_date)\n\n\n  const set_Access = (Access_token) => {\n    setAccess(Access_token)\n  }\n  \n  useEffectOnce(() => {\n      set_Access()\n    },[]\n  )\n\n  const addFirst = () => {\n    // console.log(\"preparing to send flow to the DOM\")\n\n    let newList = []\n    const trEmpty = []\n    const data = Array.from(streamList)\n\n    let total_balanceArr = []\n\n    // console.log('about to map stream and flow lists and set new list')\n    data.map(\n        function(streamItem, id, arr){\n          // console.log('mapping through stream list')\n\n          trEmpty.push(\n            <>\n              <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n              <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n            </>\n          );\n\n          if (balances[streamItem.name] !== undefined){\n            total_balanceArr.push(\n              <div>\n                <div className='streamHeader' style={{height:\"3.3vw\"}}>\n                  <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n                    <NumberFormat\n                      value={balances[streamItem.name].total_Credit}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      // prefix={'$'}\n                    />\n                  </div>\n                  <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n                    <NumberFormat\n                      value={balances[streamItem.name].total_Debit}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      // prefix={'$'}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"th\" style={{height:\"4vw\"}}>\n                  <NumberFormat\n                    value={balances[streamItem.name].balance}\n                    displayType={'text'}\n                    thousandSeparator={true}\n                    // prefix={'$'}\n                  />\n                </div>\n              </div>\n            )\n          }\n          \n          return (\n              flowList.map(\n                function(flowItem, pk, flow_arr){\n                  // console.log(\"mapping through flow list\")\n\n                  if (flowItem.CashStream_Data.name === arr[id].name){\n                    // alert(arr[id].name)\n                  const nullTd = [];\n                  const reversNullTd = [];\n                  const editDelete = [];\n\n                    for( var i =0; i < id; i++ ){\n                      nullTd.push(\n                        <>\n                          <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                          <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                        </>\n                      );\n                    };\n\n                    for(var i = (arr.length-1); id < i; i-- ){\n                      reversNullTd.push(\n                        <>\n                          <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                          <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                        </>\n                      );\n\n                    };\n\n                    const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g,\"\");\n                    const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g,\"\");\n                    const sortByDateTime = date+time\n                    \n                    newList.push( \n                      <>\n                        <div  className=\"tr\" key={sortByDateTime} id={flowItem.id} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete} >\n                          <div className=\"tr sticky_offset\" style={{ position: 'sticky', left: `${0}`}} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete}>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${snWidth}vw`}}>{flow_arr.length-pk}</div> \n                            <div className=\"td\" id={flowItem.id} style={{width:`${dateWidth}vw`}}> \n                              <small style={{textAlign:'center'}}>\n                                <Moment format=\"YYYY/MM/DD HH:mm a\">\n                                  {flowItem.created_at}\n                                </Moment>\n                              </small>\n                            </div>\n                            <div className=\"td discriptionTd\" id={flowItem.id} style={{width:`${descriptionWidth}vw`}}>{flowItem.description}</div>\n                          </div>\n                          {/* {moment(new Date(flowItem.created_at.slice(0, 10))).format('DD-MM-YYYY')} */}\n                          <div className='tr'>\n                            {nullTd}\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n                              \n                              <NumberFormat\n                                value={flowItem.Credit}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                // prefix={'$'}\n                              />\n                            </div>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n                            <NumberFormat\n                                value={flowItem.Debit}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                // prefix={'$'}\n                              />\n                            </div> \n                            {reversNullTd}\n                          </div>\n                        </div>\n                      </>\n                    )\n                  }\n                }\n              )\n        )\n        }\n      )\n      \n    // console.log(\"finished setting new flow list whiling mapping\")\n    // console.log('new list: '+newList)\n    // console.log(newList)\n    // console.log(\"setting flow\")\n    setFlow( newList );\n    setEmptyTR(trEmpty)\n    setTotal_balance(\n      <>\n        <div style={{ position: 'sticky', left: `${0}`}}>\n          <div id='total_balance_dummyBlock' style={{ position: 'sticky', left: `${0}`}}>\n            <strong><p>Total($)</p></strong>\n            <strong><p>Balance($)</p></strong>\n          </div>\n        </div>\n        {total_balanceArr}\n      </>\n    )\n  }\n\n  const addCashFlow = () => {\n    if(true){\n        const trEmpty = []\n        const data = Array.from(streamList)\n  \n        let total_balanceArr = []\n  \n        // console.log('about to map stream and flow lists and set new list')\n        data.map(\n            function(streamItem, id, arr){\n              // console.log('mapping through stream list')\n  \n              trEmpty.push(\n                <>\n                  <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n                  <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n                </>\n              );\n  \n              if (balances[streamItem.name] !== undefined){\n                total_balanceArr.push(\n                  <div>\n                    <div className='streamHeader' style={{height:\"3.3vw\"}}>\n                      <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n                        <NumberFormat\n                          value={balances[streamItem.name].total_Credit}\n                          displayType={'text'}\n                          thousandSeparator={true}\n                          // prefix={'$'}\n                        />\n                      </div>\n                      <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n                        <NumberFormat\n                          value={balances[streamItem.name].total_Debit}\n                          displayType={'text'}\n                          thousandSeparator={true}\n                          // prefix={'$'}\n                        />\n                      </div>\n                    </div>\n      \n                    <div className=\"th\" style={{height:\"4vw\"}}>\n                      <NumberFormat\n                        value={balances[streamItem.name].balance}\n                        displayType={'text'}\n                        thousandSeparator={true}\n                        // prefix={'$'}\n                      />\n                    </div>\n                  </div>\n                )\n              }\n              \n              // let sn = flowSN\n              // setFlowSN(flow_arr.length-pk)  \n              // console.log(sn)  \n              return (\n                flowList.map(\n                  function(flowItem, pk, flow_arr){\n                    // console.log(\"mapping through flow list\")\n                    \n                    if (flowItem.CashStream_Data.name === arr[id].name){\n                      // alert(arr[id].name)\n                    const nullTd = [];\n                    const reversNullTd = [];\n                    const editDelete = [];\n  \n                      for( var i =0; i < id; i++ ){\n                        nullTd.push(\n                          <>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                          </>\n                        );\n                      };\n  \n                      for(var i = (arr.length-1); id < i; i-- ){\n                        reversNullTd.push(\n                          <>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                            <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n                          </>\n                        );\n  \n                      };\n  \n                      const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g,\"\");\n                      const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g,\"\");\n                      const sortByDateTime = date+time\n                      setFlow(oldArray => [ ( \n                          <>\n                            <div  className=\"tr\" key={sortByDateTime} id={flowItem.id} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete} >\n                              <div className=\"tr sticky_offset\" style={{ position: 'sticky', left: `${0}`}} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete}>\n                                {/* <div className=\"td\" id={flowItem.id} style={{width:`${snWidth}vw`}}>{flowSN+flow_arr.length-pk}</div>  */}\n                                <div className=\"td\" id={flowItem.id} style={{width:`${snWidth}vw`}}></div> \n                                <div className=\"td\" id={flowItem.id} style={{width:`${dateWidth}vw`}}> \n                                  <small style={{textAlign:'center'}}>\n                                    <Moment format=\"YYYY/MM/DD HH:mm a\">\n                                      {flowItem.created_at}\n                                    </Moment>\n                                  </small>\n                                </div>\n                                <div className=\"td discriptionTd\" id={flowItem.id} style={{width:`${descriptionWidth}vw`}}>{flowItem.description}</div>\n                              </div>\n                              {/* {moment(new Date(flowItem.created_at.slice(0, 10))).format('DD-MM-YYYY')} */}\n                              <div className='tr'>\n                                {nullTd}\n                                <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n                                  \n                                  <NumberFormat\n                                    value={flowItem.Credit}\n                                    displayType={'text'}\n                                    thousandSeparator={true}\n                                    // prefix={'$'}\n                                  />\n                                </div>\n                                <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n                                <NumberFormat\n                                    value={flowItem.Debit}\n                                    displayType={'text'}\n                                    thousandSeparator={true}\n                                    // prefix={'$'}\n                                  />\n                                </div> \n                                {reversNullTd}\n                              </div>\n                            </div>\n                          </>\n                        ), ...oldArray\n                      ])\n                    }\n                  }\n                )\n              )\n            }\n          )\n          \n        // console.log(\"finished setting new flow list whiling mapping\")\n        // console.log(\"setting flow\")\n        setEmptyTR(trEmpty)\n        setTotal_balance(\n          <>\n            <div style={{ position: 'sticky', left: `${0}`}}>\n              <div id='total_balance_dummyBlock' style={{ position: 'sticky', left: `${0}`}}>\n                <strong><p>Total($)</p></strong>\n                <strong><p>Balance($)</p></strong>\n              </div>\n            </div>\n            {total_balanceArr}\n          </>\n        )  \n        setPage(page+1)\n    }   \n  }\n\n\n  const flow_Success = async(data) => {\n    // console.log('data extracton on flow successful')\n    // console.log('setting flowList')\n\n      setNextPage(data.next)\n      setFlowList(data.results[0]);\n      // console.log(data.results)\n      setGrandTotal(data.results[1].grandTotal.total)\n      setBalances(data.results[1])\n\n      setPriodStart(moment(new Date(data.results[2].firstDate.created_at)).format('YYYY-MM-DD'))\n      setPriodEnd(moment(new Date(data.results[2].lastDate.created_at)).format('YYYY-MM-DD'))\n      // console.log(data.results[1]['bank'].total_Credit)\n      // console.log('finished setting flowList')\n      // addFirst()\n      if(page !== 1){\n        addCashFlow()\n      }\n    // setPage(page+1)\n\n  };\n\n  useEffect(() => {\n    if(page !== 1){\n      addCashFlow()\n    }else{\n      addFirst()\n    }\n    },[stream, access,flowList,flowPage]\n  )\n\n  const flow_fail = (text) => {\n    console.log(\"Error: \", text)\n  }\n\n  const getData = async(pagez)=>{\n    console.log('%c getting data', 'background:yellow; color:red')\n\n    if(nextPage !== null){\n      await get_cashFlow(flow_Success, flow_fail, start_date, end_date, filterCategory, search, pagez, access, set_Access,);\n    }else{\n      console.log('%c end reached', 'background:yellow; color:red')\n      console.log(`%c ${nextPage}`, 'background:yellow; color:red')\n    }\n  };\n\n  useEffect(()=>{\n    // console.log(\"flow useEffet getting data\")\n    // if(page === 1){\n      getData(1);\n    // }\n    // console.log(page)\n  }, [streamList, stream, reRender, search, start_date, end_date]);\n\n  const deleteFlowData = async()=>{\n    await delete_cashFlow(flowId, () =>{getData()}, access, set_Access);\n    // getData()\n    setDisplay(\"none\")\n  };\n  \n  const mouseInEditDelete = (e) => {\n    let target = e.target\n    let scrolled_by = document.getElementsByClassName('tbody_class')[0].scrollTop\n    \n    if (target.offsetTop===0){\n      const sticky_offset = flowList.length-target.parentElement.firstChild.innerText\n      const id = sticky_offset\n      let sticky_scroll = document.getElementsByClassName('sticky_offset')[id].offsetTop\n      setoffsetTop(sticky_scroll-scrolled_by)\n    }else{\n      setoffsetTop(target.offsetTop - scrolled_by)\n    }\n    \n    setFlowId(target.id)\n    setTrHeight(target.scrolled_by)\n    setDisplay(\"flex\")\n  }\n  \n  \n  const mouseOutEditDelete = () => {\n    // alert('mouce out')\n    setDisplay(\"none\")\n  }\n  \n  \n  // send flow list to the dom\n  // useEffect(() => {   \n  //   let newList = []\n  //   // console.log(\"preparing to send flow to the DOM\")\n\n  //   const trEmpty = []\n  //   const data = Array.from(streamList)\n\n  //   let total_balanceArr = []\n\n  //   // console.log('about to map stream and flow lists and set new list')\n  //   data.map(\n  //       function(streamItem, id, arr){\n  //         // console.log('mapping through stream list')\n\n  //         trEmpty.push(\n  //           <>\n  //             <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n  //             <div className=\"td\" style={{width:`${flowWidth}vw`}}></div>\n  //           </>\n  //         );\n\n  //         if (balances[streamItem.name] !== undefined){\n  //           total_balanceArr.push(\n  //             <div>\n  //               <div className='streamHeader' style={{height:\"3.3vw\"}}>\n  //                 <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n  //                   <NumberFormat\n  //                     value={balances[streamItem.name].total_Credit}\n  //                     displayType={'text'}\n  //                     thousandSeparator={true}\n  //                     // prefix={'$'}\n  //                   />\n  //                 </div>\n  //                 <div className=\"th\" style={{width:`${flowWidth}vw`}}>\n  //                   <NumberFormat\n  //                     value={balances[streamItem.name].total_Debit}\n  //                     displayType={'text'}\n  //                     thousandSeparator={true}\n  //                     // prefix={'$'}\n  //                   />\n  //                 </div>\n  //               </div>\n  \n  //               <div className=\"th\" style={{height:\"4vw\"}}>\n  //                 <NumberFormat\n  //                   value={balances[streamItem.name].balance}\n  //                   displayType={'text'}\n  //                   thousandSeparator={true}\n  //                   // prefix={'$'}\n  //                 />\n  //               </div>\n  //             </div>\n  //           )\n  //         }\n          \n  //         return (\n  //             flowList.map(\n  //               function(flowItem, pk, flow_arr){\n  //                 // console.log(\"mapping through flow list\")\n\n  //                 if (flowItem.CashStream_Data.name === arr[id].name){\n  //                   // alert(arr[id].name)\n  //                 const nullTd = [];\n  //                 const reversNullTd = [];\n  //                 const editDelete = [];\n\n  //                   for( var i =0; i < id; i++ ){\n  //                     nullTd.push(\n  //                       <>\n  //                         <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n  //                         <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n  //                       </>\n  //                     );\n  //                   };\n\n  //                   for(var i = (arr.length-1); id < i; i-- ){\n  //                     reversNullTd.push(\n  //                       <>\n  //                         <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n  //                         <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>0</div>\n  //                       </>\n  //                     );\n\n  //                   };\n\n  //                   const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g,\"\");\n  //                   const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g,\"\");\n  //                   const sortByDateTime = date+time\n                    \n  //                   newList.push( \n  //                     <>\n  //                       <div  className=\"tr\" key={sortByDateTime} id={flowItem.id} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete} style={{ width:`${table_width}vw`}}>\n  //                         <div className=\"tr sticky_offset\" style={{ position: 'sticky', left: `${0}`}} onMouseMove={mouseInEditDelete} onMouseOver={mouseInEditDelete} onMouseOut={mouseOutEditDelete}>\n  //                           <div className=\"td\" id={flowItem.id} style={{width:`${snWidth}vw`}}>{flow_arr.length-pk}</div> \n  //                           <div className=\"td\" id={flowItem.id} style={{width:`${dateWidth}vw`}}> \n  //                             <small style={{textAlign:'center'}}>\n  //                               <Moment format=\"YYYY/MM/DD HH:mm a\">\n  //                                 {flowItem.created_at}\n  //                               </Moment>\n  //                             </small>\n  //                           </div>\n  //                           <div className=\"td discriptionTd\" id={flowItem.id} style={{width:`${descriptionWidth}vw`}}>{flowItem.description}</div>\n  //                         </div>\n  //                         {/* {moment(new Date(flowItem.created_at.slice(0, 10))).format('DD-MM-YYYY')} */}\n  //                         <div className='tr'>\n  //                           {nullTd}\n  //                           <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n                              \n  //                             <NumberFormat\n  //                               value={flowItem.Credit}\n  //                               displayType={'text'}\n  //                               thousandSeparator={true}\n  //                               // prefix={'$'}\n  //                             />\n  //                           </div>\n  //                           <div className=\"td\" id={flowItem.id} style={{width:`${flowWidth}vw`}}>\n  //                           <NumberFormat\n  //                               value={flowItem.Debit}\n  //                               displayType={'text'}\n  //                               thousandSeparator={true}\n  //                               // prefix={'$'}\n  //                             />\n  //                           </div> \n  //                           {reversNullTd}\n  //                         </div>\n  //                       </div>\n  //                     </>\n  //                   )\n  //                 }\n  //               }\n  //             )\n  //       )\n  //       }\n  //     )\n      \n  //   // console.log(\"finished setting new flow list whiling mapping\")\n  //   // console.log('new list: '+newList)\n  //   // console.log(newList)\n  //   // console.log(\"setting flow\")\n  //   setFlow( newList );\n  //   setEmptyTR(trEmpty)\n  //   setTotal_balance(\n  //     <>\n  //       <div style={{ position: 'sticky', left: `${0}`}}>\n  //         <div id='total_balance_dummyBlock' style={{ position: 'sticky', left: `${0}`}}>\n  //           <strong><p>Total($)</p></strong>\n  //           <strong><p>Balance($)</p></strong>\n  //         </div>\n  //       </div>\n  //       {total_balanceArr}\n  //     </>\n  //   )\n  // }, [stream, access,flowList,flowPage]);\n  \n\n  \n\n\n\n\n  // const sortedFlow = flow.sort(function(a, b){return a.props.children.key - b.props.children.key})\n  const sortedFlow = flow.sort(function(a, b){return b.props.children.key - a.props.children.key})\n  // const sortedFlow = flow.sort((a, b) => a.itemM > b.itemM ? 1 : -1)\n  // console.log(balances)\n  return (\n    <>\n    <ScrollSyncPane>\n      <div id=\"tbody\" className='tbody_class'>\n        <InfiniteScroll\n          dataLength={flow.length}\n          // dataLength={4}\n          next={() => {getData}}\n          style={{ display: 'flex', flexDirection: 'column-reverse', overflow:'unset' }} //To put endMessage and loader to the top.\n          inverse={true} //\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n          scrollableTarget=\"tbody\"\n        >\n          {sortedFlow}\n\n          <div className=\"tr\" id=\"addTr\" style={{ width:`${table_width}vw`}}>\n            <div  className=\"tr\" style={{position: 'sticky', left: `${0}`}}>\n              <div className=\"td\" style={{width:`${snWidth}vw`}}></div> \n              <div className=\"td\" style={{width:`${dateWidth}vw`}}></div>\n              <div className=\"td discriptionTd\" style={{width:`${descriptionWidth}vw`}}>\n                <button id='open_CreateFlowModal_btn' onClick={()=>{setCreateFlowIsOpen(true); prop.blur(8)}}> <span></span> Add</button> \n              </div>\n            </div>\n            <div className=\"tr\">{emptyTR}</div>\n          </div>\n        </InfiniteScroll>\n      </div>\n    </ScrollSyncPane>\n\n        \n    <div id=\"EditDeleteOverlay\" onMouseOver={()=>{ setDisplay(\"flex\") }} onMouseOut={mouseOutEditDelete} style={{  display:display, top:offsetTop, height:trHeight}} >\n      <button onClick={deleteFlowData} >X</button><br/>\n      <button></button>\n    </div>\n    </>\n  )\n}\n\n\nexport default FlowDomManagement\n\n//          <InfiniteScroll\n//             dataLength={flow.length}\n//             // dataLength={4}\n//             next={addCashFlow}\n//             style={{ display: 'flex', flexDirection: 'column-reverse' }} //To put endMessage and loader to the top.\n//             inverse={true} //\n//             hasMore={true}\n//             loader={<h4>Loading...</h4>}\n//             scrollableTarget=\"tbody\"\n//           >"],"mappings":"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"},"metadata":{},"sourceType":"module"}