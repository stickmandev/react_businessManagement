{"ast":null,"code":"var _jsxFileName = \"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/UserVerification.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport userVerification_api from \"./api/userVerification_api\";\nimport React, { useEffect, useState } from 'react'; // import { Link, useNavigate } from \"react-router-dom\";\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useEffectOnce = effect => {\n  _s();\n\n  const destroyFunc = useRef();\n  const effectCalled = useRef(false);\n  const renderAfterCalled = useRef(false);\n  const [val, setVal] = useState(0);\n\n  if (effectCalled.current) {\n    renderAfterCalled.current = true;\n  }\n\n  useEffect(() => {\n    // only execute the effect first time around\n    if (!effectCalled.current) {\n      destroyFunc.current = effect();\n      effectCalled.current = true;\n    } // this forces one render after the effect is run\n\n\n    setVal(val => val + 1);\n    return () => {\n      // if the comp didn't render since the useEffect was called,\n      // we know it's the dummy React cycle\n      if (!renderAfterCalled.current) {\n        return;\n      }\n\n      if (destroyFunc.current) {\n        destroyFunc.current();\n      }\n    };\n  }, []);\n};\n\n_s(useEffectOnce, \"HYhMZy6Xz6sFfDRJNxQPOEPefdA=\");\n\nfunction UserVerification() {\n  _s2();\n\n  const [verificationStatus, setVerificationStatus] = useState( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"failed to verify\"\n  }, void 0, false)); // let navigate = useNavigate();\n\n  const success = text => {\n    setVerificationStatus( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: text\n    }, void 0, false));\n  };\n\n  const fail = text => {\n    console.log(text);\n  };\n\n  useEffect(() => {\n    const code = window.location.href.slice(48);\n    userVerification_api(code, success, fail);\n    alert(\"jj\");\n  }, []); // success()\n  // console.log(message)     \n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: verificationStatus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserVerification, \"FYuLHkbBGk2a7chIwNj6+jSwsNA=\");\n\n_c = UserVerification;\nexport default UserVerification;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserVerification\");","map":{"version":3,"names":["userVerification_api","React","useEffect","useState","useEffectOnce","effect","destroyFunc","useRef","effectCalled","renderAfterCalled","val","setVal","current","UserVerification","verificationStatus","setVerificationStatus","success","text","fail","console","log","code","window","location","href","slice","alert"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/UserVerification.js"],"sourcesContent":["import userVerification_api from \"./api/userVerification_api\"\nimport React, {useEffect, useState} from 'react'\n// import { Link, useNavigate } from \"react-router-dom\";\n\n\n\n\n\n\n\n\nexport const useEffectOnce = ( effect )=> {\n\n    const destroyFunc = useRef();\n    const effectCalled = useRef(false);\n    const renderAfterCalled = useRef(false);\n    const [val, setVal] = useState(0);\n  \n    if (effectCalled.current) {\n        renderAfterCalled.current = true;\n    }\n  \n    useEffect( ()=> {\n  \n        // only execute the effect first time around\n        if (!effectCalled.current) { \n          destroyFunc.current = effect();\n          effectCalled.current = true;\n        }\n  \n        // this forces one render after the effect is run\n        setVal(val => val + 1);\n  \n        return ()=> {\n          // if the comp didn't render since the useEffect was called,\n          // we know it's the dummy React cycle\n          if (!renderAfterCalled.current) { return; }\n          if (destroyFunc.current) { destroyFunc.current(); }\n        };\n    }, []);\n  };\nfunction UserVerification() {\n    const [verificationStatus, setVerificationStatus] = useState(\n        <>\n            failed to verify\n        </>\n    );\n    // let navigate = useNavigate();\n    \n    const success = (text)=> {\n        setVerificationStatus(\n            <>\n                {text}\n            </>\n        )\n    };\n\n    const fail = (text)=> {\n        console.log(text)\n    }; \n    \n    useEffect(() => { \n        const code = window.location.href.slice(48)\n        userVerification_api(code, success, fail)\n        alert(\"jj\")\n    }, []);\n    \n    // success()\n        // console.log(message)     \n\n  return (\n    <h1>{verificationStatus}</h1>\n  )\n}\n\nexport default UserVerification"],"mappings":";;;;AAAA,OAAOA,oBAAP,MAAiC,4BAAjC;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CACA;;;;AASA,OAAO,MAAMC,aAAa,GAAKC,MAAF,IAAa;EAAA;;EAEtC,MAAMC,WAAW,GAAGC,MAAM,EAA1B;EACA,MAAMC,YAAY,GAAGD,MAAM,CAAC,KAAD,CAA3B;EACA,MAAME,iBAAiB,GAAGF,MAAM,CAAC,KAAD,CAAhC;EACA,MAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;;EAEA,IAAIK,YAAY,CAACI,OAAjB,EAA0B;IACtBH,iBAAiB,CAACG,OAAlB,GAA4B,IAA5B;EACH;;EAEDV,SAAS,CAAE,MAAK;IAEZ;IACA,IAAI,CAACM,YAAY,CAACI,OAAlB,EAA2B;MACzBN,WAAW,CAACM,OAAZ,GAAsBP,MAAM,EAA5B;MACAG,YAAY,CAACI,OAAb,GAAuB,IAAvB;IACD,CANW,CAQZ;;;IACAD,MAAM,CAACD,GAAG,IAAIA,GAAG,GAAG,CAAd,CAAN;IAEA,OAAO,MAAK;MACV;MACA;MACA,IAAI,CAACD,iBAAiB,CAACG,OAAvB,EAAgC;QAAE;MAAS;;MAC3C,IAAIN,WAAW,CAACM,OAAhB,EAAyB;QAAEN,WAAW,CAACM,OAAZ;MAAwB;IACpD,CALD;EAMH,CAjBQ,EAiBN,EAjBM,CAAT;AAkBD,CA7BI;;GAAMR,a;;AA8Bb,SAASS,gBAAT,GAA4B;EAAA;;EACxB,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,eACxD;IAAA;EAAA,iBADwD,CAA5D,CADwB,CAMxB;;EAEA,MAAMa,OAAO,GAAIC,IAAD,IAAS;IACrBF,qBAAqB,eACjB;MAAA,UACKE;IADL,iBADiB,CAArB;EAKH,CAND;;EAQA,MAAMC,IAAI,GAAID,IAAD,IAAS;IAClBE,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACH,CAFD;;EAIAf,SAAS,CAAC,MAAM;IACZ,MAAMmB,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,EAA3B,CAAb;IACAzB,oBAAoB,CAACqB,IAAD,EAAOL,OAAP,EAAgBE,IAAhB,CAApB;IACAQ,KAAK,CAAC,IAAD,CAAL;EACH,CAJQ,EAIN,EAJM,CAAT,CApBwB,CA0BxB;EACI;;EAEN,oBACE;IAAA,UAAKZ;EAAL;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;;IAhCQD,gB;;KAAAA,gB;AAkCT,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}