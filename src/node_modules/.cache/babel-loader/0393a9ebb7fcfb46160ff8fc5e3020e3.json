{"ast":null,"code":"import _regeneratorRuntime from\"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{backendURL}from\"../../../../backendURL\";var userVerification_api=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(code,success,fail){var response,text;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(backendURL,\"/authemail/signup/verify/?code=\").concat(code));case 2:response=_context.sent;_context.next=5;return response.text();case 5:text=_context.sent;if(response.status===200){console.log(\"Verified\",JSON.parse(text));success(text);}else{console.log(\"failed to Verify\",text);Object.entries(JSON.parse(text)).forEach(function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];fail(\"\".concat(key,\": \").concat(value));});}case 7:case\"end\":return _context.stop();}}},_callee);}));return function userVerification_api(_x,_x2,_x3){return _ref.apply(this,arguments);};}();export default userVerification_api;","map":{"version":3,"names":["backendURL","userVerification_api","code","success","fail","fetch","response","text","status","console","log","JSON","parse","Object","entries","forEach","key","value"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/api/userVerification_api.js"],"sourcesContent":["import {backendURL} from \"../../../../backendURL\"\n\nconst userVerification_api = async (code, success, fail,) => {\n  const response = await fetch(`${backendURL}/authemail/signup/verify/?code=${code}`);\n  \n  const text = await response.text();\n  \n  if (response.status === 200) {\n    console.log(\"Verified\", JSON.parse(text));\n    success(text);\n  } else {\n    console.log(\"failed to Verify\", text);\n    Object.entries(JSON.parse(text)).forEach(([key, value])=>{\n      fail(`${key}: ${value}`);\n    });\n  }\n};\n\nexport default userVerification_api"],"mappings":"4lBAAA,OAAQA,UAAR,KAAyB,wBAAzB,CAEA,GAAMC,qBAAoB,4FAAG,iBAAOC,IAAP,CAAaC,OAAb,CAAsBC,IAAtB,4JACJC,MAAK,WAAIL,UAAJ,2CAAgDE,IAAhD,EADD,QACrBI,QADqB,qCAGRA,SAAQ,CAACC,IAAT,EAHQ,QAGrBA,IAHqB,eAK3B,GAAID,QAAQ,CAACE,MAAT,GAAoB,GAAxB,CAA6B,CAC3BC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAxB,EACAJ,OAAO,CAACI,IAAD,CAAP,CACD,CAHD,IAGO,CACLE,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCH,IAAhC,EACAM,MAAM,CAACC,OAAP,CAAeH,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAf,EAAiCQ,OAAjC,CAAyC,eAAgB,mCAAdC,GAAc,UAATC,KAAS,UACvDb,IAAI,WAAIY,GAAJ,cAAYC,KAAZ,EAAJ,CACD,CAFD,EAGD,CAb0B,sDAAH,kBAApBhB,qBAAoB,oDAA1B,CAgBA,cAAeA,qBAAf"},"metadata":{},"sourceType":"module"}