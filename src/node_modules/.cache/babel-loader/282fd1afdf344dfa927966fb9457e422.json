{"ast":null,"code":"/* import React, {useState, useEffect, useMemo} from 'react'\n\nfunction Answer() {\n    const [numOfQuestions, setNumOfQuestions] = React.useState(0);\n    const [currentNum_Slice, setcurrentNum_Slice] = React.useState(1);\n    const [progress, setProgress] = React.useState(0);\n    const [dataId, setDataId] = React.useState(0);\n    const [difficulty, setDifficulty] = React.useState([]);\n    const [answers, setAnswers] = React.useState([]);\n    const [answerStatus, setAnswerStatus] = React.useState([]);\n    const [nextBTN, setnextBTN] = React.useState(true);\n    const [answeredCorrect, setAnsweredCorrect] = React.useState(0);\n    const [answeredFailed, setAnsweredFailed] = React.useState(0);\n    const [score, setScore] = React.useState(0);\n    const [maxScore, setMaxScore] = React.useState(0);\n    const [answersArr, setAnswersArr] = React.useState([]);\n\n\n\n\n    useEffect(() => {\n        const answersSubArr = [<button className='answers' onClick={validateAns} >{data[dataId].correct_answer.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C|%24/g,\"\")}</button>]\n        data[dataId].incorrect_answers.map(  \n           (answers, pk, answersObj)=>{\n               answersSubArr.push(<button className='answers' onClick={validateAns} >{answers.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C|%24/g,\"\")}</button>)\n           }\n       )\n       setAnswersArr(answersSubArr)\n    }, [answersArr]);\n\n\n    useMemo(\n        ()=>{\n            console.log(answersArr)\n            const shuffleArray = array => {\n                for (let i = array.length - 1; i > 0; i--) {\n                  const j = Math.floor(Math.random() * (i + 1));\n                  const temp = array[i];\n                  array[i] = array[j];\n                  array[j] = temp;\n                }\n              }\n    \n            shuffleArray(answersArr)\n            setAnswers(answersArr)\n        }, [progress]\n    )\n\n\n\n    return (\n        <>\n            <div id='answers'>\n                {answers}\n            </div>\n\n            <h2 id='answerStatus'>{answerStatus}</h2>\n        </>\n    )\n}\n\nexport default Answer */","map":{"version":3,"names":[],"sources":["/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Answer.js"],"sourcesContent":["/* import React, {useState, useEffect, useMemo} from 'react'\n\nfunction Answer() {\n    const [numOfQuestions, setNumOfQuestions] = React.useState(0);\n    const [currentNum_Slice, setcurrentNum_Slice] = React.useState(1);\n    const [progress, setProgress] = React.useState(0);\n    const [dataId, setDataId] = React.useState(0);\n    const [difficulty, setDifficulty] = React.useState([]);\n    const [answers, setAnswers] = React.useState([]);\n    const [answerStatus, setAnswerStatus] = React.useState([]);\n    const [nextBTN, setnextBTN] = React.useState(true);\n    const [answeredCorrect, setAnsweredCorrect] = React.useState(0);\n    const [answeredFailed, setAnsweredFailed] = React.useState(0);\n    const [score, setScore] = React.useState(0);\n    const [maxScore, setMaxScore] = React.useState(0);\n    const [answersArr, setAnswersArr] = React.useState([]);\n\n\n\n\n    useEffect(() => {\n        const answersSubArr = [<button className='answers' onClick={validateAns} >{data[dataId].correct_answer.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C|%24/g,\"\")}</button>]\n        data[dataId].incorrect_answers.map(  \n           (answers, pk, answersObj)=>{\n               answersSubArr.push(<button className='answers' onClick={validateAns} >{answers.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C|%24/g,\"\")}</button>)\n           }\n       )\n       setAnswersArr(answersSubArr)\n    }, [answersArr]);\n\n\n    useMemo(\n        ()=>{\n            console.log(answersArr)\n            const shuffleArray = array => {\n                for (let i = array.length - 1; i > 0; i--) {\n                  const j = Math.floor(Math.random() * (i + 1));\n                  const temp = array[i];\n                  array[i] = array[j];\n                  array[j] = temp;\n                }\n              }\n    \n            shuffleArray(answersArr)\n            setAnswers(answersArr)\n        }, [progress]\n    )\n\n\n\n    return (\n        <>\n            <div id='answers'>\n                {answers}\n            </div>\n\n            <h2 id='answerStatus'>{answerStatus}</h2>\n        </>\n    )\n}\n\nexport default Answer */"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}