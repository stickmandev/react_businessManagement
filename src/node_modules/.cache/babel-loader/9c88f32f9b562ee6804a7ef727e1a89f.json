{"ast":null,"code":"var _jsxFileName = \"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment } from './components/slices/numOfQuestion_slice';\nimport './App.css';\nimport data from \"./questions.json\";\nimport star1 from \"./star1.png\";\nimport star2 from \"./star2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [numOfQuestions, setNumOfQuestions] = React.useState(0);\n  const [currentNum, setCurrentNum] = React.useState(1);\n  const [progress, setProgress] = React.useState(0);\n  const [dataId, setDataId] = React.useState(0);\n  const [difficulty, setDifficulty] = React.useState([]);\n  const [answers, setAnswers] = React.useState([]);\n  const [answerStatus, setAnswerStatus] = React.useState([]);\n  const [nextBTN, setnextBTN] = React.useState(true);\n  const [answeredCorrect, setAnsweredCorrect] = React.useState(0);\n  const [answeredFailed, setAnsweredFailed] = React.useState(0);\n  const [score, setScore] = React.useState(0);\n  const [maxScore, setMaxScore] = React.useState(0);\n  const [answersArr, setAnswersArr] = React.useState([]);\n  const count = useSelector(state => state.numOfQuestion.value);\n  const dispatch = useDispatch(); // console.log(count)\n\n  console.log(\"hdhj\"); // const nextQuestion =()=>{\n  //     if(currentNum<numOfQuestions){\n  //         setCurrentNum(currentNum+1)\n  //         setDataId(dataId+1)\n  //     }\n  //     const answerClass = document.getElementsByClassName(\"answers\")\n  //     for(let i=0; i<answerClass.length; i++){\n  //         answerClass[i].disabled = false\n  //     }\n  //     setnextBTN(true)\n  //     setAnswerStatus(\"\")\n  // }\n  // const validateAns =(e)=>{\n  //     if(e.target.innerText===data[dataId].correct_answer.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C/g,\"\")){\n  //         setAnswerStatus(\"Correct!\")\n  //         setAnsweredCorrect(answeredCorrect+1)\n  //     }else{\n  //         setAnswerStatus(\"Sorry!\")\n  //         setAnsweredFailed(answeredFailed+1)\n  //     }\n  //     const answerClass = document.getElementsByClassName(\"answers\")\n  //     for(let i=0; i<answerClass.length; i++){\n  //         answerClass[i].disabled = true\n  //     }\n  //     setnextBTN(false)\n  // }\n  // useEffect(() => {\n  //     setNumOfQuestions(data.length)\n  //     setProgress((currentNum*100)/numOfQuestions)\n  //     switch (data[dataId].difficulty) {\n  //         case 'easy':\n  //             setDifficulty(\n  //                 <>\n  //                 <img src={star1} alt=\"\" />\n  //                 <img src={star2} alt=\"\" />\n  //                 <img src={star2} alt=\"\" />\n  //                 </>\n  //             )\n  //             break;\n  //             case 'medium':\n  //                 setDifficulty(\n  //                     <>\n  //                     <img src={star1} alt=\"\" />\n  //                     <img src={star1} alt=\"\" />\n  //                     <img src={star2} alt=\"\" />\n  //                     </>\n  //                 )\n  //                 break;\n  //             case 'hard':\n  //                 setDifficulty(\n  //                     <>\n  //                     <img src={star1} alt=\"\" />\n  //                     <img src={star1} alt=\"\" />\n  //                     <img src={star1} alt=\"\" />\n  //                     </>\n  //                 )\n  //                 break;\n  //         default:\n  //             break;\n  //     }\n  //     setScore(\n  //         (answeredCorrect*100)/numOfQuestions\n  //     )\n  //     setMaxScore(\n  //         100-((answeredFailed*100)/numOfQuestions)\n  //     )\n  // }, [ progress, nextBTN]);\n  // useEffect(() => {\n  //     const answersSubArr = [<button className='answers' onClick={validateAns} >{data[dataId].correct_answer.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C|%24/g,\"\")}</button>]\n  //     data[dataId].incorrect_answers.map(  \n  //        (answers, pk, answersObj)=>{\n  //            answersSubArr.push(<button className='answers' onClick={validateAns} >{answers.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C|%24/g,\"\")}</button>)\n  //        }\n  //    )\n  //    setAnswersArr(answersSubArr)\n  // }, [answersArr]);\n  // useMemo(\n  //     ()=>{\n  //         console.log(answersArr)\n  //         const shuffleArray = array => {\n  //             for (let i = array.length - 1; i > 0; i--) {\n  //               const j = Math.floor(Math.random() * (i + 1));\n  //               const temp = array[i];\n  //               array[i] = array[j];\n  //               array[j] = temp;\n  //             }\n  //           }\n  //         shuffleArray(answersArr)\n  //         setAnswers(answersArr)\n  //     }, [progress]\n  // )\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bigOverlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"starOverlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"answerStatus\",\n        children: answerStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"scoreChat\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"scoreOverlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"maxScore\",\n            style: {\n              width: `${maxScore}%`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"score\",\n              style: {\n                width: `${score}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"1fRW/8/xwXj/VtyKGrFhNtkMSP0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useSelector","useDispatch","increment","data","star1","star2","App","numOfQuestions","setNumOfQuestions","currentNum","setCurrentNum","progress","setProgress","dataId","setDataId","difficulty","setDifficulty","answers","setAnswers","answerStatus","setAnswerStatus","nextBTN","setnextBTN","answeredCorrect","setAnsweredCorrect","answeredFailed","setAnsweredFailed","score","setScore","maxScore","setMaxScore","answersArr","setAnswersArr","count","state","numOfQuestion","value","dispatch","console","log","width"],"sources":["/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useMemo} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { increment } from './components/slices/numOfQuestion_slice'\nimport './App.css'\nimport data from \"./questions.json\"  \nimport star1 from \"./star1.png\"  \nimport star2 from \"./star2.png\"  \n\nfunction App () {\n    const [numOfQuestions, setNumOfQuestions] = React.useState(0);\n    const [currentNum, setCurrentNum] = React.useState(1);\n    const [progress, setProgress] = React.useState(0);\n    const [dataId, setDataId] = React.useState(0);\n    const [difficulty, setDifficulty] = React.useState([]);\n    const [answers, setAnswers] = React.useState([]);\n    const [answerStatus, setAnswerStatus] = React.useState([]);\n    const [nextBTN, setnextBTN] = React.useState(true);\n    const [answeredCorrect, setAnsweredCorrect] = React.useState(0);\n    const [answeredFailed, setAnsweredFailed] = React.useState(0);\n    const [score, setScore] = React.useState(0);\n    const [maxScore, setMaxScore] = React.useState(0);\n    const [answersArr, setAnswersArr] = React.useState([]);\n    \n    const count = useSelector((state) => state.numOfQuestion.value)\n    const dispatch = useDispatch()\n\n    // console.log(count)\n    console.log(\"hdhj\")\n\n    // const nextQuestion =()=>{\n    //     if(currentNum<numOfQuestions){\n    //         setCurrentNum(currentNum+1)\n    //         setDataId(dataId+1)\n    //     }\n    //     const answerClass = document.getElementsByClassName(\"answers\")\n    //     for(let i=0; i<answerClass.length; i++){\n    //         answerClass[i].disabled = false\n    //     }\n    //     setnextBTN(true)\n    //     setAnswerStatus(\"\")\n    // }\n\n    // const validateAns =(e)=>{\n    //     if(e.target.innerText===data[dataId].correct_answer.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C/g,\"\")){\n    //         setAnswerStatus(\"Correct!\")\n    //         setAnsweredCorrect(answeredCorrect+1)\n    //     }else{\n    //         setAnswerStatus(\"Sorry!\")\n    //         setAnsweredFailed(answeredFailed+1)\n    //     }\n    //     const answerClass = document.getElementsByClassName(\"answers\")\n    //     for(let i=0; i<answerClass.length; i++){\n    //         answerClass[i].disabled = true\n    //     }\n    //     setnextBTN(false)\n    // }\n\n    // useEffect(() => {\n    //     setNumOfQuestions(data.length)\n    //     setProgress((currentNum*100)/numOfQuestions)\n\n    //     switch (data[dataId].difficulty) {\n    //         case 'easy':\n    //             setDifficulty(\n    //                 <>\n    //                 <img src={star1} alt=\"\" />\n    //                 <img src={star2} alt=\"\" />\n    //                 <img src={star2} alt=\"\" />\n    //                 </>\n    //             )\n    //             break;\n\n    //             case 'medium':\n    //                 setDifficulty(\n    //                     <>\n    //                     <img src={star1} alt=\"\" />\n    //                     <img src={star1} alt=\"\" />\n    //                     <img src={star2} alt=\"\" />\n    //                     </>\n    //                 )\n    //                 break;\n\n    //             case 'hard':\n    //                 setDifficulty(\n    //                     <>\n    //                     <img src={star1} alt=\"\" />\n    //                     <img src={star1} alt=\"\" />\n    //                     <img src={star1} alt=\"\" />\n    //                     </>\n    //                 )\n    //                 break;\n        \n    //         default:\n    //             break;\n    //     }\n        \n        \n\n    //     setScore(\n    //         (answeredCorrect*100)/numOfQuestions\n    //     )\n\n    //     setMaxScore(\n    //         100-((answeredFailed*100)/numOfQuestions)\n    //     )\n    // }, [ progress, nextBTN]);\n    \n    \n\n\n    // useEffect(() => {\n    //     const answersSubArr = [<button className='answers' onClick={validateAns} >{data[dataId].correct_answer.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C|%24/g,\"\")}</button>]\n    //     data[dataId].incorrect_answers.map(  \n    //        (answers, pk, answersObj)=>{\n    //            answersSubArr.push(<button className='answers' onClick={validateAns} >{answers.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C|%24/g,\"\")}</button>)\n    //        }\n    //    )\n    //    setAnswersArr(answersSubArr)\n    // }, [answersArr]);\n\n    // useMemo(\n    //     ()=>{\n    //         console.log(answersArr)\n    //         const shuffleArray = array => {\n    //             for (let i = array.length - 1; i > 0; i--) {\n    //               const j = Math.floor(Math.random() * (i + 1));\n    //               const temp = array[i];\n    //               array[i] = array[j];\n    //               array[j] = temp;\n    //             }\n    //           }\n    \n    //         shuffleArray(answersArr)\n    //         setAnswers(answersArr)\n    //     }, [progress]\n    // )\n\n\n    return (\n        <div className='App'>\n            {/* <div id='progressBar' style={{width:`${progress}%`}}></div> */}\n\n            <div id='bigOverlay'>\n                <div>\n                    {/* <h1> Question {currentNum} of {numOfQuestions} </h1> */}\n\n                    {/* <h3>{data[dataId].category.replace(/%3A/g,\":\").replace(/%20/g,\" \")}</h3> */}\n\n                    <div id='starOverlay'>\n                        {/* <small className='stars'> {difficulty} </small> */}\n                    </div>\n                </div>\n\n                {/* <p className='question'>{data[dataId].question.replace(/%3A%20|%20/g,\" \").replace(/%27|%3F|%22|%2C/g,\"\")}</p> */}\n\n                <div id='answers'>\n                    {/* {answers} */}\n                </div>\n\n                <h2 id='answerStatus'>{answerStatus}</h2>\n\n                {/* <button id='nextQuestion' onClick={nextQuestion} disabled={nextBTN}>Next Question</button> */}\n\n                <div id='scoreChat'>\n                    {/* <span>{score}%</span> <span>{maxScore}%</span> */}\n                    <div id='scoreOverlay'>\n                        <div id='maxScore' style={{width:`${maxScore}%`}}>\n                            <div id='score' style={{width:`${score}%`}}>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}