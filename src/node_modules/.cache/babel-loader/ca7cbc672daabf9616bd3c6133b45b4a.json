{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { backendURL } from \"../../backendURL\";\nimport useAccess from \"./accessToken\";\n\nconst VerifyToken = async () => {\n  _s();\n\n  const old_accesstoken = access; // const refreshtoken =  localStorage.getItem(\"refreshToken\");\n\n  const {\n    access,\n    setAccess\n  } = useAccess(''); // Verifying access token___________________________________________________________________________________\n\n  const verify_access_token = await fetch(`${backendURL}/user/verifyAccess/`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'Application/JSON',\n      'Content-Type': 'Application/json'\n    },\n    body: JSON.stringify({\n      \"token\": old_accesstoken\n    })\n  });\n\n  if (verify_access_token.status === 401) {\n    const get_access_token = await fetch(`${backendURL}/user/refresh/`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'Application/JSON',\n        'Content-Type': 'Application/json'\n      },\n      body: JSON.stringify({\n        \"refresh\": refreshtoken\n      })\n    });\n\n    if (get_access_token.status === 200) {\n      await localStorage.setItem(\"refreshToken\", verify_access_token.refresh);\n      setAccess({\n        access: verify_access_token.access\n      });\n    }\n  }\n\n  ; // Verifying refresh token__________________________________________________________________________________\n\n  const verify_refresh_token = await fetch(`${backendURL}/user/verifyRefresh/`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'Application/JSON',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"token\": refreshtoken\n    })\n  });\n\n  if (verify_refresh_token.status === 401) {\n    alert(\"session expired, please log in again\");\n    window.location.assign(\"/login\");\n  }\n};\n\n_s(VerifyToken, \"m5BZZFaE96oLqqnIYn6H8qCab84=\", false, function () {\n  return [useAccess];\n});\n\n_c = VerifyToken;\nexport default VerifyToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyToken\");","map":{"version":3,"names":["backendURL","useAccess","VerifyToken","old_accesstoken","access","setAccess","verify_access_token","fetch","method","headers","body","JSON","stringify","status","get_access_token","refreshtoken","localStorage","setItem","refresh","verify_refresh_token","alert","window","location","assign"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/auths/verifyTokens.js"],"sourcesContent":["import {backendURL} from \"../../backendURL\"\nimport useAccess from \"./accessToken\"\n\n\nconst VerifyToken = async () => {\n    const old_accesstoken = access\n    // const refreshtoken =  localStorage.getItem(\"refreshToken\");\n    const {access, setAccess} = useAccess('')\n    \n    // Verifying access token___________________________________________________________________________________\n    const verify_access_token = await fetch(\n\n      `${backendURL}/user/verifyAccess/`,\n      {\n          method: 'POST',\n          headers: {\n              'Accept': 'Application/JSON',\n              'Content-Type': 'Application/json',\n          },\n          body: JSON.stringify({\n            \"token\": old_accesstoken,\n          })\n      }\n    );\n  \n    if (verify_access_token.status === 401) {\n      const get_access_token = await fetch(\n        `${backendURL}/user/refresh/`,\n        {\n            method: 'POST',\n            headers: {\n                'Accept': 'Application/JSON',\n                'Content-Type': 'Application/json',\n            },\n            body: JSON.stringify({\n              \"refresh\": refreshtoken,\n            })\n        }\n      );\n  \n      if (get_access_token.status === 200) {\n        await localStorage.setItem(\"refreshToken\", verify_access_token.refresh);\n        setAccess(\n            {\n                access:verify_access_token.access,\n            }\n        )\n      }\n  \n    };\n    \n    // Verifying refresh token__________________________________________________________________________________\n    const verify_refresh_token = await fetch(\n      `${backendURL}/user/verifyRefresh/`,\n      {\n          method: 'POST',\n          headers: {\n              'Accept': 'Application/JSON',\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            \"token\": refreshtoken,\n          })\n      }\n    );\n  \n    if (verify_refresh_token.status === 401) {\n      alert(\"session expired, please log in again\")\n      window.location.assign(\"/login\");\n    }\n}\n\nexport default VerifyToken"],"mappings":";;AAAA,SAAQA,UAAR,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,eAAtB;;AAGA,MAAMC,WAAW,GAAG,YAAY;EAAA;;EAC5B,MAAMC,eAAe,GAAGC,MAAxB,CAD4B,CAE5B;;EACA,MAAM;IAACA,MAAD;IAASC;EAAT,IAAsBJ,SAAS,CAAC,EAAD,CAArC,CAH4B,CAK5B;;EACA,MAAMK,mBAAmB,GAAG,MAAMC,KAAK,CAEpC,GAAEP,UAAW,qBAFuB,EAGrC;IACIQ,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB;IAFX,CAFb;IAMIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnB,SAAST;IADU,CAAf;EANV,CAHqC,CAAvC;;EAeA,IAAIG,mBAAmB,CAACO,MAApB,KAA+B,GAAnC,EAAwC;IACtC,MAAMC,gBAAgB,GAAG,MAAMP,KAAK,CACjC,GAAEP,UAAW,gBADoB,EAElC;MACIQ,MAAM,EAAE,MADZ;MAEIC,OAAO,EAAE;QACL,UAAU,kBADL;QAEL,gBAAgB;MAFX,CAFb;MAMIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnB,WAAWG;MADQ,CAAf;IANV,CAFkC,CAApC;;IAcA,IAAID,gBAAgB,CAACD,MAAjB,KAA4B,GAAhC,EAAqC;MACnC,MAAMG,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCX,mBAAmB,CAACY,OAAzD,CAAN;MACAb,SAAS,CACL;QACID,MAAM,EAACE,mBAAmB,CAACF;MAD/B,CADK,CAAT;IAKD;EAEF;;EAAA,CA7C2B,CA+C5B;;EACA,MAAMe,oBAAoB,GAAG,MAAMZ,KAAK,CACrC,GAAEP,UAAW,sBADwB,EAEtC;IACIQ,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB;IAFX,CAFb;IAMIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnB,SAASG;IADU,CAAf;EANV,CAFsC,CAAxC;;EAcA,IAAII,oBAAoB,CAACN,MAArB,KAAgC,GAApC,EAAyC;IACvCO,KAAK,CAAC,sCAAD,CAAL;IACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,QAAvB;EACD;AACJ,CAlED;;GAAMrB,W;UAG0BD,S;;;KAH1BC,W;AAoEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}