{"ast":null,"code":"import { verifyTokens } from \"../../../auths/verifyTokens\";\nimport { backendURL } from \"../../../../backendURL\";\nexport const get_cashFlow = async function () {\n  let pageNo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let success = arguments.length > 1 ? arguments[1] : undefined;\n  let fail = arguments.length > 2 ? arguments[2] : undefined;\n  let access = arguments.length > 3 ? arguments[3] : undefined;\n  let set_access = arguments.length > 4 ? arguments[4] : undefined;\n\n  const success_Status = async (status, access_token) => {\n    if (status === 200) {\n      // fetching cashflow data\n      const response = await fetch(`${backendURL}/ledger/cashflow/?offset=${pageNo}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'Application/JSON',\n          'Authorization': `Bearer ${access_token}`\n        }\n      });\n      const text = await response.text();\n\n      if (response.status === 401) {\n        console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to view this page\");\n        window.location.assign(\"/login\");\n        return [];\n      }\n\n      if (response.status === 200) {\n        console.log(\"success\", JSON.parse(text));\n        success(JSON.parse(text));\n      } else {\n        console.log(\"failed\", text);\n        Object.entries(JSON.parse(text)).forEach(_ref => {\n          let [key, value] = _ref;\n          fail(`${key}: ${value}`);\n        });\n      }\n    }\n  };\n\n  verifyTokens(access, set_access, success_Status);\n  success_Status();\n};\nexport const delete_cashFlow = async (flowId, success, access, set_access) => {\n  const success_Status = async (status, access_token) => {\n    if (status === 200) {\n      // fetching cashflow data\n      const response = await fetch(`${backendURL}/ledger/cashflow/${flowId}/delete/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'Application/JSON',\n          'Authorization': `Bearer ${access_token}`\n        }\n      });\n      const text = await response.text();\n\n      if (response.status === 401) {\n        console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to delete this data\");\n        return [];\n      }\n\n      if (response.status === 204) {\n        console.log(\"deleted\", text);\n        success();\n      } else {\n        console.log(\"failed to delete\", text);\n      }\n    }\n  };\n\n  verifyTokens(access, set_access, success_Status);\n  success_Status();\n};\nexport const create_cashFlow = async (description, stream, credit, debit, savedTransaction, success, fail, access, set_access) => {\n  const response = await fetch(`${backendURL}/ledger/cashflow/`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"description\": description,\n      \"stream\": stream,\n      \"credit\": credit,\n      \"debit\": debit,\n      \"savedTransaction\": savedTransaction\n    }),\n    headers: {\n      'Content-Type': 'Application/JSON',\n      'Authorization': `Bearer ${access_token}`\n    }\n  });\n  const text = await response.text();\n\n  if (response.status === 200) {\n    // console.log(\"success\", JSON.parse(text));\n    success(JSON.parse(text));\n  } else {\n    console.log(\"failed\", text);\n    Object.entries(JSON.parse(text)).forEach(_ref2 => {\n      let [key, value] = _ref2;\n      fail(`${key}: ${value}`);\n    });\n  }\n\n  verifyTokens(access, set_access, success_Status);\n  success_Status();\n}; // const verify_access_token = await fetch(\n//   `${backendURL}/user/verifyAccess/`,\n//   {\n//       method: 'POST',\n//       headers: {\n//           'Accept': 'Application/JSON',\n//           'Content-Type': 'Application/json',\n//       },\n//       body: JSON.stringify({\n//         access: `${old_access}`,\n//       })\n//   }\n// );","map":{"version":3,"names":["verifyTokens","backendURL","get_cashFlow","pageNo","success","fail","access","set_access","success_Status","status","access_token","response","fetch","method","headers","text","console","log","alert","window","location","assign","JSON","parse","Object","entries","forEach","key","value","delete_cashFlow","flowId","create_cashFlow","description","stream","credit","debit","savedTransaction","body","stringify"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/cashFow_CRUD.js"],"sourcesContent":["import {verifyTokens} from \"../../../auths/verifyTokens\"\nimport {backendURL} from \"../../../../backendURL\"\n\n\nexport const get_cashFlow = async (pageNo=\"\", success, fail, access, set_access) => {\n  \n  const success_Status = async(status, access_token) => {\n    if (status  === 200){\n      // fetching cashflow data\n      const response = await fetch(\n        `${backendURL}/ledger/cashflow/?offset=${pageNo}`,\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'Application/JSON',\n                'Authorization': `Bearer ${access_token}`,\n            }\n        }\n      );\n      const text = await response.text();\n      if (response.status === 401) {\n        console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to view this page\")\n        window.location.assign(\"/login\");\n        return [];\n      }\n      if (response.status === 200) {\n        console.log(\"success\", JSON.parse(text));\n        success(JSON.parse(text));\n      } else {\n        console.log(\"failed\", text);\n        Object.entries(JSON.parse(text)).forEach(([key, value])=>{\n        fail(`${key}: ${value}`);\n      });\n      }\n    }\n  }\n\n  verifyTokens(access, set_access, success_Status)\n  \n  success_Status()\n};\n\nexport const delete_cashFlow = async (flowId, success, access, set_access) => {\n  \n  const success_Status = async(status, access_token) => {\n    if (status  === 200){\n      // fetching cashflow data\n      const response = await fetch(\n        `${backendURL}/ledger/cashflow/${flowId}/delete/`,\n        {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'Application/JSON',\n                'Authorization': `Bearer ${access_token}`,\n            }\n        }\n    );\n  const text = await response.text();\n  if (response.status === 401) {\n    console.log(\"accesstoken not valid\");\n    alert(\"you are not authorized to delete this data\")\n    return [];\n  }\n  if (response.status === 204) {\n    console.log(\"deleted\", text);\n    success()\n  } else {\n    console.log(\"failed to delete\", text);\n  }\n    }\n  }\n\n  verifyTokens(access, set_access, success_Status)\n  \n  success_Status()\n};\n\nexport const create_cashFlow = async (description, stream, credit, debit, savedTransaction, success, fail, access, set_access) => {\n  const response = await fetch(\n        `${backendURL}/ledger/cashflow/`,\n        {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              \"description\": description,\n              \"stream\": stream,\n              \"credit\": credit,\n              \"debit\": debit,\n              \"savedTransaction\": savedTransaction,\n            }),\n            headers: {\n              'Content-Type': 'Application/JSON',\n              'Authorization': `Bearer ${access_token}`,\n            }\n            \n        }\n    );\n  const text = await response.text();\n  if (response.status === 200) {\n    // console.log(\"success\", JSON.parse(text));\n    success(JSON.parse(text));\n  } else {\n    console.log(\"failed\", text);\n    Object.entries(JSON.parse(text)).forEach(([key, value])=>{\n      fail(`${key}: ${value}`);\n    });\n  }\n\n  verifyTokens(access, set_access, success_Status)\n  \n  success_Status()\n}\n\n\n\n\n\n// const verify_access_token = await fetch(\n//   `${backendURL}/user/verifyAccess/`,\n//   {\n//       method: 'POST',\n//       headers: {\n//           'Accept': 'Application/JSON',\n//           'Content-Type': 'Application/json',\n//       },\n//       body: JSON.stringify({\n//         access: `${old_access}`,\n//       })\n//   }\n// );"],"mappings":"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"},"metadata":{},"sourceType":"module"}