{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { get_cashStream } from './api/cashStream_CRUD';\nimport useAccess from \"../../auths/accessToken\";\nimport useGlobalState from \"../../../Store_&_State/GlobalState\";\nimport { useEffectOnce } from \"../../../custom_Hooks/useEffectOnce\";\nimport FlowDomManagement from './Flow';\n\nfunction Streams() {\n  _s();\n\n  const {\n    streamList,\n    setStreamList\n  } = useGlobalState([]);\n  const {\n    stream,\n    setStream\n  } = useGlobalState([]);\n  const [streamHeader, setStreamHeader] = useState([]);\n  const [StreamPages, setStreamPages] = useState([]);\n  const [Streampage, setStreamPage] = useState(0);\n  const {\n    access,\n    setAccess\n  } = useAccess('');\n  const streamWidth = 27.5;\n  const periodWidth = 46;\n  const flowWidth = streamWidth / 2;\n  const snWidth = periodWidth * 0.1;\n  const dateWidth = periodWidth * 0.2;\n  const descriptionWidth = periodWidth * 0.7; // FlowDomManagement(stream, streamList)\n  // CashStream data management----------------------------------------------------------------------------------------------------\n  // const stream_Success = async(data) => {\n  //   // alert(\"d\")\n  //   await setStreamList(data.results);\n  //   const newPages = [];\n  //   if (data.count > 10) {\n  //     for (let i=0; i<Math.ceil(data.count / 10); i++) {\n  //       newPages.push({\n  //         name: (i+1).toString(),\n  //         page: i,\n  //       });\n  //       console.log(\"page\",i);\n  //     }\n  //     if (Streampage > newPages.length-1) {\n  //       await setStreamPage(Streampage-1);\n  //     }\n  //   } else {\n  //     await setStreamPage(0);\n  //   }\n  //   await setStreamPages(newPages);\n  // };\n  // const set_Access = (Access_token) => {\n  //   setAccess(Access_token)\n  // }\n  // // console.log(access)\n  // useEffectOnce(\n  //   () => {\n  //     set_Access()\n  //   },[]\n  // )\n  // const getStreamData = async()=>{\n  //   await get_cashStream(Streampage, stream_Success, (text)=>{console.log(\"Error: \", text)}, access, set_Access );\n  // };\n  // useEffectOnce(()=>{\n  // // useEffect(()=>{\n  //   getStreamData();\n  // }, [access]);\n  // useEffect(() => {\n  //   setStream(\n  //     streamList.map(function(item){\n  //       return(\n  //         <div className=\"th stream\" coldiv=\"2\" style={{width:`${streamWidth}%`}}>{item.name}</div>\n  //       )\n  //     })\n  //   );\n  //   setStreamHeader(\n  //     streamList.map(function(item){\n  //       return(\n  //         <>\n  //           <div className=\"th\" rowdiv=\"2\" style={{width:`${flowWidth}%`}}>Credit</div>\n  //           <div className=\"th\" rowdiv=\"2\" style={{width:`${flowWidth}%`}}>Debit</div>\n  //         </>\n  //       )\n  //     })\n  //   )\n  // }, [streamList]);\n  //   return (\n  //     <div id=\"thead\" >\n  //       <div className=\"tr\" id=\"trFirstRow\">\n  //         <div className=\"th\" coldiv=\"3\" id=\"period\" style={{width:`${periodWidth}%`}}>12/04/22 - 12/04/22</div>\n  //         {stream}             \n  //       </div>\n  //       <div className=\"tr\" id=\"trSecondRow\">\n  //           <div  className=\"th\" id=\"snHeader\" style={{width:`${snWidth}%`, position: `sticky`, left: `${0}`}}>S/N</div>\n  //           <div  className=\"th\" id=\"dateHeader\" style={{width:`${dateWidth}%`, position: `sticky`, left: `${snWidth+0.7}%`}}>Date</div>\n  //           <div   className=\"th\" id=\"descriptionHeader\" style={{width:`${descriptionWidth}%`, position: `sticky`, left: `${snWidth+dateWidth+1.2}%`}}>Description</div>\n  //           {streamHeader}\n  //       </div>\n  //     </div>\n  //   )\n}\n\n_s(Streams, \"LJBgOItO2AclY4MpA9JRfkG1rv0=\", false, function () {\n  return [useGlobalState, useGlobalState, useAccess];\n});\n\n_c = Streams;\nexport default Streams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Streams\");","map":{"version":3,"names":["useState","useEffect","useMemo","get_cashStream","useAccess","useGlobalState","useEffectOnce","FlowDomManagement","Streams","streamList","setStreamList","stream","setStream","streamHeader","setStreamHeader","StreamPages","setStreamPages","Streampage","setStreamPage","access","setAccess","streamWidth","periodWidth","flowWidth","snWidth","dateWidth","descriptionWidth"],"sources":["/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/Streams.js"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport {get_cashStream} from './api/cashStream_CRUD'\nimport useAccess from \"../../auths/accessToken\"\nimport useGlobalState from \"../../../Store_&_State/GlobalState\"\nimport {useEffectOnce} from \"../../../custom_Hooks/useEffectOnce\"\nimport FlowDomManagement from './Flow'\n\nfunction Streams() {\n  const {streamList, setStreamList} = useGlobalState([]);\n  const {stream, setStream} = useGlobalState([]);\n  const [streamHeader, setStreamHeader] = useState([]);\n  const [StreamPages, setStreamPages] = useState([]);\n  const [Streampage, setStreamPage] = useState(0);\n  const {access, setAccess} = useAccess('')\n\n  const streamWidth = 27.5\n  const periodWidth = 46\n  const flowWidth = streamWidth/2\n  const snWidth = periodWidth*(0.1)\n  const dateWidth = periodWidth*(0.2)\n  const descriptionWidth = periodWidth*(0.7)\n\n  // FlowDomManagement(stream, streamList)\n\n    // CashStream data management----------------------------------------------------------------------------------------------------\n  // const stream_Success = async(data) => {\n  //   // alert(\"d\")\n  //   await setStreamList(data.results);\n  //   const newPages = [];\n  //   if (data.count > 10) {\n  //     for (let i=0; i<Math.ceil(data.count / 10); i++) {\n  //       newPages.push({\n  //         name: (i+1).toString(),\n  //         page: i,\n  //       });\n  //       console.log(\"page\",i);\n  //     }\n  //     if (Streampage > newPages.length-1) {\n  //       await setStreamPage(Streampage-1);\n  //     }\n  //   } else {\n  //     await setStreamPage(0);\n  //   }\n  //   await setStreamPages(newPages);\n  // };\n  \n  // const set_Access = (Access_token) => {\n  //   setAccess(Access_token)\n  // }\n\n  // // console.log(access)\n\n  // useEffectOnce(\n  //   () => {\n  //     set_Access()\n  //   },[]\n  // )\n\n  // const getStreamData = async()=>{\n  //   await get_cashStream(Streampage, stream_Success, (text)=>{console.log(\"Error: \", text)}, access, set_Access );\n  // };\n\n  // useEffectOnce(()=>{\n  // // useEffect(()=>{\n  //   getStreamData();\n  // }, [access]);\n\n  // useEffect(() => {\n  //   setStream(\n  //     streamList.map(function(item){\n  //       return(\n  //         <div className=\"th stream\" coldiv=\"2\" style={{width:`${streamWidth}%`}}>{item.name}</div>\n  //       )\n  //     })\n  //   );\n\n  //   setStreamHeader(\n  //     streamList.map(function(item){\n        \n  //       return(\n  //         <>\n  //           <div className=\"th\" rowdiv=\"2\" style={{width:`${flowWidth}%`}}>Credit</div>\n  //           <div className=\"th\" rowdiv=\"2\" style={{width:`${flowWidth}%`}}>Debit</div>\n  //         </>\n  //       )\n  //     })\n  //   )\n  // }, [streamList]);\n\n\n\n  //   return (\n  //     <div id=\"thead\" >\n  //       <div className=\"tr\" id=\"trFirstRow\">\n  //         <div className=\"th\" coldiv=\"3\" id=\"period\" style={{width:`${periodWidth}%`}}>12/04/22 - 12/04/22</div>\n  //         {stream}             \n  //       </div>\n\n  //       <div className=\"tr\" id=\"trSecondRow\">\n  //           <div  className=\"th\" id=\"snHeader\" style={{width:`${snWidth}%`, position: `sticky`, left: `${0}`}}>S/N</div>\n  //           <div  className=\"th\" id=\"dateHeader\" style={{width:`${dateWidth}%`, position: `sticky`, left: `${snWidth+0.7}%`}}>Date</div>\n  //           <div   className=\"th\" id=\"descriptionHeader\" style={{width:`${descriptionWidth}%`, position: `sticky`, left: `${snWidth+dateWidth+1.2}%`}}>Description</div>\n  //           {streamHeader}\n  //       </div>\n  //     </div>\n        \n  //   )\n}\n\nexport default Streams"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,aAAR,QAA4B,qCAA5B;AACA,OAAOC,iBAAP,MAA8B,QAA9B;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM;IAACC,UAAD;IAAaC;EAAb,IAA8BL,cAAc,CAAC,EAAD,CAAlD;EACA,MAAM;IAACM,MAAD;IAASC;EAAT,IAAsBP,cAAc,CAAC,EAAD,CAA1C;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM;IAACmB,MAAD;IAASC;EAAT,IAAsBhB,SAAS,CAAC,EAAD,CAArC;EAEA,MAAMiB,WAAW,GAAG,IAApB;EACA,MAAMC,WAAW,GAAG,EAApB;EACA,MAAMC,SAAS,GAAGF,WAAW,GAAC,CAA9B;EACA,MAAMG,OAAO,GAAGF,WAAW,GAAE,GAA7B;EACA,MAAMG,SAAS,GAAGH,WAAW,GAAE,GAA/B;EACA,MAAMI,gBAAgB,GAAGJ,WAAW,GAAE,GAAtC,CAbiB,CAejB;EAEE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;AACD;;GApGQd,O;UAC6BH,c,EACRA,c,EAIAD,S;;;KANrBI,O;AAsGT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}