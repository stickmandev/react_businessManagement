[{"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/index.js":"1","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/App.js":"2","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/reportWebVitals.js":"3","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/Store_&_State/store.js":"4","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/currentNum_Slice.js":"5","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Questions.js":"6","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Score.js":"7","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Answer.js":"8","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Progress.js":"9","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/numOfQuestions_Slice.js":"10","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/data_Id_Slice.js":"11","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/answeredCorrect_Slice.js":"12","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/answeredFailed_Slice.js":"13","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/correctAnsBorder_Slice.js":"14","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/index.js":"15","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/reportWebVitals.js":"16","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/router.js":"17","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/Store_&_State/store.js":"18","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/HeaderLayout.js":"19","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/FooterLayout.js":"20","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/Register.js":"21","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/Ledger.js":"22","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/login/Login.js":"23","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/slices/navSlice.js":"24","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/Registration_Form.js":"25","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/EmailSent.js":"26","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/login/components/api/login_api.js":"27","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/api/register_api.js":"28","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/backendURL.js":"29","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/UserVerification.js":"30","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/api/userVerification_api.js":"31","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/custom_Hooks/useEffectOnce.js":"32","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/auths/accessToken.js":"33","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/accessToken.js":"34","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/Streams.js":"35","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/auths/verifyTokens.js":"36","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/cashStream_CRUD.js":"37","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/Flow.js":"38","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/cashFow_CRUD.js":"39","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/Store_&_State/GlobalState.js":"40","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/CreateFlow.js":"41","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/categories_api.js":"42","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/savedTransaction_api.js":"43","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/leftSide.js":"44","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/rightSide.js":"45","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/subNav.js":"46","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/filtter.js":"47","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios.js":"48","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/profit.js":"49","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/profitMargin.js":"50","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/markup.js":"51","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/netProfit.js":"52","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/freeCashFlow.js":"53","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/ownersEquity.js":"54","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/ratios_api.js":"55","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/EditFlow.js":"56","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/ServiceNotAvailable.js":"57","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/enventory/Enventory.js":"58","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/keepSafe/KeepSafe.js":"59","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/home/Home.js":"60","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/landingPage/landingPage.js":"61","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/slices/navSliceMobile.js":"62","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/subNav_mobile.js":"63","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/CreateFlow_mobile.js":"64","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/EditFlow_mobile.js":"65"},{"size":695,"mtime":1654163886700,"results":"66","hashOfConfig":"67"},{"size":536,"mtime":1654364921452,"results":"68","hashOfConfig":"67"},{"size":362,"mtime":1653796833809,"results":"69","hashOfConfig":"67"},{"size":806,"mtime":1654428381952,"results":"70","hashOfConfig":"67"},{"size":429,"mtime":1654259561018,"results":"71","hashOfConfig":"67"},{"size":2044,"mtime":1654374690213,"results":"72","hashOfConfig":"67"},{"size":1586,"mtime":1654427993612,"results":"73","hashOfConfig":"67"},{"size":3703,"mtime":1654429211552,"results":"74","hashOfConfig":"67"},{"size":576,"mtime":1654368499293,"results":"75","hashOfConfig":"67"},{"size":383,"mtime":1654257631294,"results":"76","hashOfConfig":"67"},{"size":411,"mtime":1654259613474,"results":"77","hashOfConfig":"67"},{"size":459,"mtime":1654336958317,"results":"78","hashOfConfig":"67"},{"size":453,"mtime":1654339774885,"results":"79","hashOfConfig":"67"},{"size":496,"mtime":1654428616792,"results":"80","hashOfConfig":"67"},{"size":965,"mtime":1659570424980,"results":"81","hashOfConfig":"82"},{"size":362,"mtime":1653796833809,"results":"83","hashOfConfig":"82"},{"size":4228,"mtime":1664497472038,"results":"84","hashOfConfig":"82"},{"size":646,"mtime":1662411723848,"results":"85","hashOfConfig":"82"},{"size":1301,"mtime":1664484829631,"results":"86","hashOfConfig":"82"},{"size":274,"mtime":1662935702389,"results":"87","hashOfConfig":"82"},{"size":719,"mtime":1664493216244,"results":"88","hashOfConfig":"82"},{"size":3748,"mtime":1664383748707,"results":"89","hashOfConfig":"82"},{"size":2483,"mtime":1662768995736,"results":"90","hashOfConfig":"82"},{"size":1549,"mtime":1659109822529,"results":"91","hashOfConfig":"82"},{"size":3124,"mtime":1664490555414,"results":"92","hashOfConfig":"82"},{"size":423,"mtime":1664492461441,"results":"93","hashOfConfig":"82"},{"size":977,"mtime":1664537608748,"results":"94","hashOfConfig":"82"},{"size":943,"mtime":1655200662707,"results":"95","hashOfConfig":"82"},{"size":502,"mtime":1664960749688,"results":"96","hashOfConfig":"82"},{"size":1843,"mtime":1664496627805,"results":"97","hashOfConfig":"82"},{"size":544,"mtime":1655167523144,"results":"98","hashOfConfig":"82"},{"size":929,"mtime":1655199569571,"results":"99","hashOfConfig":"82"},{"size":498,"mtime":1655121453840,"results":"100","hashOfConfig":"82"},{"size":501,"mtime":1655231599564,"results":"101","hashOfConfig":"82"},{"size":5219,"mtime":1664926350103,"results":"102","hashOfConfig":"82"},{"size":3629,"mtime":1659437981197,"results":"103","hashOfConfig":"82"},{"size":2331,"mtime":1664927757419,"results":"104","hashOfConfig":"82"},{"size":21234,"mtime":1664873871811,"results":"105","hashOfConfig":"82"},{"size":9047,"mtime":1664874543144,"results":"106","hashOfConfig":"82"},{"size":2734,"mtime":1664926273667,"results":"107","hashOfConfig":"82"},{"size":11673,"mtime":1664611290046,"results":"108","hashOfConfig":"82"},{"size":3339,"mtime":1664366106365,"results":"109","hashOfConfig":"82"},{"size":3681,"mtime":1664366114661,"results":"110","hashOfConfig":"82"},{"size":7334,"mtime":1664457591540,"results":"111","hashOfConfig":"82"},{"size":263,"mtime":1662309514624,"results":"112","hashOfConfig":"82"},{"size":12274,"mtime":1664466461260,"results":"113","hashOfConfig":"82"},{"size":9413,"mtime":1664959725160,"results":"114","hashOfConfig":"82"},{"size":11838,"mtime":1664497546168,"results":"115","hashOfConfig":"82"},{"size":15041,"mtime":1663982847179,"results":"116","hashOfConfig":"82"},{"size":1054,"mtime":1656959243071,"results":"117","hashOfConfig":"82"},{"size":140,"mtime":1656944473081,"results":"118","hashOfConfig":"82"},{"size":146,"mtime":1656944498329,"results":"119","hashOfConfig":"82"},{"size":152,"mtime":1656944511321,"results":"120","hashOfConfig":"82"},{"size":152,"mtime":1656944521649,"results":"121","hashOfConfig":"82"},{"size":1847,"mtime":1664366110241,"results":"122","hashOfConfig":"82"},{"size":12760,"mtime":1664308633228,"results":"123","hashOfConfig":"82"},{"size":883,"mtime":1664483416028,"results":"124","hashOfConfig":"82"},{"size":639,"mtime":1661996209622,"results":"125","hashOfConfig":"82"},{"size":635,"mtime":1661996349570,"results":"126","hashOfConfig":"82"},{"size":606,"mtime":1661996515360,"results":"127","hashOfConfig":"82"},{"size":2417,"mtime":1654600092520,"results":"128","hashOfConfig":"82"},{"size":1343,"mtime":1662413180948,"results":"129","hashOfConfig":"82"},{"size":9011,"mtime":1664482408565,"results":"130","hashOfConfig":"82"},{"size":12637,"mtime":1663196573446,"results":"131","hashOfConfig":"82"},{"size":13730,"mtime":1663198486526,"results":"132","hashOfConfig":"82"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kfzmui",{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5i2832",{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"267"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/index.js",[],[],"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/App.js",[],[],"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/reportWebVitals.js",[],[],"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/Store_&_State/store.js",[],[],"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/currentNum_Slice.js",[],[],"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Questions.js",["353"],[],"import React, {useState, useEffect} from 'react'\nimport { useSelector } from 'react-redux'\n\nimport data from \"../questions.json\"  \nimport star1 from \"../star1.png\"  \nimport star2 from \"../star2.png\"  \n\nfunction Questions() {\n    const numOfQuestions = useSelector((state) => state.numOfQuestions.value)\n    const currentNum = useSelector((state) => state.currentNum.value)\n    const data_Id = useSelector((state) => state.data_Id.value)\n    const [difficulty, setDifficulty] = React.useState([]);\n    \n    useEffect(() => {\n        switch (data[data_Id].difficulty) {\n            case 'easy':\n                setDifficulty(\n                    <>\n                    <img src={star1} alt=\"\" />\n                    <img src={star2} alt=\"\" />\n                    <img src={star2} alt=\"\" />\n                    </>\n                )\n                break;\n\n                case 'medium':\n                    setDifficulty(\n                        <>\n                        <img src={star1} alt=\"\" />\n                        <img src={star1} alt=\"\" />\n                        <img src={star2} alt=\"\" />\n                        </>\n                    )\n                    break;\n\n                case 'hard':\n                    setDifficulty(\n                        <>\n                        <img src={star1} alt=\"\" />\n                        <img src={star1} alt=\"\" />\n                        <img src={star1} alt=\"\" />\n                        </>\n                    )\n                    break;\n        \n            default:\n                break;\n        }\n    }, [data_Id])\n\n    return (\n        <>\n            <div>\n                <h1> Question {currentNum} of {numOfQuestions} </h1>\n\n                <h3>{decodeURIComponent(data[data_Id].category)}</h3>\n\n                <div id='starOverlay'>\n                    <small className='stars'> {difficulty} </small>\n                </div>\n            </div>\n\n            <p className='question'>{decodeURIComponent(data[data_Id].question)}</p>\n        </>\n    )\n}\n\nexport default Questions","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Score.js",["354","355","356","357"],[],"import React, {useState, useEffect, useMemo} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction Score() {\n    const numOfQuestions = useSelector((state) => state.numOfQuestions.value)\n    const answeredCorrect = useSelector((state) => state.answeredCorrect.value)\n    const answeredFailed = useSelector((state) => state.answeredFailed.value)\n    const [score, setScore] = React.useState(0);\n    const [maxScore, setMaxScore] = React.useState(100);\n    const [minScore, setMinScore] = React.useState(0);\n\n    useEffect(\n        () => {\n            setScore(\n                (answeredCorrect*100)/numOfQuestions\n            )\n    \n            setMaxScore(\n                100-((answeredFailed*100)/numOfQuestions)\n            )\n\n            setMinScore(\n                100-maxScore\n            )\n        },[answeredCorrect, answeredFailed]\n    )\n\n    useEffect(\n        () => {\n            setMinScore(\n                100-maxScore\n            )\n        },[maxScore]\n    )\n\n    return (\n        <div id='scoreChat'>\n            <div id='scoreDsp'>\n                <span>{score}%</span> \n                <span>{maxScore}%</span>\n            </div>\n            <div id='scoreOverlay' className=\"progress-bar\" >\n                <div id='score' className=\"progress-bar\" style={{width:`${score}%`}}></div>\n                <div id='minScore' className=\"progress-bar\" style={{width:`${minScore}%`}}></div>\n                <div id='maxScore' className=\"progress-bar\" style={{width:`${maxScore}%`}}></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Score","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Answer.js",["358","359","360"],[],"import React, {useState, useEffect, useMemo} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {increase_CurrentNum} from './slices/currentNum_Slice'\nimport {increase_Data_Id} from './slices/data_Id_Slice'\nimport {increase_answeredCorrect} from './slices/answeredCorrect_Slice'\nimport {increase_answeredFailed} from './slices/answeredFailed_Slice'\nimport data from \"../questions.json\"  \n\nfunction Answer() {\n    const data_Id = useSelector((state) => state.data_Id.value)\n    const numOfQuestions = useSelector((state) => state.numOfQuestions.value)\n    const currentNum = useSelector((state) => state.currentNum.value)\n    \n    const [answers, setAnswers] = React.useState([]);\n    const [answerStatus, setAnswerStatus] = React.useState([]);\n    const [answersArr, setAnswersArr] = React.useState([]);\n    const [nextBTN, setnextBTN] = React.useState(true);\n    const [nextBTN_Disp, setNextBTN_Disp] = React.useState(\"hidden\");\n\n    const dispatch = useDispatch()\n    \n    const nextQuestion =()=>{\n        if(currentNum<numOfQuestions){\n            dispatch(increase_CurrentNum())\n            dispatch(increase_Data_Id())\n            setNextBTN_Disp(\"hidden\")\n        }\n        const answerClass = document.getElementsByClassName(\"answers\")\n        for(let i=0; i<answerClass.length; i++){\n            answerClass[i].disabled = false\n        }\n        setnextBTN(true)\n        setAnswerStatus(\"\")\n        document.getElementById(\"correctAns\").style.border=\"1px solid black\"\n    }\n\n    const validateAns =(e)=>{\n        if(e.target.innerText===decodeURIComponent(data[data_Id].correct_answer)){\n            setAnswerStatus(\"Correct!\")\n            dispatch(increase_answeredCorrect())\n            setNextBTN_Disp(\"visible\")\n        }else{\n            setAnswerStatus(\"Sorry!\")\n            dispatch(increase_answeredFailed())\n            setNextBTN_Disp(\"visible\")\n            document.getElementById(\"correctAns\").style.border=\"2px solid black\"\n        }\n        const answerClass = document.getElementsByClassName(\"answers\")\n        for(let i=0; i<answerClass.length; i++){\n            answerClass[i].disabled = true\n        }\n        setnextBTN(false)\n    }\n\n\n    useMemo(\n        () => {\n            const answersConbinedArr = [\n                <button className='answers' id='correctAns' onClick={validateAns} >\n                    {decodeURIComponent(data[data_Id].correct_answer)}\n                </button>\n            ];\n            \n            data[data_Id].incorrect_answers.map(  \n                (answers, pk, answersObj)=>{\n                    answersConbinedArr.push(\n                        <button className='answers' onClick={validateAns} >\n                            {decodeURIComponent(answers)}\n                        </button>\n                    )\n                }\n            );\n\n            const shuffleArray = array => {\n                for (let i = array.length - 1; i > 0; i--) {\n                  const j = Math.floor(Math.random() * (i + 1));\n                  const temp = array[i];\n                  array[i] = array[j];\n                  array[j] = temp;\n                }\n            };\n    \n            shuffleArray(answersConbinedArr);\n            setAnswersArr(answersConbinedArr);\n        }, [data_Id]\n    );\n\n\n    useEffect(\n        ()=>{\n            setAnswers(answersArr)  \n        }, [answersArr]\n    )\n\n\n    return (\n        <>\n            <div id='answers'>\n                {answers}\n            </div>\n\n            <h2 id='answerStatus' >{answerStatus}</h2>\n\n            <button id='nextQuestion'  onClick={nextQuestion} disabled={nextBTN} style={{visibility:nextBTN_Disp}}>next</button>\n        </>\n    )\n}\n\nexport default Answer","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/Progress.js",["361","362","363","364"],[],"import React, {useState, useEffect, useMemo} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction Progress() {\n    const numOfQuestions = useSelector((state) => state.numOfQuestions.value)\n    const currentNum = useSelector((state) => state.currentNum.value)\n    const [progress, setProgress] = React.useState(0);\n\n    useEffect(() => {\n        setProgress((currentNum*100)/numOfQuestions)\n    })\n    \n    return (\n        <progress  id='progressBar' className=\"progress-bar\" style={{width:`${progress}%`}}></progress>\n    )\n}\n\nexport default Progress","/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/numOfQuestions_Slice.js",[],[],"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/data_Id_Slice.js",[],[],"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/answeredCorrect_Slice.js",[],[],"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/answeredFailed_Slice.js",[],[],"/home/gcg/Desktop/Programing /javascript/other peoples projects/challenge-quiz-master/src/components/slices/correctAnsBorder_Slice.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/index.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/reportWebVitals.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/router.js",["365","366","367"],[],"import React from \"react\";\nimport {BrowserRouter, Route, Routes} from 'react-router-dom'\n// import Ledger from \"./features/ledger/Ledger\";\nimport HeaderLayout from \"./features/defualt_Layouts/HeaderLayout\";\nimport FooterLayout from \"./features/defualt_Layouts/FooterLayout\";\nimport LandingPage from \"./features/landingPage/landingPage\";\nimport Registration from \"./features/register/Register\";\nimport Login from \"./features/login/Login\";\nimport Ledger from \"./features/ledger/Ledger\"\nimport ServiceNotAvailable from \"./features/ledger/ServiceNotAvailable\"\nimport UserVerification from \"./features/register/components/UserVerification\";\nimport Filtter from \"./features/ledger/components/filtter\";\nimport Ratios from \"./features/ledger/components/ratios\";\nimport Profit from \"./features/ledger/components/ratios/profit\";\nimport ProfitMargin from \"./features/ledger/components/ratios/profitMargin\";\nimport Markup from \"./features/ledger/components/ratios/markup\";\nimport NetProfit from \"./features/ledger/components/ratios/netProfit\";\nimport FreeCashFlow from \"./features/ledger/components/ratios/freeCashFlow\";\nimport OwnersEquity from \"./features/ledger/components/ratios/ownersEquity\";\nimport CreateFlow_mobile from \"./features/ledger/components/CreateFlow_mobile\";\nimport EditFlow_Mobile from \"./features/ledger/components/EditFlow_mobile\";\n\nimport Enventory from \"./features/enventory/Enventory\";\nimport KeepSafe from \"./features/keepSafe/KeepSafe\";\nimport Home from \"./features/home/Home\";\n\nconst Router = () => {\n    return (\n        <>\n            <BrowserRouter >\n                <HeaderLayout />     \n                    <Routes  >\n                        {/* <Route path='/' exact element={<LandingPage />} /> */}\n                        <Route path='/registration' exact element={<Registration />} />\n                        <Route path='/registration/verify/' exact element={<UserVerification />} />\n                        <Route path='/' exact element={<Login />} />\n                        <Route path='/login/' exact element={<Login />} />\n\n                        <Route path='/ledger/' exact element={<Ledger />} />\n                        <Route path='/MobileLedger/' exact element={<Ledger />} />\n                        <Route path='/ledger/filtter' exact element={<Filtter />} />\n                        <Route path='/ledger/ratios/' exact element={<Ratios />} />\n                        <Route path='/ledger/ratios/profit' exact element={<Profit />} />\n                        <Route path='/ledger/ratios/profitmargin' exact element={<ProfitMargin />} />\n                        <Route path='/ledger/ratios/markup' exact element={<Markup />} />\n                        <Route path='/ledger/ratios/netprofit' exact element={<NetProfit />} />\n                        <Route path='/ledger/ratios/freecashflow' exact element={<FreeCashFlow />} />\n                        <Route path='/ledger/ratios/ownersequity' exact element={<OwnersEquity />} />\n                        <Route path='/ledger/CreateFlow' exact element={<CreateFlow_mobile />} />\n                        <Route path='/ledger/editFlow' exact element={<EditFlow_Mobile />} />\n\n                        <Route path='/ledger/NotAvailableYet/RecurringRecord' exact element={<ServiceNotAvailable />} />\n                        <Route path='/ledger/NotAvailableYet/convert_to_pdf' exact element={<ServiceNotAvailable />} />\n                        <Route path='/ledger/NotAvailableYet/Graphs' exact element={<ServiceNotAvailable />} />\n                        <Route path='/ledger/NotAvailableYet/Settings' exact element={<ServiceNotAvailable />} />\n                        <Route path='/ledger/NotAvailableYet/add' exact element={<ServiceNotAvailable />} />\n                        <Route path='/ledger/NotAvailableYet/ratio' exact element={<ServiceNotAvailable />} />\n\n                        <Route path='/enventory' exact element={<Enventory />} />\n                        <Route path='/keepSafe' exact element={<KeepSafe />} />\n                        <Route path='/home' exact element={<Home />} />\n                    </Routes>\n                <FooterLayout />      \n            </BrowserRouter>\n        </>\n    )   \n\n};\n\nexport default Router; ","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/Store_&_State/store.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/HeaderLayout.js",["368","369"],[],"import React, {useEffect} from 'react'\nimport \"./HeaderLayout.css\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport { NavLink } from \"react-router-dom\";\n// import { register_nav } from './slices/navSlice'\n// import { register_nav } from './slices/navSliceMobile'\n// import { useSelector, useDispatch } from 'react-redux'\n\nfunction HeaderLayout() {\n    const navSlice = useSelector((state) => state.navBar.value)\n    const navSliceMobile = useSelector((state) => state.navBarMobile.value)\n    // const dispatch = useDispatch()\n    \n    \n    return (\n        <header>\n            <div id=\"navbar1\" className='desktop'>\n                <div id=\"name\">\n                    <NavLink to=\"/\">\n                        <h1>Oga Manager</h1>\n                    </NavLink>\n                </div>\n                <ul>\n                    {navSlice}\n                </ul>\n            </div>\n\n            <div id='navbarMobile' className='mobile'>\n                <div id=\"name\">\n                    <NavLink to=\"/\">\n                        <h1>OGA</h1>\n                        <h1>MANAGER</h1>\n                    </NavLink>\n                </div>\n                <ul>\n                    {navSliceMobile}\n                </ul>\n            </div>\n        </header>\n    )\n}\n\nexport default HeaderLayout","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/FooterLayout.js",["370"],[],"import React from 'react'\nimport \"./FooterLayout.css\"\nimport SubNav_mobile from './subNav_mobile'\n\nfunction FooterLayout() {\n  return (\n    <>\n      <footer className='desktop'>@Business 2022</footer>\n      {/* <SubNav_mobile/> */}\n    </>\n  )\n}\n\nexport default FooterLayout","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/Register.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/Ledger.js",["371","372","373","374","375","376","377"],[],"import { useState, useEffect, useMemo } from 'react';\nimport useAccess from \"../auths/accessToken\"\nimport Streams from './components/Streams'\nimport FlowDomManagement from './components/Flow'\nimport \"./ledger.css\"\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\nimport CreateFlow from './components/CreateFlow';\nimport EditFlow from './components/EditFlow';\nimport LeftSide from '../defualt_Layouts/leftSide';\nimport RightSide from '../defualt_Layouts/rightSide';\nimport SubNav from '../defualt_Layouts/subNav';\nimport SubNav_mobile from '../defualt_Layouts/subNav_mobile';\nimport useGlobalState from \"../../Store_&_State/GlobalState\"\n\nimport { clear_nav } from '../defualt_Layouts/slices/navSlice'\nimport { ledger_mobileNav } from '../defualt_Layouts/slices/navSliceMobile'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport NumberFormat from 'react-number-format';\n\nfunction Ledger(stream_length) {\n  const [blurIndex, setBlurIndex] = useState(0);\n  \n  const {total_balance, setTotal_balance} = useGlobalState('');\n  const {grandTotal, setGrandTotal} = useGlobalState('');\n\n  const streamWidth = 27.5\n  const periodWidth = 46\n  const table_width = (stream_length*streamWidth) + periodWidth\n\n  const dispatch = useDispatch()\n\n  useEffect(\n    () => {\n        dispatch(clear_nav())\n        dispatch(ledger_mobileNav())\n    },[]\n  )\n\n  // useEffect(() => {\n  //   // const leftNav_selected = document.getElementsByClassName('leftNav_selected')\n\n  //   // for( var i =0; i < leftNav_selected.length; i++){\n  //   //   leftNav_selected[i].style.backgroundColor = 'var(--color1)'\n  //   //   leftNav_selected[i].style.color = 'var(--color2)'\n  //   // }\n\n  //   const cashbook = document.getElementsByClassName('cashbook')\n  //   console.log(cashbook)\n  //   cashbook[0].style.backgroundColor = 'var(--color5)'\n  // }, []);\n\n  return (\n    <>\n      <section id=\"ledger_section\" className='column'style={{filter:`blur(${blurIndex}px)`}}>\n        <SubNav visibility=\"visible\"/>\n        <div className='row overlay'>\n          <LeftSide/>\n            <ScrollSync>\n            <div id=\"row1_scroll_overlay\">\n              <span id='row1' >\n                <div id=\"big_table_overlay\"> \n                  <div id=\"table_overlay\" className=\"table_overlay\" >\n                    <div>\n                      <div id=\"table-ledger\" className ='table' style={{ width:`${table_width}vw`}} >\n                        <Streams/>\n                    \n                        <FlowDomManagement blur={setBlurIndex} Stream={Streams}/>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div id='totals'>\n                  <ScrollSyncPane>\n                  <div id=\"balances_overlay\" >\n                    {total_balance}\n                  </div>\n                  </ScrollSyncPane>\n\n                  <div id='grand_Total_overlay'>\n                    <strong><p>Grand Total($)</p></strong>\n                    <div id=\"grand_Total\">\n                      <h1 id='grandTotal_text' className='stream'>\n                        <NumberFormat\n                          value={grandTotal}\n                          displayType={'text'}\n                          thousandSeparator={true}\n                          // prefix={'$'}\n                        />\n                      </h1>\n                    </div>\n                  </div>\n                </div>\n                {/* <SubNav_mobile/> */}\n              </span>\n            </div>\n            </ScrollSync>\n          <CreateFlow blur={setBlurIndex}/>\n          <EditFlow blur={setBlurIndex}/>\n          <RightSide/>\n        </div>\n        <SubNav_mobile/>\n      </section>\n    </>\n  );\n}\n\n  \n\n\nexport default Ledger","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/login/Login.js",["378"],[],"import { useState, useEffect } from 'react';\n// import { Link } from \"react-router-dom\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport login_api from \"./components/api/login_api\"\nimport useAccess from \"../auths/accessToken\"\n// import useRefresh from \"../refreshToken\"\nimport './Login.css'\n\nfunction Login() {\n  const {access, setAccess} = useAccess('')\n  // const [refresh, setRefresh] = useRefresh\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  // setAccess.access()\n  let navigate = useNavigate();\n\n  useEffect(\n    () => {\n      \n    },[]\n  )\n\n  const success = async (text)=> {\n    console.log(\"You are logged in!\");\n    await localStorage.setItem(\"refreshToken\", text.refresh);\n    setAccess(\n      // {\n        text.access,\n      // }\n    )\n    navigate(\"/ledger\");\n  };\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Loggin in with\", email, password);\n    login_api(email, password, success, (text)=>{setMessage(text)});\n  };\n\n  return (\n        \n    <section>\n      <div id=\"loginOverlay\">\n        <div id=\"loginTitle\">\n          <h1>Login</h1>\n        </div>\n\n        <div id=\"loginForm_overlay\">\n          <form id=\"loginForm\" onSubmit={formSubmit}>\n              <div className=\"inputTextOverlay\">\n                <p>E-mail</p> \n                <input className=\"input_form\" autoFocus type=\"text\" id=\"email\" placeholder=\"my_mail@mail.com\" onChange={(e)=>{setEmail(e.target.value)}} value={email} />\n              </div>\n              \n              <div className=\"inputTextOverlay\">\n                <p>Password</p>\n                <input className=\"input_form\" type=\"password\" id=\"password\" placeholder=\"************\" onChange={(e)=>{setPassword(e.target.value)}} value={password} />\n              </div>\n              \n              \n              <div style={{margin: \"1em\", color: \"red\"}}>{message}</div>\n\n              <p>Forgot your password? <span>Click Here</span></p>\n              \n              <div id=\"submitBTN_overlay\">\n                <button id=\"submit\" type=\"submit\" value=\"Login\" >LOG IN</button>\n              </div>\n              \n          </form>\n\n          <p>You don't have an account?</p>\n\n          <Link to=\"/registration\" id='registerBTN_Overlay'>\n            <button id=\"registerBTN\">REGISTER</button>\n          </Link>\n        </div>\n        \n\n        \n      </div>\n    </section>\n  );\n}\n \nexport default Login","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/slices/navSlice.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/Registration_Form.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/EmailSent.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/login/components/api/login_api.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/api/register_api.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/backendURL.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/UserVerification.js",["379","380"],[],"import userVerification_api from \"./api/userVerification_api\"\nimport React, {useEffect, useState, useRef} from 'react'\n// import { Link, useNavigate } from \"react-router-dom\";\nimport {useEffectOnce} from \"../../../custom_Hooks/useEffectOnce\"\nimport { NavLink } from \"react-router-dom\";\nimport './UserVerification.css';\n\n\nfunction UserVerification() {\n    const [verificationStatus, setVerificationStatus] = useState(\n        <>\n            \n            {/* <p>loading....</p> */}\n        </>\n    );\n    // let navigate = useNavigate();\n    \n    const success = (text)=> {\n        console.log(text)\n        setVerificationStatus(\n            <>\n                {/* <h2>Congratulations</h2>\n                <p>start recording and have fun</p>\n                <div></div>\n                <NavLink to=\"/login\">\n                    <button></button>\n                </NavLink> */}\n            </>\n        )\n    };\n\n    const fail = (text)=> {\n        setVerificationStatus(\n            <>\n                <div id=\"SuccessCongratulationStatus\">\n                    <div></div>\n                    <h2>Congratulations!</h2>\n                    <p>Start recording and have fun</p>\n                    <NavLink to=\"/login\">\n                        <button>Continue</button>\n                    </NavLink>\n                </div>\n\n                {/* <p>{text}</p>\n                <p>sorry, if your verification didnt go through please contact surport and try again</p> */}\n            </>\n        )\n        console.log(text)\n    }; \n    \n    useEffectOnce(() => { \n        const code = window.location.href.slice(48)\n        userVerification_api(code, success, fail)\n    }, []); \n\n  return (  \n    <section>\n        <div id=\"userVerificationOverlay\">\n            {verificationStatus}\n        </div> \n    </section>\n  )\n}\n\nexport default UserVerification","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/register/components/api/userVerification_api.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/custom_Hooks/useEffectOnce.js",["381","382"],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/auths/accessToken.js",["383"],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/accessToken.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/Streams.js",["384","385","386","387","388","389","390","391","392","393","394","395","396","397"],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/auths/verifyTokens.js",["398"],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/cashStream_CRUD.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/Flow.js",["399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424"],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/cashFow_CRUD.js",["425","426","427"],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/Store_&_State/GlobalState.js",["428"],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/CreateFlow.js",["429","430","431","432","433","434"],[],"import { useState, useEffect } from 'react';\nimport React from 'react'\nimport Modal from 'react-modal';\nimport './createFlow.css'\nimport useGlobalState from \"../../../Store_&_State/GlobalState\"\nimport useAccess from \"../../auths/accessToken\"\nimport {create_cashFlow} from './api/cashFow_CRUD'\nimport {get_categories, create_categories} from \"./api/categories_api\"\nimport {get_savedTransctions, create_savedTransctions} from './api/savedTransaction_api'\nimport NumberFormat from 'react-number-format';\n\nfunction CreateFlow(prop) {\n    const [description, setDescription] = useState(\"\");\n    const [selected_Streamm, setSelected_Streamm] = useState(\"\");\n    const [credit, setCredit] = useState('');\n    const [debit, setDebit] = useState('');\n    const [categoryList, setcategoryList] = useState(\"\");\n    const [categorySelected, setCategorySelected] = useState(\"\");\n    const [newCategory, setNewCategory] = useState(\"\");\n    const [selected_Category, setSelected_Category] = useState(\"\");\n    const [savedTransaction, setSavedTransaction] = useState('');\n    const [selectColor, setSelectColor] = useState(\"gray\");\n    const [stream, setStream] = useState([]);\n    const [savedTransctionList, setSavedTransctionList] = useState([]);\n    \n    const {access, setAccess} = useAccess('')\n    const {createFlowModalIsOpen, setCreateFlowIsOpen} = useGlobalState([]);\n    const {streamList, setStreamList} = useGlobalState([]);\n    const {reRender, setReRender} = useGlobalState([0]);\n\n    \n    \n    const set_Access = (Access_token) => {\n        setAccess(Access_token)\n    }\n\n\n    // set stream data............................................................................................\n    useEffect(() => {\n        setStream(\n          streamList.map(function(item){\n            return(\n                <button className='streamBTNs' id={'stream'+item.id} required onClick={(e)=>{ \n                    e.preventDefault(); \n                    setSelected_Streamm(item.id);\n                    const streamBTNs = document.getElementsByClassName('streamBTNs')\n\n                    for( var i =0; i < streamBTNs.length; i++){\n                        streamBTNs[i].style.backgroundColor = 'white'\n                        streamBTNs[i].style.color = 'var(--color5)'\n                    }\n\n                    e.target.style.backgroundColor = 'var(--color5)'\n                    e.target.style.color = 'white'\n                }}>\n                    {item.name}\n                </button>\n            )\n          })\n        );\n    \n    }, [streamList]);\n\n\n    // modal management......................................................................................................\n\n    function afterOpenModal() {\n        load_categories()\n        load_savedTransactions()\n    }\n\n    function closeModal(e) {\n        e.preventDefault();\n        setCreateFlowIsOpen(false);\n        prop.blur(0)\n    }\n\n\n    // reacord create.................................................................................................\n    const record_create_Success = async(data, page) => {\n        setCreateFlowIsOpen(false);\n        prop.blur(0)\n        setReRender(reRender+1)\n        alert(\"record added\")\n        setDescription('')\n        setCredit('')\n        setDebit('')\n    };\n\n    const create_Data = async(e)=>{\n        e.preventDefault()\n        await create_cashFlow(description, selected_Streamm, credit, debit, categorySelected, record_create_Success, access, set_Access);\n    };\n\n\n    // get saved transactions........................................................................................\n    const getSavedTransction_success = (text) => {\n        const data = JSON.parse(text)\n        setSavedTransctionList(\n            data.results.map(function(item){\n              return(\n                <option value={JSON.stringify(item)}>{item.description}</option> \n              )\n            })\n        )\n    }\n\n    const getSavedTransction_fail = () => {\n        \n    }\n    \n    const load_savedTransactions = () => {\n        get_savedTransctions(getSavedTransction_success, getSavedTransction_fail, access, setAccess)\n        \n    }\n\n    //apply saved transaaction \n    const applySavedTransaction = (e) => {\n        const selected = JSON.parse(e.target.value)\n        if(selected !== \"\"){\n            setCategorySelected(selected.category)\n            setCredit(selected.Credit)\n            setDebit(selected.Debit)\n            setSelected_Streamm(selected.cashStream)\n            const streamBTNs = document.getElementsByClassName('streamBTNs')\n            for( var i =0; i < streamBTNs.length; i++){\n                streamBTNs[i].style.backgroundColor = 'white'\n                streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n            }\n            document.getElementById('stream'+selected.cashStream).style.backgroundColor = 'rgb(142, 143, 196)'\n            document.getElementById('stream'+selected.cashStream).style.color = 'white'\n            setDescription(selected.description)\n        }else{\n            setCategorySelected('')\n            const categoriesInput = document.getElementsByClassName('categoriesInput')\n            for( var i =0; i < categoriesInput.length; i++){\n                categoriesInput[i].checked = false\n            }\n            setCredit('')\n            setDebit('')\n            setSelected_Streamm('')\n            const streamBTNs = document.getElementsByClassName('streamBTNs')\n            for( var i =0; i < streamBTNs.length; i++){\n                streamBTNs[i].style.backgroundColor = 'white'\n                streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n            }\n            setDescription('')\n        }\n    }\n\n\n    // GET category ..................................................................................................\n    const getCategories_success = async(data) => {\n        setcategoryList(\n            data.results.map(function(item){\n              return(\n                <option value={JSON.stringify(item.id)}>{item.name}</option> \n              )\n            })\n        )\n\n    };\n\n    const getCategories_fail = async(failed) => {\n        console.log(failed)\n    };\n\n    const load_categories = () => {\n        get_categories(getCategories_success, getCategories_fail, access, setAccess)\n        \n    }\n    \n\n    // category created................................................................................................\n    const create_Category_Success = () => {\n        alert('category created')\n        load_categories() \n        setNewCategory('')\n    }\n\n    const create_Category = async(e)=>{\n        e.preventDefault()\n        await create_categories(newCategory, create_Category_Success, access, set_Access);\n    };\n\n    \n    // save transactions..............................................................................................\n    useEffect(\n        () => {\n            if(savedTransaction == ''){\n                setSelectColor(\"bolder\")\n            }else{\n                setSelectColor(\"normal\")\n            }\n        },[savedTransaction]\n    )\n\n    const saveTransaction_Success = async(data, page) => {\n        alert(\"transaction saved\")\n        load_savedTransactions()\n    };\n\n    const saveTransaction = (e) => {\n        e.preventDefault()\n        create_savedTransctions(description, selected_Streamm, credit, debit, categorySelected, saveTransaction_Success, access, set_Access) \n    }\n\n  return (\n    <div>\n      <Modal\n        isOpen={createFlowModalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        contentLabel=\"Add new Entry\"\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n        ariaHideApp={false}\n      >\n        <form id=\"createForm\" className='column' >\n            <div id='form_blur_Overlay'></div>\n            <div id='record_Header_Overlay' className='row'>\n                <h2>Add Record</h2> \n                <button onClick={closeModal}>X</button>\n            </div>\n            \n            <div id='descriptionOverlay' className=\"\">\n            <strong>Description</strong><br/>\n                <input className=\"record_form\" autoFocus type=\"text\" id=\"description\" placeholder=\"e.g. worker salary\" onChange={(e)=>{setDescription(e.target.value)}} value={description} /><br/>\n            </div>\n\n            <div id='accountOverlay'>\n            <strong>Account</strong><br/>\n                {stream}\n            </div><br/>\n              \n            <div id='AmountOverlay' className=\"inputTextOverlay\">\n            <strong>Amount</strong><br/>\n                <div className='row'>\n                    <div className='column'>\n                        Credit<NumberFormat \n                            thousandSeparator={true} \n                            prefix={'$'}\n                            className=\"record_form\" \n                            type=\"credit\"\n                            placeholder=\"0.00\" \n                            onChange={(e)=>{setCredit(e.target.value)}} \n                            value={credit}\n                        />\n                    </div>\n                    \n                    <div className='column'>\n                        Debit<NumberFormat \n                            thousandSeparator={true} \n                            prefix={'$'} \n                            className=\"record_form\" \n                            type=\"debit\" \n                            placeholder=\"0.00\" \n                            onChange={(e)=>{setDebit(e.target.value)}} \n                            value={debit}\n                        />\n                    </div>\n                </div>\n            </div>\n       \n            <div id='categoryOverlay' className='column'>\n                <label>\n                    <strong>Category</strong> <br/>\n                    <select value={categorySelected} onChange={(e)=>{setCategorySelected(e.target.value)}} style={{fontWeight:selectColor, fontSize:'0.7vw'}} >\n                        <option value={JSON.stringify('')}>Choose category</option>\n                            {categoryList }\n                        {/* <option value=\"grapefruit\">coco</option> */}\n                    </select>\n                </label>\n\n                <div id='addCategoryOverlay'>\n                    <strong>Add category</strong><br/>\n                    <input className=\"add_category\" type=\"text\" id=\"category\" onChange={(e)=>{setNewCategory(e.target.value)}} value={newCategory} />\n                    <button onClick={create_Category}>+</button>\n                </div>\n            </div>\n\n            <div id='savedTransactionOverlay' className='row'>\n                <label>\n                    <select value={savedTransaction} onChange={(e)=>{setSavedTransaction(e.target.value); applySavedTransaction(e)}} style={{fontWeight:selectColor, fontSize:'0.7vw'}} >\n                        <option value={JSON.stringify('')}>Choose from saved transactions</option>\n                            {savedTransctionList}\n                        {/* <option value=\"grapefruit\">coco</option> */}\n                    </select>\n                </label>\n                <div className='column'>\n                    <button onClick={saveTransaction}></button>\n                    Save transaction\n                </div>\n            </div>\n              \n            <div id=\"BTN_overlay\" >\n                <div>\n                    <button id=\"submit\"  value=\"Done\" onClick={closeModal}>cancel</button>\n                    <button id=\"submit\" type=\"submit\" value=\"Done\" onClick={create_Data}>Done</button>\n                </div>\n            </div>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default CreateFlow",[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/categories_api.js",["435"],[],"import {verifyTokens} from \"../../../auths/verifyTokens\"\nimport {backendURL} from \"../../../../backendURL\"\n\n\nexport const get_categories = async ( success, fail, access, set_access) => {\n  \n  const success_Status = async(status, access_token) => {\n    if (status  === 200){\n      // fetching cashflow data\n      const response = await fetch(\n        `${backendURL}/backend_Ledger/category/`,\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'Application/JSON',\n                'Authorization': `Bearer ${access_token}`,\n            }\n        }\n      );\n      const text = await response.text();\n      if (response.status === 401) {\n        // console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to view this page\")\n        window.location.assign(\"/login\");\n        return [];\n      }\n      if (response.status === 200) {\n        // console.log(\"success\", JSON.parse(text));\n        success(JSON.parse(text));\n      } else {\n        // console.log(\"failed\", text);\n        Object.entries(JSON.parse(text)).forEach(([key, value])=>{\n        fail(`${key}: ${value}`);\n      });\n      }\n    }\n  }\n\n  verifyTokens(access, set_access, success_Status)\n  \n  success_Status()\n};\n\nexport const create_categories = async (newCategory, success, access, set_access) => {\n  \n  const success_Status = async(status, access_token) => {\n    if (status  === 200){\n      // creating cashflow data\n      const response = await fetch(\n        `${backendURL}/backend_Ledger/category/`,\n        {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${access_token}`,\n          },\n          body: JSON.stringify({\n            \"name\": newCategory,\n          }),\n        }\n      );\n\n      const text = await response.text();\n      if (response.status === 401) {\n        // console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to delete this data\")\n        return [];\n      }\n      if (response.status === 201) {\n        // console.log(\"data created\", text);\n        success()\n      } else {\n        // console.log(\"failed to delete\", text);\n      }\n    }\n  }\n\n  verifyTokens(access, set_access, success_Status)\n  \n  success_Status()\n};\n\n// export const delete_categories = async (flowId, success, access, set_access) => {\n  \n//   const success_Status = async(status, access_token) => {\n//     if (status  === 200){\n//       // fetching cashflow data\n//       const response = await fetch(\n//         `${backendURL}/backend_Ledger/cashflow/${flowId}/delete/`,\n//         {\n//             method: 'DELETE',\n//             headers: {\n//                 'Content-Type': 'Application/JSON',\n//                 'Authorization': `Bearer ${access_token}`,\n//             }\n//         }\n//     );\n//   const text = await response.text();\n//   if (response.status === 401) {\n//     console.log(\"accesstoken not valid\");\n//     alert(\"you are not authorized to delete this data\")\n//     return [];\n//   }\n//   if (response.status === 204) {\n//     console.log(\"deleted\", text);\n//     success()\n//   } else {\n//     console.log(\"failed to delete\", text);\n//   }\n//     }\n//   }\n\n//   verifyTokens(access, set_access, success_Status)\n  \n//   success_Status()\n// };\n\n","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/savedTransaction_api.js",["436"],[],"import {verifyTokens} from \"../../../auths/verifyTokens\"\nimport {backendURL} from \"../../../../backendURL\"\n\n\nexport const get_savedTransctions = async (success, fail, access, set_access) => {\n  const success_Status = async(status, access_token) => {\n    if (status  === 200){\n      // fetching cashflow data\n      const response = await fetch(\n        `${backendURL}/backend_Ledger/savedtransaction/`,\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'Application/JSON',\n                'Authorization': `Bearer ${access_token}`,\n            }\n        }\n      );\n      const text = await response.text();\n      if (response.status === 401) {\n        // console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to view this page\")\n        window.location.assign(\"/login\");\n        return [];\n      }\n      if (response.status === 200) {\n        // console.log(\"success\", JSON.parse(text));\n        success(text);\n      } else {\n        // console.log(\"failed\", text);\n        Object.entries(JSON.parse(text)).forEach(([key, value])=>{\n        fail(`${key}: ${value}`);\n      });\n      }\n    }\n  }\n\n  verifyTokens(access, set_access, success_Status)\n  \n  success_Status()\n};\n\nexport const create_savedTransctions = async (description, selectd_Streamm, credit, debit, categorySelected, success, access, set_access) => {\n  console.log(credit)\n  const success_Status = async(status, access_token) => {\n    if (status  === 200){\n      // creating cashflow data\n      const response = await fetch(\n        `${backendURL}/backend_Ledger/savedtransaction/`,\n        {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${access_token}`,\n          },\n          body: JSON.stringify({\n            \"description\": description,\n            \"cashStream\": selectd_Streamm,\n            \"Credit\": credit.replace(/[$]|,/g,\"\"),\n            \"Debit\": debit.replace(/[$]|,/g,\"\"),\n            \"category\": categorySelected,\n          }),\n        }\n      );\n\n      const text = await response.text();\n      if (response.status === 401) {\n        // console.log(\"accesstoken not valid\");\n        alert(\"you are not authorized to delete this data\")\n        return [];\n      }\n      if (response.status === 201) {\n        // console.log(\"data created\", text);\n        success()\n      } else {\n        // console.log(\"failed to delete\", text);\n      }\n    }\n  }\n\n  verifyTokens(access, set_access, success_Status)\n  \n  success_Status()\n};\n\n\n// export const delete_savedTransctions = async (flowId, success, access, set_access) => {\n  \n//     const success_Status = async(status, access_token) => {\n//       if (status  === 200){\n//         // fetching cashflow data\n//         const response = await fetch(\n//           `${backendURL}/backend_Ledger/cashflow/${flowId}/delete/`,\n//           {\n//               method: 'DELETE',\n//               headers: {\n//                   'Content-Type': 'Application/JSON',\n//                   'Authorization': `Bearer ${access_token}`,\n//               }\n//           }\n//       );\n//     const text = await response.text();\n//     if (response.status === 401) {\n//       console.log(\"accesstoken not valid\");\n//       alert(\"you are not authorized to delete this data\")\n//       return [];\n//     }\n//     if (response.status === 204) {\n//       console.log(\"deleted\", text);\n//       success()\n//     } else {\n//       console.log(\"failed to delete\", text);\n//     }\n//       }\n//     }\n  \n//     verifyTokens(access, set_access, success_Status)\n    \n//     success_Status()\n//   };","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/leftSide.js",["437","438","439","440","441","442","443"],[],"import './leftSide.css'\nimport { NavLink } from \"react-router-dom\";\nimport { useState} from 'react';\n\nimport home from \"../../icons/home.png\"\nimport home_hover from \"../../icons/home_hover.png\"\nimport home_active from \"../../icons/home.png\"\n\nimport cashbook from \"../../icons/cashbook.png\"\nimport cashbook_hover from \"../../icons/cashbook.png\"\nimport cashbook_active from \"../../icons/cashbook_white.png\"\n\nimport eventory from \"../../icons/eventory.png\"\nimport eventory_hover from \"../../icons/eventory_hover.png\"\nimport eventory_active from \"../../icons/eventory.png\"\n\nimport keepsafe from \"../../icons/keepsafe.png\"\nimport keepsafe_hover from \"../../icons/keepsafe_hover.png\"\nimport keepsafe_active from \"../../icons/keepsafe.png\"\n\n// console.log()\nconst LeftSide = () => {\n    const [HomeNav_Active, setHomeNav_Active] = useState(false);\n    const [CashBookNav_Active, setCashBookNav_Active] = useState(false);\n    const [EnventoryNav_Active, setEnventoryNav_Active] = useState(false);\n    const [KeepSafeNav_Active, setKeepSafeNav_Active] = useState(false);\n\n    const [HomeIsHoverd, setHomeIsHoverd] = useState(false);\n    const [CashBookIsHoverd, setCashBookIsHoverd] = useState(false);\n    const [EnventoryIsHoverd, setEnventoryIsHoverd] = useState(false);\n    const [KeepSafeIsHoverd, setKeepSafeIsHoverd] = useState(false);\n\n    const [HomeRecIsHoverdIcons, setHomeRecIsHoverdIcons] = useState(false);\n    const [CashRecIsHoverdIcons, setCashRecIsHoverdIcons] = useState(false);\n    const [EnventoryRecIsHoverdIcons, setEnventoryRecIsHoverdIcons] = useState(false);\n    const [KeepSafeRecIsHoverdIcons, setKeepSafeRecIsHoverdIcons] = useState(false);\n\n    const [PColor_active, setPColor_active] = useState('var(--color5)');\n    const [PColor_hover, setPColor_hover] = useState('var(--color5)');\n    const [PColor_normal, setPColor_normal] = useState('var(--color2)');\n\n\n    // const handleMouseEnter = () => {\n    //     setIsHover(true);\n    // };\n\n    // const handleMouseLeave = () => {\n    //     setIsHover(false);\n    // };\n\n    return (\n        <span id='leftSpan' className='desktop'>\n            <div id='leftSpan_Overlay'>\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setHomeNav_Active(true) : setHomeNav_Active(false)\n                        // return {\n                        //     color: isActive ? \"var(--color1)\" : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" to=\"/home\"\n                    onMouseEnter={() =>  {setHomeIsHoverd(true); setHomeRecIsHoverdIcons(true)}} onMouseLeave={() =>  {setHomeIsHoverd(false); setHomeRecIsHoverdIcons(false)}}\n                >\n                    <div className='leftNav_selected home' style={HomeNav_Active?  {backgroundColor:\"var(--color5)\"} : HomeIsHoverd? {backgroundColor:\"var(--color1)\"} : {backgroundColor:\"var(--color1)\"}} >\n                        <div id='leftNav_home' style={HomeNav_Active? {backgroundImage:`url(${home})`} : HomeRecIsHoverdIcons? { backgroundImage:`url(${home_hover})` } : {backgroundImage:`url(${home})`}}></div>\n                        <p style={HomeNav_Active? {color:\"var(--color1)\"} : HomeIsHoverd? { color:\"var(--color5)\" } : {color:\"var(--color2)\"}}>Home</p>\n                    </div>\n                </NavLink>\n\n                \n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setCashBookNav_Active(true) : setCashBookNav_Active(false)\n                        // return {\n                        //     color: isActive ? \"var(--color1)\" : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" to=\"/ledger\"\n                    onMouseEnter={() =>  {setCashBookIsHoverd(true); setCashRecIsHoverdIcons(true)}} onMouseLeave={() =>  {setCashBookIsHoverd(false); setCashRecIsHoverdIcons(false)}}\n                >\n                    <div className='leftNav_selected cashbook' style={CashBookNav_Active?  {backgroundColor:\"var(--color5)\"} : CashBookIsHoverd? {backgroundColor:\"var(--color1)\"} : {backgroundColor:\"var(--color1)\"}} >\n                        <div id='leftNav_cashbook' style={CashBookNav_Active? {backgroundImage:`url(${cashbook_active})`} : CashRecIsHoverdIcons? { backgroundImage:`url(${cashbook_hover})` } : {backgroundImage:`url(${cashbook})`}}></div>\n                        <p style={CashBookNav_Active? {color:\"var(--color1)\"} : CashBookIsHoverd? { color:\"var(--color5)\" } : {color:\"var(--color2)\"}}>Cashbook</p>\n                    </div>\n                </NavLink>\n                \n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setEnventoryNav_Active(true) : setEnventoryNav_Active(false)\n                        return {\n                            color: isActive ? \"var(--color1)\" : \"var(--color5) !important\",\n                        };\n                    }} \n                    className=\"NavLink\" to=\"/enventory\"\n                    onMouseEnter={() =>  {setEnventoryIsHoverd(true); setEnventoryRecIsHoverdIcons(true)}} onMouseLeave={() =>  {setEnventoryIsHoverd(false); setEnventoryRecIsHoverdIcons(false)}}\n                >\n                    <div className='leftNav_selected enventory' style={EnventoryNav_Active?  {backgroundColor:\"var(--color5)\"} : EnventoryIsHoverd? {backgroundColor:\"var(--color1)\"} : {backgroundColor:\"var(--color1)\"}} >\n                        <div id='leftNav_enventory' style={EnventoryNav_Active? {backgroundImage:`url(${eventory_active})`} : EnventoryRecIsHoverdIcons? { backgroundImage:`url(${eventory_hover})` } : {backgroundImage:`url(${eventory})`}}></div>\n                        <p style={EnventoryNav_Active? {color:\"var(--color1)\"} : EnventoryIsHoverd? { color:\"var(--color5)\" } : {color:\"var(--color2)\"}}>Enventory</p>\n                    </div>\n                </NavLink>\n\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setKeepSafeNav_Active(true) : setKeepSafeNav_Active(false)\n                        return {\n                            color: isActive ? \"var(--color1)\" : \"var(--color5) !important\",\n                        };\n                    }} \n                    className=\"NavLink\" to=\"/keepSafe\"\n                    onMouseEnter={() =>  {setKeepSafeIsHoverd(true); setKeepSafeRecIsHoverdIcons(true)}} onMouseLeave={() =>  {setKeepSafeIsHoverd(false); setKeepSafeRecIsHoverdIcons(false)}}\n                >\n                    <div className='leftNav_selected keepsafe' style={KeepSafeNav_Active?  {backgroundColor:\"var(--color5)\"} : KeepSafeIsHoverd? {backgroundColor:\"var(--color1)\"} : {backgroundColor:\"var(--color1)\"}} >\n                        <div id='leftNav_keepsafe' style={KeepSafeNav_Active? {backgroundImage:`url(${keepsafe_active})`} : KeepSafeRecIsHoverdIcons? { backgroundImage:`url(${keepsafe_hover})` } : {backgroundImage:`url(${keepsafe})`}}></div>\n                        <p style={KeepSafeNav_Active? {color:\"var(--color1)\"} : KeepSafeIsHoverd? { color:\"var(--color5)\" } : {color:\"var(--color2)\"}}>Keep safe</p>\n                    </div>\n                </NavLink>\n            </div>\n        </span>\n    );\n}\n\nexport default LeftSide;\n\n","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/rightSide.js",["444"],[],"import './rightSide.css'\nimport { NavLink } from \"react-router-dom\";\n\n\nimport React from 'react';\n\nconst RightSide = () => {\n    return (\n        <span id='rightSpan' className='desktop'>\n            RightSide\n        </span>\n    );\n}\n\nexport default RightSide;\n\n","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/subNav.js",["445","446","447","448","449","450","451","452","453","454","455"],[],"import \"./subNav.css\"\nimport { NavLink } from \"react-router-dom\";\nimport useGlobalState from \"../../Store_&_State/GlobalState\"\nimport { useState, useEffect } from 'react';\nimport recurring_rec_dark_icon from \"../../icons/recurring_record_dark.png\"\nimport recurring_rec_hover_icon from \"../../icons/recurring_record_hover.png\"\n// import recurring_record_active from \"../../icons/recurring_record_active.png\"\n\nimport convert_to_pdf_dark_icon from \"../../icons/convert_to_pdf_dark_icon.png\"\nimport convert_to_pdf_hover_icon from \"../../icons/convert_to_pdf_hover_icon.png\"\n// import convert_to_pdf_active_icon from \"../../icons/convert_to_pdf_active_icon.png\"\n\nimport graph_dark_icon from \"../../icons/graph_dark_icon.png\"\nimport graph_hover_icon from \"../../icons/graph_hover_icon.png\"\nimport graph_active_icon from \"../../icons/graph_active_icon.png\"\n\nimport ratio_icon_dark_icon from \"../../icons/ratio_dark.png\"\nimport ratio_icon_hover_icon from \"../../icons/ratio_hover.png\"\nimport ratio_icon_active_icon from \"../../icons/ratio_active.png\"\n\nimport filter_icon_dark_icon from \"../../icons/filter_dark.png\"\nimport filter_icon_hover_icon from \"../../icons/filter_hover.png\"\nimport filter_icon_active_icon from \"../../icons/filter_active.png\"\n\nimport settings_dark_icon from \"../../icons/settings_dark_icon.png\"\nimport settings_hover_icon from \"../../icons/settings_hover_icon.png\"\nimport settings_active_icon from \"../../icons/settings_active_icon.png\"\n\nimport React from 'react';\n\nconst SubNav = (props) => {\n    const {search, setSearch} = useGlobalState('');\n\n    const [RecurringRecNav_Active, setRecurringRecNav_Active] = useState(false);\n    const [ConvertToPdfNav_Active, setConvertToPdfNav_Active] = useState(false);\n    const [GraphsNav_Active, setGraphsNav_Active] = useState(false);\n    const [RatiosNav_Active, setRatiosNav_Active] = useState(false);\n    const [FilterNav_Active, setFilterNav_Active] = useState(false);\n    const [settingsNav_Active, setsettingsNav_Active] = useState(false);\n\n    const [RecurringRecIsHoverd, setRecurringRecIsHoverd] = useState(false);\n    const [ConvertToPdfIsHoverd, setConvertToPdfIsHoverd] = useState(false);\n    const [GraphsIsHoverd, setGraphsIsHoverd] = useState(false);\n    const [RatiosIsHoverd, setRatiosIsHoverd] = useState(false);\n    const [FilterIsHoverd, setFilterIsHoverd] = useState(false);\n    const [settingsIsHoverd, setsettingsIsHoverd] = useState(false);\n\n    const [RecurringRecIsHoverdIcons, setRecurringRecIsHoverdIcons] = useState(false);\n    const [ConvertToPdfIsHoverdIcons, setConvertToPdfIsHoverdIcons] = useState(false);\n    const [GraphsIsHoverdIcons, setGraphsIsHoverdIcons] = useState(false);\n    const [RatiosIsHoverdIcons, setRatiosIsHoverdIcons] = useState(false);\n    const [FilterIsHoverdIcons, setFilterIsHoverdIcons] = useState(false);\n    const [settingsIsHoverdIcons, setsettingsIsHoverdIcons] = useState(false);\n\n\n    const [BoderBottom_active, setBoderBottom_active] = useState(\"6px solid var(--color5)\");\n    const [BoderBottom_hover, setBoderBottom_hover] = useState(\"0px solid var(--color1)\");\n    const [BoderBottom_normal, setBoderBottom_normal] = useState(\"6px solid var(--color1)\");\n\n    const [PColor_active, setPColor_active] = useState('var(--color5)');\n    const [PColor_hover, setPColor_hover] = useState('var(--color5)');\n    const [PColor_normal, setPColor_normal] = useState('var(--color)');\n\n\n    return (\n        <span id=\"subNav\" className=\"desktop\">\n            <div id=\"subNav_overlay\">\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setRecurringRecNav_Active(true) : setRecurringRecNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" \n                    to=\"/ledger/NotAvailableYet/RecurringRecord\"\n                    onMouseEnter={() =>  {setRecurringRecIsHoverd(true); setRecurringRecIsHoverdIcons(true)}} onMouseLeave={() =>  {setRecurringRecIsHoverd(false); setRecurringRecIsHoverdIcons(false)}}\n                >\n                    <div className='subNav_selected' style={RecurringRecNav_Active?  {borderBottom:BoderBottom_active} : RecurringRecIsHoverd? {borderBottom:BoderBottom_hover} : {borderBottom:BoderBottom_normal}} >\n                        <div id='subNav_recurring_record' className=\"subNav_icon_div\" style={RecurringRecNav_Active? {backgroundImage:`url(${recurring_rec_hover_icon})`} : RecurringRecIsHoverdIcons? { backgroundImage:`url(${recurring_rec_hover_icon})` } : {backgroundImage:`url(${recurring_rec_dark_icon})`}}></div>\n                        <p id=\"subNav_recurring_record_p\" style={RecurringRecNav_Active? {color:PColor_active} : RecurringRecIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>Recurring record</p>\n                    </div>\n                </NavLink>\n\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setConvertToPdfNav_Active(true) : setConvertToPdfNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" \n                    to=\"/ledger/NotAvailableYet/convert_to_pdf\"\n                    onMouseEnter={() =>  {setConvertToPdfIsHoverd(true); setConvertToPdfIsHoverdIcons(true)}} onMouseLeave={() =>  {setConvertToPdfIsHoverd(false); setConvertToPdfIsHoverdIcons(false)}}\n                >\n                    <div className='subNav_selected' style={ConvertToPdfNav_Active?  {borderBottom:BoderBottom_active} : ConvertToPdfIsHoverd? {borderBottom:BoderBottom_hover} : {borderBottom:BoderBottom_normal}} >\n                        <div id=\"subNav_convert_to_pdf\" className=\"subNav_icon_div\" style={ConvertToPdfNav_Active? {backgroundImage:`url(${convert_to_pdf_hover_icon})`} : ConvertToPdfIsHoverdIcons? { backgroundImage:`url(${convert_to_pdf_hover_icon})` } : {backgroundImage:`url(${convert_to_pdf_dark_icon})`}}></div>\n                        <p id=\"subNav_convert_to_pdf_p\" style={ConvertToPdfNav_Active? {color:PColor_active} : ConvertToPdfIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>Convert to PDF</p>\n                    </div>\n                </NavLink>\n\n\n                <div  id=\"search_overlay\"  style={{ visibility:`${props.visibility}`}}>\n                    <input type=\"text\" value={search} placeholder=\"Search\" onChange={(e)=>{setSearch(e.target.value)}}/>\n                    <div id=\"search_icon_overlay\">\n                        <div id=\"search_icon\"></div>\n                    </div>\n                </div>\n\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setGraphsNav_Active(true) : setGraphsNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" to=\"/ledger/NotAvailableYet/Graphs\"\n                    onMouseEnter={() =>  {setGraphsIsHoverd(true); setGraphsIsHoverdIcons(true)}} onMouseLeave={() =>  {setGraphsIsHoverd(false); setGraphsIsHoverdIcons(false)}}\n                >\n                    <div className='subNav_selected' style={GraphsNav_Active?  {borderBottom:BoderBottom_active} : GraphsIsHoverd? {borderBottom:BoderBottom_hover} : {borderBottom:BoderBottom_normal}} >\n                        <div div id=\"subNav_graphs\" className=\"subNav_icon_div\" style={GraphsNav_Active? {backgroundImage:`url(${graph_hover_icon})`} : GraphsIsHoverdIcons? { backgroundImage:`url(${graph_hover_icon})` } : {backgroundImage:`url(${graph_dark_icon})`}}></div>\n                        <p id=\"subNav_graphs_p\" style={GraphsNav_Active? {color:PColor_active} : GraphsIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>Graphs</p>\n                    </div>\n                </NavLink>\n\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setRatiosNav_Active(true) : setRatiosNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" \n                    to=\"/ledger/ratios\"\n                    onMouseEnter={() =>  {setRatiosIsHoverd(true); setRatiosIsHoverdIcons(true)}} onMouseLeave={() =>  {setRatiosIsHoverd(false); setRatiosIsHoverdIcons(false)}}\n                >\n                    <div className='subNav_selected' style={RatiosNav_Active?  {borderBottom:BoderBottom_active} : RatiosIsHoverd? {borderBottom:BoderBottom_hover} : {borderBottom:BoderBottom_normal}} >\n                        <div id=\"subNav_ratios\" className=\"subNav_icon_div\" style={RatiosNav_Active? {backgroundImage:`url(${ratio_icon_hover_icon})`} : RatiosIsHoverdIcons? { backgroundImage:`url(${ratio_icon_hover_icon})` } : {backgroundImage:`url(${ratio_icon_dark_icon})`}}></div>\n                        <p id=\"subNav_ratios_p\" style={RatiosNav_Active? {color:PColor_active} : RatiosIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>Ratios</p>\n                    </div>\n                </NavLink>\n\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setFilterNav_Active(true) : setFilterNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" \n                    to=\"/ledger/filtter\"\n                    onMouseEnter={() =>  {setFilterIsHoverd(true); setFilterIsHoverdIcons(true)}} onMouseLeave={() =>  {setFilterIsHoverd(false); setFilterIsHoverdIcons(false)}}\n                >\n                    <div className='subNav_selected' style={FilterNav_Active?  {borderBottom:BoderBottom_active} : FilterIsHoverd? {borderBottom:BoderBottom_hover} : {borderBottom:BoderBottom_normal}} >\n                        <div id=\"subNav_filtter\" className=\"subNav_icon_div\" style={FilterNav_Active? {backgroundImage:`url(${filter_icon_hover_icon})`} : FilterIsHoverdIcons? { backgroundImage:`url(${filter_icon_hover_icon})` } : {backgroundImage:`url(${filter_icon_dark_icon})`}}></div>\n                        <p id=\"subNav_filtter_p\" style={FilterNav_Active? {color:PColor_active} : FilterIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>Filtter</p>\n                    </div>\n                </NavLink>\n\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setsettingsNav_Active(true) : setsettingsNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" \n                    to=\"/ledger/NotAvailableYet/Settings\"\n                    onMouseEnter={() =>  {setsettingsIsHoverd(true); setsettingsIsHoverdIcons(true)}} onMouseLeave={() => {setsettingsIsHoverd(false); setsettingsIsHoverdIcons(false)} }\n                >\n                    <div className='subNav_selected' style={settingsNav_Active?  {borderBottom:BoderBottom_active} : settingsIsHoverd? {borderBottom:BoderBottom_hover} : {borderBottom:BoderBottom_normal}} >\n                        <div id=\"subNav_settings\" className=\"subNav_icon_div\" style={settingsNav_Active? {backgroundImage:`url(${settings_hover_icon})`} : settingsIsHoverdIcons? { backgroundImage:`url(${settings_hover_icon})` } : {backgroundImage:`url(${settings_dark_icon})`}}></div>\n                        <p id=\"subNav_settings_p\" style={settingsNav_Active? {color:PColor_active} : settingsIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>Settings</p>\n                    </div>\n                </NavLink>\n            </div>\n        </span>\n        \n    );\n}\n\nexport default SubNav;\n","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/filtter.js",["456","457","458","459","460","461","462","463","464","465","466","467","468"],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios.js",["469","470","471","472","473"],[],"import './ratios.css'\nimport { useState, useEffect } from 'react';\nimport LeftSide from '../../defualt_Layouts/leftSide';\nimport RightSide from '../../defualt_Layouts/rightSide';\nimport SubNav from '../../defualt_Layouts/subNav';\nimport { Link } from \"react-router-dom\";\nimport { get_ratioApi } from './api/ratios_api';\nimport useAccess from \"../../auths/accessToken\"\nimport useGlobalState from \"../../../Store_&_State/GlobalState\"\nimport NumberFormat from 'react-number-format';\nimport SubNav_mobile from '../../defualt_Layouts/subNav_mobile';\n\nconst Ratios = () => {\n    // const [dateFrom, setDateFrom] = useState(\"\");\n    // const [dateTo, setDateTo] = useState(\"\");\n    // const [period, setPeriod] = useState('');\n    const [selectFonthWieght, setSelectFonthWieght] = useState(\"normal\");\n    const [selectColor, setSelectColor] = useState(\"gray\");\n\n    const {access, setAccess} = useAccess('')\n    const {ratioDetailList, setRatioDetailList} = useGlobalState('')\n    const {totalExpenditure, setTotalExpenditure} = useGlobalState('')\n    const {totalExpensis, setTotalExpensis} = useGlobalState('')\n    const {profit, setProfit} = useGlobalState('')\n    const {profitMargin, setProfitMargin} = useGlobalState('')\n    const {markup, setMarkup} = useGlobalState('')\n    const {ratioPeriodInterval, setRatioPeriodInterval} = useGlobalState('')\n    const {ratioDateFrom, setRatioDateFrom} = useGlobalState('')\n    const {ratioDateTo, setRatioDateTo} = useGlobalState('')\n    const {ratioPeriod, setRatioPeriod} = useGlobalState('')\n\n    const set_Access = (Access_token) => {\n        setAccess(Access_token)\n    }\n\n    const changeDateFrom = (e) => {\n        setRatioDateFrom(e.target.value)\n    }\n    \n    const changeDateTo = (e) => {\n        setRatioDateTo(e.target.value)\n    }\n\n    const ratios_Success = async(data) => {\n        const result = data.results\n        console.log(result)\n\n        setRatioDetailList(result[0])\n        if(result[1].total_Revenue !== null){\n            setTotalExpenditure(result[1].total_Revenue)\n        }else{\n            setTotalExpenditure(0)\n        }\n\n        if(result[2].total_Expensis !== null){\n            setTotalExpensis(result[2].total_Expensis)\n        }else{\n            setTotalExpensis(0)\n        }\n\n        if(result[3].profit !== null){\n            setProfit(result[3].profit)\n        }else{\n            setProfit(0)\n        }\n\n        if(result[4].profit_Margin !== null){\n            setProfitMargin(result[4].profit_Margin)\n        }else{\n            setProfitMargin(0)\n        }\n\n        if(result[5].markup !== null){\n            setMarkup(result[5].markup)\n        }else{\n            setMarkup(0)\n        }\n    };\n\n    const ratios_fail = (text) => {\n        console.log(\"Error: \", text)\n    }\n    \n    const applyPeriod = (e) => {\n        setRatioDateFrom('')\n        setRatioDateTo('')\n    }\n\n    const getData = async()=>{\n        await get_ratioApi(ratios_Success, ratios_fail, ratioPeriodInterval, ratioDateFrom, ratioDateTo, ratioPeriod, access, set_Access,);\n    };\n\n    useEffect(()=>{\n        getData();\n        if(ratioPeriod == ''){\n            setSelectColor(\"gray\")\n            setSelectFonthWieght(\"bolder\")\n        }else{\n            setSelectColor(\"black\")\n            setSelectFonthWieght(\"normal\")\n        }\n    }, [ratioPeriodInterval, ratioDateFrom, ratioDateTo, ratioPeriod]);\n\n    return (\n        <section id='ledgerRation_section' className='column'>\n            <SubNav visibility=\"hidden\"/>\n            <div className='row overlay'>\n            <LeftSide/>\n                <div id='ratioOverlay'>\n                    <div id='ratioHomeform'>\n                        <div className='reverseDiv'>\n                            <div>\n                                <strong className='desktop'><p>From</p></strong>\n                                <p className='mobile'>From</p>\n                                <input type=\"date\" id=\"filterDateFrom\" name=\"filterDateFrom\" value ={ratioDateFrom} onChange={changeDateFrom}/>\n                                <strong className='desktop'><p>To</p></strong>\n                                <p className='mobile'>To</p>\n                                <input type=\"date\" id=\"filterDateTo\" name=\"filterDateTo\" value={ratioDateTo} onChange={changeDateTo}/>\n                                <select value={ratioPeriod} onChange={(e)=>{setRatioPeriod(e.target.value);  applyPeriod(e) }} style={{fontWeight:selectFonthWieght, color:selectColor}} >\n                                    <option value=''>ratioPeriod</option>\n                                    <option value='week'> 7 days ago</option> \n                                    <option value='month'> this Month</option> \n                                    <option value='year'> this Year</option> \n                                    {/* <option value={JSON.stringify('')}>ratioPeriod</option>\n                                    <option value={JSON.stringify('week')}> 7 days ago</option> \n                                    <option value={JSON.stringify('month')}> this Month</option> \n                                    <option value={JSON.stringify('year')}> this Year</option>  */}\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id='all_ratios_overlay'>\n                            <Link className='NavLink' to=\"/ledger/ratios/profit\">\n                                <div className='each_Ratio_BigOverlay' id='ratio_home_profit'>\n                                    <div>\n                                        <h3>\n                                            Profit \n                                            <span className='h3_normal'>\n                                                <NumberFormat\n                                                    className=\"ratio_number_values\"\n                                                    value={profit}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'$'}\n                                                />\n                                            </span>\n                                        </h3>\n\n                                        <h3>Profit Margin <span className=\"h3_percentage\">{profitMargin}<sup className='sub'>%</sup></span></h3>\n                                        <h3>Markup <span className=\"h3_percentage\">{markup}<sup className='sub'>%</sup></span></h3>\n                                    </div>\n\n                                    <div>\n                                        <p> Total Revenue:\n                                            <NumberFormat\n                                                className=\"ratio_number_values\"\n                                                value={totalExpenditure}\n                                                displayType={'text'}\n                                                thousandSeparator={true}\n                                                prefix={'$'}\n                                            />\n                                        </p>\n                                        <p>\n                                            Total Expensis:\n                                            <NumberFormat\n                                                className=\"ratio_number_values\"\n                                                value={totalExpensis}\n                                                displayType={'text'}\n                                                thousandSeparator={true}\n                                                prefix={'$'}\n                                            />\n                                        </p>\n                                    </div>\n                                </div>\n                            </Link>\n\n                            <Link className='NavLink' to=\"/ledger/NotAvailableYet/ratio\">\n                                <div className='each_Ratio_SmallOverlay' id='ratio_home_NetProfit'>\n                                    <h3 className='each_Ratio_SmallOverlay_titile' >Net Profit</h3>\n                                    <div className='each_Ratio_SmallOverlay_details'>\n                                        <div>\n                                            <h1 className='desktop'>98<sup className='sub'>%</sup></h1>\n                                            <h3 className='desktop'>$500,000</h3> \n                                            <p> Total Revenue: 900,000</p>\n                                            <p>Total Expensis: 200,000</p>\n                                        </div>\n                                        \n                                        <div className='mobile'>\n                                            <h1>47<sup className='sub'>%</sup></h1>\n                                            <h3 >$500,000</h3> \n                                        </div>\n                                    </div>\n                                </div>\n                            </Link>\n\n                            <Link className='NavLink' to=\"/ledger/NotAvailableYet/ratio\">\n                                <div className='each_Ratio_SmallOverlay' id='ratio_home_FreeCashFlow'>\n                                    <h3 className='each_Ratio_SmallOverlay_titile'>Free CashFlow</h3>\n                                    <div className='each_Ratio_SmallOverlay_details'>\n                                        <div>\n                                            <h1 className='desktop'>66<sup className='sub'>%</sup></h1>\n                                            <h3 className='desktop'>$500,000</h3> \n                                            <p> Total Revenue: 900,000</p>\n                                            <p>Total Expensis: 200,000</p>\n                                        </div>\n                                        \n                                        <div className='mobile'>\n                                            <h1>66<sup className='sub'>%</sup></h1>\n                                            <h3 >$500,000</h3> \n                                        </div>\n                                    </div>\n                                </div>\n                            </Link>\n\n                            <Link className='NavLink' to=\"/ledger/NotAvailableYet/ratio\">\n                                <div className='each_Ratio_SmallOverlay' id='ratio_home_OwnersEquity'>\n                                <h3 className='each_Ratio_SmallOverlay_titile'>Owner's Equity</h3>\n                                    <div className='each_Ratio_SmallOverlay_details'>\n                                        <div>\n                                            <h1 className='desktop'>34<sup className='sub'>%</sup></h1>\n                                            <h3 className='desktop'>$500,000</h3> \n                                            <p> Total Revenue: 900,000</p>\n                                            <p>Total Expensis: 200,000</p>\n                                        </div>\n                                        \n                                        <div className='mobile'>\n                                            <h1>66<sup className='sub'>%</sup></h1>\n                                            <h3 >$500,000</h3> \n                                        </div>\n                                    </div>\n                                </div>\n                            </Link>\n                    </div>\n                </div>\n            <RightSide/>\n            </div>\n            <SubNav_mobile/>\n        </section>\n    );\n}\n\nexport default Ratios;\n","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/profit.js",["474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496"],[],"import \"./profit.css\"\nimport { useState, useEffect } from 'react';\nimport LeftSide from '../../../defualt_Layouts/leftSide';\nimport RightSide from '../../../defualt_Layouts/rightSide';\nimport SubNav from '../../../defualt_Layouts/subNav';\nimport moneytree from '../../../../icons/moneytree.png'\nimport useGlobalState from \"../../../../Store_&_State/GlobalState\"\nimport Moment from 'react-moment';\nimport moment from \"moment\";\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\nimport SubNav_mobile from '../../../defualt_Layouts/subNav_mobile';\nimport Ratios from '../ratios'\n\nconst Profit = () => {\n    const [ratioDetail, setRatioDetail] = useState([]);\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n\n    const {ratioDetailList, setRatioDetailList} = useGlobalState('')\n    const {totalExpenditure, setTotalExpenditure} = useGlobalState('')\n    const {totalExpensis, setTotalExpensis} = useGlobalState('')\n    const {profit, setProfit} = useGlobalState('')\n    const {profitMargin, setProfitMargin} = useGlobalState('')\n    const {markup, setMarkup} = useGlobalState('')\n    // const {start_date, setStart_date} = useGlobalState('');\n    // const {end_date, setEnd_date} = useGlobalState('');\n    const {filterCategory, setFilterCategory} = useGlobalState('');\n\n    const {ratioPeriodInterval, setRatioPeriodInterval} = useGlobalState('')\n    const {ratioDateFrom, setRatioDateFrom} = useGlobalState('')\n    const {ratioDateTo, setRatioDateTo} = useGlobalState('')\n    // const {ratioPeriod, setRatioPeriod} = useGlobalState('')\n\n    const ratioTable_SideBar = ratioDetailList.length*6\n\n    const changeDateFrom = (e) => {\n      setRatioDateFrom(e.target.value)\n    }\n    \n    const changeDateTo = (e) => {\n        setRatioDateTo(e.target.value)\n    }\n\n    const leftClick = (e) => {\n      const elem = document.getElementsByClassName('eachRatio_slide')[1]\n      const elem_marginRight = window.getComputedStyle(elem).marginRight\n      const elem_width = elem.offsetWidth\n      const scroll_width = new Number(elem_marginRight.replace(/px/g,\"\"))+elem_width\n      document.getElementById('ratio_slide_overlay').scrollBy(-scroll_width, 0)\n    }\n    \n    const rightClick = (e) => {\n      const elem = document.getElementsByClassName('eachRatio_slide')[1]\n      const elem_marginRight = window.getComputedStyle(elem).marginRight\n      const elem_width = elem.offsetWidth\n      const scroll_width = new Number(elem_marginRight.replace(/px/g,\"\"))+elem_width\n      document.getElementById('ratio_slide_overlay').scrollBy(scroll_width, 0)\n    }\n\n\n    const onClick_ratioPeriodIntervalBTN = (e) => {\n      e.preventDefault(); \n      // console.log(e.target.id)\n      setRatioPeriodInterval(e.target.id)\n      const ratioPeriodIntervalBTN = document.getElementsByClassName('ratioPeriodIntervalBTN')\n\n      for( var i =0; i < ratioPeriodIntervalBTN.length; i++){\n        ratioPeriodIntervalBTN[i].style.backgroundColor = 'white'\n        ratioPeriodIntervalBTN[i].style.color = 'rgb(142, 143, 196)'\n      }\n\n      e.target.style.backgroundColor = 'rgb(142, 143, 196)'\n      e.target.style.color = 'white'\n    }\n\n    // ...........................................................................................................................................\n    Ratios()\n    \n    useEffect(() => {\n      // setRatioDetail(\n        let newList = []\n\n        ratioDetailList.map(\n          function(DetailItem, id, arr){\n            // const date = moment(new Date(flowItem.created_at)).format('YYYY-MM-DD').replace(/-|:|[ \\t]/g,\"\");\n            // const time = moment(new Date(flowItem.created_at)).format('HH:mm:ss').replace(/-|:|[ \\t]/g,\"\");\n            const sortByDateTime = DetailItem.created_at__year+DetailItem.created_at__month+DetailItem.created_at__day\n            console.log(sortByDateTime)\n            if(ratioPeriodInterval==='daily'){\n              return(\n                newList.push(\n                  <div key={sortByDateTime} id=\"rato_table_rows\">\n                    <div id=\"rato_table_rows_date\"><strong>{moment(new Date(DetailItem.created_at__date)).format('YYYY-MM-DD')}</strong></div>\n                    <div className=\"rato_table_rows\">{DetailItem.credit_sum}</div>\n                    <div className=\"rato_table_rows\">{DetailItem.debit_sum}</div>\n                    <div className=\"rato_table_rows\">{DetailItem.profit}</div>\n                    <div className=\"rato_table_rows_pecentage\">{DetailItem.profit_Margin}%</div>\n                    <div className=\"rato_table_rows_pecentage\">{DetailItem.markup}%</div>\n                  </div>\n                )\n              )\n            }else if(ratioPeriodInterval==='weekly'){\n              return(\n                newList.push(\n                  <div key={sortByDateTime} id=\"rato_table_rows\">\n                    <div id=\"rato_table_rows_date\"><strong>{'week-'+DetailItem.created_at__week+`(${DetailItem.created_at__year})`}</strong></div>\n                    <div className=\"rato_table_rows\">{DetailItem.credit_sum}</div>\n                    <div className=\"rato_table_rows\">{DetailItem.debit_sum}</div>\n                    <div className=\"rato_table_rows\">{DetailItem.profit}</div>\n                    <div className=\"rato_table_rows_pecentage\">{DetailItem.profit_Margin}%</div>\n                    <div className=\"rato_table_rows_pecentage\">{DetailItem.markup}%</div>\n                  </div>\n                )\n              )\n            }else if(ratioPeriodInterval==='monthly'){\n              console.log(`${DetailItem.created_at__year}`+`${DetailItem.created_at__month}`)\n              return(\n                newList.push(\n                  <div key={sortByDateTime} id=\"rato_table_rows\">\n                    <div id=\"rato_table_rows_date\">\n                      <strong>\n                        {/* {moment(new Date(`${DetailItem.created_at__year}`+`${DetailItem.created_at__month}`)).format('MMMM-YY')} */}\n                        <Moment format=\"MMMM/YYYY\">\n                          {`${DetailItem.created_at__year}-${DetailItem.created_at__month}`}\n                        </Moment>\n                      </strong></div>\n                    <div className=\"rato_table_rows\">{DetailItem.credit_sum}</div>\n                    <div className=\"rato_table_rows\">{DetailItem.debit_sum}</div>\n                    <div className=\"rato_table_rows\">{DetailItem.profit}</div>\n                    <div className=\"rato_table_rows_pecentage\">{DetailItem.profit_Margin}%</div>\n                    <div className=\"rato_table_rows_pecentage\">{DetailItem.markup}%</div>\n                  </div>\n                )\n              )\n            }else if(ratioPeriodInterval==='yearly'){\n              return(\n                newList.push(\n                  <div key={sortByDateTime} id=\"rato_table_rows\">\n                    <div id=\"rato_table_rows_date\"><strong>{DetailItem.created_at__year}</strong></div>\n                    <div className=\"rato_table_rows\">{DetailItem.credit_sum}</div>\n                    <div className=\"rato_table_rows\">{DetailItem.debit_sum}</div>\n                    <div className=\"rato_table_rows\">{DetailItem.profit}</div>\n                    <div className=\"rato_table_rows_pecentage\">{DetailItem.profit_Margin}%</div>\n                    <div className=\"rato_table_rows_pecentage\">{DetailItem.markup}%</div>\n                  </div>\n                )\n              )\n            }\n          }\n        )\n\n        setRatioDetail(newList)\n      // )\n    }, [ratioDetailList]);\n\n    \n    // const sortedRatioDetail = ratioDetail.sort(function(a, b){return b.props.children.key - a.props.children.key})\n    console.log(ratioDetail)\n    return (\n      <section className='column' id=\"left_right_section\">\n        <SubNav visibility=\"hidden\"/>\n        <div className='row overlay' >\n          <LeftSide/>\n          <div id=\"profit_scroll_overlay\">\n            <div id='profitOverlaay'>\n              <div id='ratio_Profit_flag' style={{display:'flex'}}>\n                <div>\n                    <strong><h3>Profit</h3></strong>\n                    <strong><h4>March 2022</h4></strong>\n                </div> \n                \n                <img id=\"profitImg\" src={moneytree} alt=\"\" />\n\n                <div>\n                    <div>\n                        <h1>58<sup className='sub'>%</sup></h1>\n                        <h3>$500,000</h3>\n                    </div>\n                    <div>\n                        <span> Total Revenue:$900,000</span>\n                        <span>Total Expensis:$200,000</span>\n                    </div>\n                </div>\n              </div>\n\n              <div id=\"ratio_Profit_text\">\n                  <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Cum quos distinctio earum unde ratione debitis velit quaerat! magni cupiditate praesenIure non quia incidunt quasi quis modi illum, nam magni cupiditate praesentium fuga veniam archit incidunt non blanditiis assumenda ut, tempore maxime eos?</p><br/><br/>\n                  <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Porro quae rerum magnam saepe. Maiores quisquam ducimus eligendi exercitationem um illo!</p>\n              </div>\n              \n              <ScrollSync>\n              <div id=\"ratio_table_background\">\n                <ScrollSyncPane>\n                  <div id=\"ratio_table\">\n                    <div className=\"desktop\" id=\"rato_table_header\">\n                      <div id=\"headers_date\"><strong>Date</strong></div>\n                      <div className=\"headers\"><strong>Revenue</strong></div>\n                      <div className=\"headers\"><strong>Expensis</strong></div>\n                      <div className=\"headers\"><strong>Profit</strong></div>\n                      <div className=\"headers_pecentage\"><strong>Profit margin</strong></div>\n                      <div className=\"headers_pecentage\"><strong>Markup</strong></div>\n                    </div>\n\n                    <div className=\"mobile\" id=\"rato_table_header\">\n                      <div id=\"rato_table_rows_date\"><strong>Date</strong></div>\n                      <div className=\"rato_table_rows\"><strong>Revenue</strong></div>\n                      <div className=\"rato_table_rows\"><strong>Expensis</strong></div>\n                      <div className=\"rato_table_rows\"><strong>Profit</strong></div>\n                      <div className=\"rato_table_rows_pecentage\"><strong>Profit margin</strong></div>\n                      <div className=\"rato_table_rows_pecentage\"><strong>Markup</strong></div>\n                    </div>\n\n                    <div id=\"\">\n                      {/* {ratioDetail.sort(function(a, b){return a.props.children.key - b.props.children.key})} */}\n                      {/* {sortedRatioDetail} */}\n                      {ratioDetail}\n                    </div>\n                  </div>\n                </ScrollSyncPane>\n\n                <ScrollSyncPane>\n                  <div id=\"ratioTable_sideBar_overlay\"> \n                    <div id=\"ratioTable_sideBar\" style={{height:`${ratioTable_SideBar}vh`}}> </div>\n                  </div>\n                </ScrollSyncPane>\n              </div>\n              </ScrollSync>\n\n              <div id=\"profitSetPeriod_Overlay\">\n                <p id=\"profitSetPeriod_p\">Set Period</p>\n                <div id=\"profitSetPeriod_formOverlay\">\n                  <div id=\"profitSetPeriodBTNS_Overlay\">\n                    <div>\n                      <button id=\"daily\" className=\"ratioPeriodIntervalBTN\" required onClick={onClick_ratioPeriodIntervalBTN}>Show Daily</button>\n                      <button id=\"weekly\" className=\"ratioPeriodIntervalBTN\" required onClick={onClick_ratioPeriodIntervalBTN}>Show Weekly</button>\n                    </div>\n                    \n                    <div>\n                      <button id=\"monthly\" className=\"ratioPeriodIntervalBTN\" required onClick={onClick_ratioPeriodIntervalBTN}>Show Monthly</button>\n                      <button id=\"yearly\" className=\"ratioPeriodIntervalBTN\" required onClick={onClick_ratioPeriodIntervalBTN}>Show Yearly</button>\n                    </div>\n                  </div>\n\n                  <div id=\"profitSetPeriodInput_Overlay\">\n                    <div>\n                      <strong className='desktop'><p>From</p></strong>\n                      <p className='mobile'>From</p>\n                      <input type=\"date\" id=\"filterDateFrom\" name=\"filterDateFrom\" value ={ratioDateFrom} onChange={changeDateFrom}/>\n                    </div>\n                    \n                    <div>\n                      <strong className='desktop'><p>To</p></strong>\n                      <p className='mobile'>To</p>\n                      <input type=\"date\" id=\"filterDateTo\" name=\"filterDateTo\" value={ratioDateTo} onChange={changeDateTo}/>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div id=\"ratio_slide_BigOverlay\">\n                <button id=\"leftArrow\" onClick={leftClick}></button>\n\n                <div id=\"ratio_slide_overlay\">\n                  <div id=\"ratio_slide_smallOverlay\">  \n                    <div className=\"eachRatio_slide eachRatio_slide_selected\" id=\"profits\">\n                      <div className=\"eachRatio_slide_icon\"></div>\n                      <p>profits</p>\n                    </div>\n\n                    <div className=\"eachRatio_slide\" id=\"netProfit\" >\n                      <div className=\"eachRatio_slide_icon\"></div>\n                      <p>Net Profit</p>\n                    </div>\n\n                    <div className=\"eachRatio_slide\" id=\"freeCashFlow\">\n                      <div className=\"eachRatio_slide_icon\"></div>\n                      <p>Free Cash Flow</p>\n                    </div>\n\n                    <div className=\"eachRatio_slide\" id=\"ownersEquity\">\n                      <div className=\"eachRatio_slide_icon\"></div>\n                      <p>Owner's Equity</p>\n                    </div>\n\n                    {/* delete from here ..........................................................*/}\n                    <div className=\"eachRatio_slide\" id=\"netProfit\" >\n                      <div className=\"eachRatio_slide_icon\"></div>\n                      <p>Net Profit</p>\n                    </div>\n\n                    <div className=\"eachRatio_slide\" id=\"freeCashFlow\">\n                      <div className=\"eachRatio_slide_icon\"></div>\n                      <p>Free Cash Flow</p>\n                    </div>\n\n                    <div className=\"eachRatio_slide\" id=\"ownersEquity\">\n                      <div className=\"eachRatio_slide_icon\"></div>\n                      <p>Owner's Equity</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <button id=\"rightArrow\" onClick={rightClick}></button>\n              </div>\n            </div>\n          </div>\n          <RightSide/>\n        </div>\n        <SubNav_mobile/>\n      </section>\n    );\n}\n\nexport default Profit;\n","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/profitMargin.js",["497","498"],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/markup.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/netProfit.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/freeCashFlow.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/ratios/ownersEquity.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/api/ratios_api.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/EditFlow.js",["499","500","501","502","503","504","505","506"],[],"import { useState, useEffect } from 'react';\nimport React from 'react'\nimport Modal from 'react-modal';\nimport './createFlow.css'\nimport useGlobalState from \"../../../Store_&_State/GlobalState\"\nimport useAccess from \"../../auths/accessToken\"\nimport {edit_cashFlow, get_edit_cashFlow} from './api/cashFow_CRUD'\nimport {get_categories, create_categories} from \"./api/categories_api\"\nimport {get_savedTransctions, create_savedTransctions} from './api/savedTransaction_api'\nimport NumberFormat from 'react-number-format';\n\nfunction EditFlow(prop) {\n    const [description, setDescription] = useState(\"\");\n    const [selected_Streamm, setSelected_Streamm] = useState(\"\");\n    const [credit, setCredit] = useState('');\n    const [debit, setDebit] = useState('');\n    const [categoryList, setcategoryList] = useState(\"\");\n    const [categorySelected, setCategorySelected] = useState(\"\");\n    const [newCategory, setNewCategory] = useState(\"\");\n    const [selected_Category, setSelected_Category] = useState(\"\");\n    const [savedTransaction, setSavedTransaction] = useState('');\n    const [selectColor, setSelectColor] = useState(\"gray\");\n    const [stream, setStream] = useState([]);\n    const [savedTransctionList, setSavedTransctionList] = useState([]);\n    \n    const {access, setAccess} = useAccess('')\n    const {editFlowIsOpen, setEditFlowIsOpen} = useGlobalState([]);\n    const {streamList, setStreamList} = useGlobalState([]);\n    const {reRender, setReRender} = useGlobalState([0]);\n    const {flowId, setFlowId} = useGlobalState([]);\n\n    \n    \n    const set_Access = (Access_token) => {\n        setAccess(Access_token)\n    }\n\n\n    // set stream data............................................................................................\n    useEffect(() => {\n        setStream(\n          streamList.map(function(item){\n            return(\n                <button className='streamBTNs' id={'stream'+item.id} required onClick={(e)=>{ \n                    e.preventDefault(); \n                    setSelected_Streamm(item.id);\n                    const streamBTNs = document.getElementsByClassName('streamBTNs')\n\n                    for( var i =0; i < streamBTNs.length; i++){\n                        streamBTNs[i].style.backgroundColor = 'white'\n                        streamBTNs[i].style.color = 'var(--color5)'\n                    }\n\n                    e.target.style.backgroundColor = 'var(--color5)'\n                    e.target.style.color = 'white'\n                }}>\n                    {item.name}\n                </button>\n            )\n          })\n        );\n    \n    }, [streamList]);\n\n\n    // modal management......................................................................................................\n\n    function afterOpenModal() {\n        load_categories()\n        load_savedTransactions()\n        load_edit_data()\n    }\n\n    function closeModal(e) {\n        e.preventDefault();\n        setEditFlowIsOpen(false);\n        prop.blur(0)\n    }\n\n\n    // reacord edit.................................................................................................\n    const record_edit_Success = async() => {\n        setEditFlowIsOpen(false);\n        prop.blur(0)\n        setReRender(reRender+1)\n        alert(\"record edited\")\n        setDescription('')\n        setCredit('')\n        setDebit('')\n    };\n\n    const edit_Data = async(e)=>{\n        // alert('hj')\n        e.preventDefault()\n        await edit_cashFlow(flowId, description, selected_Streamm, credit, debit, categorySelected, record_edit_Success, access, set_Access);\n    };\n\n\n    // get saved transactions........................................................................................\n    const getSavedTransction_success = (text) => {\n        const data = JSON.parse(text)\n        setSavedTransctionList(\n            data.results.map(function(item){\n              return(\n                <option value={JSON.stringify(item)}>{item.description}</option> \n              )\n            })\n        )\n    }\n\n    const getSavedTransction_fail = () => {\n        \n    }\n    \n    const load_savedTransactions = () => {\n        get_savedTransctions(getSavedTransction_success, getSavedTransction_fail, access, setAccess)\n        \n    }\n\n    //apply saved transaaction \n    const applySavedTransaction = (e) => {\n        const selected = JSON.parse(e.target.value)\n        if(selected !== \"\"){\n            setCategorySelected(selected.category)\n            setCredit(selected.Credit)\n            setDebit(selected.Debit)\n            setSelected_Streamm(selected.cashStream)\n            const streamBTNs = document.getElementsByClassName('streamBTNs')\n            for( var i =0; i < streamBTNs.length; i++){\n                streamBTNs[i].style.backgroundColor = 'white'\n                streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n            }\n            document.getElementById('stream'+selected.cashStream).style.backgroundColor = 'rgb(142, 143, 196)'\n            document.getElementById('stream'+selected.cashStream).style.color = 'white'\n            setDescription(selected.description)\n        }else{\n            setCategorySelected('')\n            const categoriesInput = document.getElementsByClassName('categoriesInput')\n            for( var i =0; i < categoriesInput.length; i++){\n                categoriesInput[i].checked = false\n            }\n            setCredit('')\n            setDebit('')\n            setSelected_Streamm('')\n            const streamBTNs = document.getElementsByClassName('streamBTNs')\n            for( var i =0; i < streamBTNs.length; i++){\n                streamBTNs[i].style.backgroundColor = 'white'\n                streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n            }\n            setDescription('')\n        }\n    }\n\n\n    // GET category ..................................................................................................\n    const getCategories_success = async(data) => {\n        setcategoryList(\n            data.results.map(function(item){\n              return(\n                <option value={JSON.stringify(item.id)}>{item.name}</option> \n              )\n            })\n        )\n\n    };\n\n    const getCategories_fail = async(failed) => {\n        console.log(failed)\n    };\n\n    const load_categories = () => {\n        get_categories(getCategories_success, getCategories_fail, access, setAccess)\n        \n    }\n    \n\n    // category created................................................................................................\n    const create_Category_Success = () => {\n        alert('category created')\n        load_categories() \n        setNewCategory('')\n    }\n\n    const create_Category = async(e)=>{\n        e.preventDefault()\n        await create_categories(newCategory, create_Category_Success, access, set_Access);\n    };\n\n    \n    // save transactions..............................................................................................\n    useEffect(\n        () => {\n            if(savedTransaction == ''){\n                setSelectColor(\"bolder\")\n            }else{\n                setSelectColor(\"normal\")\n            }\n        },[savedTransaction]\n    )\n\n    const saveTransaction_Success = async(data, page) => {\n        alert(\"transaction saved\")\n        load_savedTransactions()\n    };\n\n    const saveTransaction = (e) => {\n        e.preventDefault()\n        create_savedTransctions(description, selected_Streamm, credit, debit, categorySelected, saveTransaction_Success, access, set_Access) \n    }\n\n    // get get Edit data........................................................................................\n    const getEdit_data_success = (text) => {\n        const values = JSON.parse(text)\n        setCategorySelected(values.category)\n        setCredit(values.Credit)\n        setDebit(values.Debit)\n        setSelected_Streamm(values.cashStream)\n        const streamBTNs = document.getElementsByClassName('streamBTNs')\n        for( var i =0; i < streamBTNs.length; i++){\n            streamBTNs[i].style.backgroundColor = 'white'\n            streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n        }\n        document.getElementById('stream'+values.cashStream).style.backgroundColor = 'rgb(142, 143, 196)'\n        document.getElementById('stream'+values.cashStream).style.color = 'white'\n        setDescription(values.description)\n    }\n\n    const getEdit_data_fail = () => {\n        \n    }\n    \n    const load_edit_data = () => {\n        get_edit_cashFlow(flowId, getEdit_data_success, getSavedTransction_fail, access, setAccess)\n    }\n\n  return (\n    <div>\n      <Modal\n        isOpen={editFlowIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        contentLabel=\"Add new Entry\"\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n        ariaHideApp={false}\n      >\n        <form id=\"loginForm\" className='column' >\n            <div id='form_blur_Overlay'></div>\n            <div id='record_Header_Overlay' className='row'>\n                <h2>Edit Record</h2> \n                <button onClick={closeModal}>X</button>\n            </div>\n            \n            <div id='descriptionOverlay' className=\"\">\n            <strong>Description</strong><br/>\n                <input className=\"record_form\" autoFocus type=\"text\" id=\"description\" placeholder=\"e.g. worker salary\" onChange={(e)=>{setDescription(e.target.value)}} value={description} /><br/>\n            </div>\n\n            <div id='accountOverlay'>\n            <strong>Account</strong><br/>\n                {stream}\n            </div><br/>\n              \n            <div id='AmountOverlay' className=\"inputTextOverlay\">\n            <strong>Amount</strong><br/>\n                <div className='row'>\n                    <div>\n                        Credit<NumberFormat \n                            thousandSeparator={true} \n                            prefix={'$'}\n                            className=\"record_form\" \n                            type=\"credit\"\n                            placeholder=\"0.00\" \n                            onChange={(e)=>{setCredit(e.target.value)}} \n                            value={credit}\n                        />\n                    </div>\n                    \n                    <div>\n                        Debit<NumberFormat \n                            thousandSeparator={true} \n                            prefix={'$'} \n                            className=\"record_form\" \n                            type=\"debit\" \n                            placeholder=\"0.00\" \n                            onChange={(e)=>{setDebit(e.target.value)}} \n                            value={debit}\n                        />\n                    </div>\n                </div>\n            </div>\n       \n            <div id='categoryOverlay' className='column'>\n                <label>\n                    <strong>Category</strong> <br/>\n                    <select value={categorySelected} onChange={(e)=>{setCategorySelected(e.target.value)}} style={{fontWeight:selectColor, fontSize:'0.7vw'}} >\n                        <option value={JSON.stringify('')}>Choose category</option>\n                            {categoryList }\n                        {/* <option value=\"grapefruit\">coco</option> */}\n                    </select>\n                </label>\n\n                <div id='addCategoryOverlay'>\n                    <strong>Add category</strong><br/>\n                    <input className=\"add_category\" type=\"text\" id=\"category\" onChange={(e)=>{setNewCategory(e.target.value)}} value={newCategory} />\n                    <button onClick={create_Category}>+</button>\n                </div>\n            </div>\n\n            <div id='savedTransactionOverlay' className='row'>\n                <label>\n                    <select value={savedTransaction} onChange={(e)=>{setSavedTransaction(e.target.value); applySavedTransaction(e)}} style={{fontWeight:selectColor, fontSize:'0.7vw'}} >\n                        <option value={JSON.stringify('')}>Choose from saved transactions</option>\n                            {savedTransctionList}\n                        {/* <option value=\"grapefruit\">coco</option> */}\n                    </select>\n                </label>\n                <div className='column'>\n                    <button onClick={saveTransaction}></button>\n                    Save transaction\n                </div>\n            </div>\n              \n            <div id=\"BTN_overlay\" >\n                <div>\n                    <button id=\"submit\"  value=\"Done\" onClick={closeModal}>cancel</button>\n                    <button id=\"submit\" type=\"submit\" value=\"Done\" onClick={edit_Data}>Done</button>\n                </div>\n            </div>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default EditFlow","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/ServiceNotAvailable.js",["507"],[],"import LeftSide from '../defualt_Layouts/leftSide';\nimport RightSide from '../defualt_Layouts/rightSide';\nimport SubNav from '../defualt_Layouts/subNav';\n// import \"./ServiceNotAvailable.css\"\nimport SubNav_mobile from '../defualt_Layouts/subNav_mobile';\n\nimport './SserviceNotAvailable.css'\n\nfunction ServiceNotAvailable() {\n    \n\n  return (\n    <section className='column'>\n        <SubNav visibility=\"hidden\"/>\n        <div className='row overlay'>\n        <LeftSide/>\n            <span id='settingsOverlay'>\n              <div id='oops_Overlay'>\n                <div id=\"oopsIcon\"></div>\n                <p>Oops! There is nothing here yet</p>\n                <p>We will notify you as soon as this feature is available</p>\n              </div>\n            </span>\n        <RightSide/>\n        </div>\n        <SubNav_mobile/>\n    </section>\n  )\n}\n\nexport default ServiceNotAvailable","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/enventory/Enventory.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/keepSafe/KeepSafe.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/home/Home.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/landingPage/landingPage.js",[],[],"/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/slices/navSliceMobile.js",["508"],[],"import { createSlice } from '@reduxjs/toolkit'\nimport { NavLink } from \"react-router-dom\";\nimport \"./navSliceMobile.css\"\nconst initialState = {\n  value: '',\n}\n\nexport const navSliceMobile = createSlice({\n  name: 'navBarMobile',\n  initialState,\n  reducers: {\n    ledger_mobileNav: (state) => {\n        state.value =<> \n            <li><div className='mobile_navs' id='apps'></div></li>\n            <li><div className='mobile_navs' id='search'></div></li>\n            <li><div className='mobile_navs' id='notifications'></div></li>\n            <li><div className='mobile_navs' id='profile'></div></li>\n            <li><div className='mobile_navs' id='options'></div></li>\n        </>\n    },\n\n    ledger_subPages_mobileNav: (state) => {\n        state.value =<> \n            <li><div className='mobile_navs' id='apps'></div></li>\n            <li><div className='mobile_navs' id='notifications'></div></li>\n            <li><div className='mobile_navs' id='profile'></div></li>\n            <li><div className='mobile_navs' id='options'></div></li>\n        </>\n    },\n\n    clear_mobileNav: (state) => {\n        state.value =<></>\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { ledger_mobileNav, ledger_subPages_mobileNav, clear_mobileNav} = navSliceMobile.actions\n\nexport default navSliceMobile.reducer","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/defualt_Layouts/subNav_mobile.js",["509","510","511","512","513","514","515","516","517"],[],"import \"./subNav.css\"\nimport { NavLink } from \"react-router-dom\";\nimport useGlobalState from \"../../Store_&_State/GlobalState\"\nimport { useState, useEffect } from 'react';\n\n\nimport graph_white_icon from \"../../icons/mobile_icon/graph_white.png\"\n\nimport add_white_icon from \"../../icons/mobile_icon/add_white.png\"\n\nimport cashbook_white_icon from \"../../icons/mobile_icon/cashbook_white.png\"\n\nimport ratio_white_icon from \"../../icons/mobile_icon/ratio_white.png\"\n\nimport filter_white_icon from \"../../icons/mobile_icon/filter_white.png\"\n\n\nimport React from 'react';\n\nconst SubNav_mobile = () => {\n    const {search, setSearch} = useGlobalState('');\n\n    const [AddNav_Active, setAddRecNav_Active] = useState(false);\n    const [CashbookNav_Active, setCashbookNav_Active] = useState(false);\n    const [GraphsNav_Active, setGraphsNav_Active] = useState(false);\n    const [RatiosNav_Active, setRatiosNav_Active] = useState(false);\n    const [FilterNav_Active, setFilterNav_Active] = useState(false);\n    // const [settingsNav_Active, setsettingsNav_Active] = useState(false);\n\n    const [AddIsHoverd, setAddIsHoverd] = useState(false);\n    const [CashbookIsHoverd, setCashbookIsHoverd] = useState(false);\n    const [GraphsIsHoverd, setGraphsIsHoverd] = useState(false);\n    const [RatiosIsHoverd, setRatiosIsHoverd] = useState(false);\n    const [FilterIsHoverd, setFilterIsHoverd] = useState(false);\n    // const [settingsIsHoverd, setsettingsIsHoverd] = useState(false);\n\n    const [AddIsHoverdIcons, setAddIsHoverdIcons] = useState(false);\n    const [CashbookIsHoverdIcons, setCashbookIsHoverdIcons] = useState(false);\n    const [GraphsIsHoverdIcons, setGraphsIsHoverdIcons] = useState(false);\n    const [RatiosIsHoverdIcons, setRatiosIsHoverdIcons] = useState(false);\n    const [FilterIsHoverdIcons, setFilterIsHoverdIcons] = useState(false);\n    // const [settingsIsHoverdIcons, setsettingsIsHoverdIcons] = useState(false);\n\n    const [Boder_active, setBoder_active] = useState(\"2px solid var(--color1)\");\n    const [Boder_hover, setBoder_hover] = useState(\"2px solid var(--color1)\");\n    const [Boder_normal, setBoder_normal] = useState(\"2px solid var(--color4)\");\n\n    const [PColor_active, setPColor_active] = useState('var(--color1)');\n    const [PColor_hover, setPColor_hover] = useState('var(--color1)');\n    const [PColor_normal, setPColor_normal] = useState('var(--color1)');\n\n\n    return (\n        <>\n            <div id=\"mobileSubNav\" className=\"mobile\">\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setGraphsNav_Active(true) : setGraphsNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" to=\"/ledger/NotAvailableYet/Graphs\"\n                    onMouseEnter={() =>  {setGraphsIsHoverd(true); setGraphsIsHoverdIcons(true)}} onMouseLeave={() =>  {setGraphsIsHoverd(false); setGraphsIsHoverdIcons(false)}}\n                >\n                    <div className='subNav_selected' style={GraphsNav_Active?  {border:Boder_active} : GraphsIsHoverd? {border:Boder_hover} : {border:Boder_normal}} >\n                        <div div id=\"subNav_graphs\" className=\"subNav_icon_div\" style={GraphsNav_Active? {backgroundImage:`url(${graph_white_icon})`} : GraphsIsHoverdIcons? { backgroundImage:`url(${graph_white_icon})` } : {backgroundImage:`url(${graph_white_icon})`}}></div>\n                        <p id=\"subNav_graphs_p\" style={GraphsNav_Active? {color:PColor_active} : GraphsIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>Graphs</p>\n                    </div>\n                </NavLink>\n\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setAddRecNav_Active(true) : setAddRecNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" \n                    to=\"/ledger/NotAvailableYet/Add\"\n                    onMouseEnter={() =>  {setAddIsHoverd(true); setAddIsHoverdIcons(true)}} onMouseLeave={() =>  {setAddIsHoverd(false); setAddIsHoverdIcons(false)}}\n                >\n                    <div className='subNav_selected' style={AddNav_Active?  {border:Boder_active} : AddIsHoverd? {border:Boder_hover} : {border:Boder_normal}} >\n                        <div id='subNav_add' className=\"subNav_icon_div\" style={AddNav_Active? {backgroundImage:`url(${add_white_icon})`} : AddIsHoverdIcons? { backgroundImage:`url(${add_white_icon})` } : {backgroundImage:`url(${add_white_icon})`}}></div>\n                        <p id=\"add\" style={AddNav_Active? {color:PColor_active} : AddIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>Add</p>\n                    </div>\n                </NavLink>\n               \n\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setCashbookNav_Active(true) : setCashbookNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" \n                    to=\"/MobileLedger\"\n                    onMouseEnter={() =>  {setCashbookIsHoverd(true); setCashbookIsHoverdIcons(true)}} onMouseLeave={() =>  {setCashbookIsHoverd(false); setCashbookIsHoverdIcons(false)}}\n                >\n                    <div className='subNav_selected' style={CashbookNav_Active?  {border:Boder_active} : CashbookIsHoverd? {border:Boder_hover} : {border:Boder_normal}} >\n                        <div id=\"subNav_cash_book\" className=\"subNav_icon_div\" style={CashbookNav_Active? {backgroundImage:`url(${cashbook_white_icon})`} : CashbookIsHoverdIcons? { backgroundImage:`url(${cashbook_white_icon})` } : {backgroundImage:`url(${cashbook_white_icon})`}}></div>\n                        <p id=\"subNav_cash_book_p\" style={CashbookNav_Active? {color:PColor_active} : CashbookIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>cash book</p>\n                    </div>\n                </NavLink>\n\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setRatiosNav_Active(true) : setRatiosNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" \n                    to=\"/ledger/ratios\"\n                    onMouseEnter={() =>  {setRatiosIsHoverd(true); setRatiosIsHoverdIcons(true)}} onMouseLeave={() =>  {setRatiosIsHoverd(false); setRatiosIsHoverdIcons(false)}}\n                >\n                    <div className='subNav_selected' style={RatiosNav_Active?  {border:Boder_active} : RatiosIsHoverd? {border:Boder_hover} : {border:Boder_normal}} >\n                        <div id=\"subNav_ratios\" className=\"subNav_icon_div\" style={RatiosNav_Active? {backgroundImage:`url(${ratio_white_icon})`} : RatiosIsHoverdIcons? { backgroundImage:`url(${ratio_white_icon})` } : {backgroundImage:`url(${ratio_white_icon})`}}></div>\n                        <p id=\"subNav_ratios_p\" style={RatiosNav_Active? {color:PColor_active} : RatiosIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>Ratios</p>\n                    </div>\n                </NavLink>\n\n\n                <NavLink style={\n                    ({ isActive }) => {\n                        isActive ? setFilterNav_Active(true) : setFilterNav_Active(false)\n                        // return {\n                        //     color: isActive ? PColor_active : \"var(--color5) !important\",\n                        // };\n                    }} \n                    className=\"NavLink\" \n                    to=\"/ledger/filtter\"\n                    onMouseEnter={() =>  {setFilterIsHoverd(true); setFilterIsHoverdIcons(true)}} onMouseLeave={() =>  {setFilterIsHoverd(false); setFilterIsHoverdIcons(false)}}\n                >\n                    <div className='subNav_selected' style={FilterNav_Active?  {border:Boder_active} : FilterIsHoverd? {border:Boder_hover} : {border:Boder_normal}} >\n                        <div id=\"subNav_filtter\" className=\"subNav_icon_div\" style={FilterNav_Active? {backgroundImage:`url(${filter_white_icon})`} : FilterIsHoverdIcons? { backgroundImage:`url(${filter_white_icon})` } : {backgroundImage:`url(${filter_white_icon})`}}></div>\n                        <p id=\"subNav_filtter_p\" style={FilterNav_Active? {color:PColor_active} : FilterIsHoverd? { color:PColor_hover } : {color:PColor_normal}}>Filtter</p>\n                    </div>\n                </NavLink>\n            </div>\n        </>\n        \n    );\n}\n\nexport default SubNav_mobile;\n","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/CreateFlow_mobile.js",["518","519","520","521","522","523","524","525","526","527"],[],"import { useState, useEffect } from 'react';\nimport React from 'react'\nimport './createFlow.css'\nimport useGlobalState from \"../../../Store_&_State/GlobalState\"\nimport useAccess from \"../../auths/accessToken\"\nimport {create_cashFlow} from './api/cashFow_CRUD'\nimport {get_categories, create_categories} from \"./api/categories_api\"\nimport {get_savedTransctions, create_savedTransctions} from './api/savedTransaction_api'\nimport NumberFormat from 'react-number-format';\nimport SubNav_mobile from '../../defualt_Layouts/subNav_mobile';\n\nfunction CreateFlow_mobile(prop) {\n    const [description, setDescription] = useState(\"\");\n    const [selected_Streamm, setSelected_Streamm] = useState(\"\");\n    const [credit, setCredit] = useState('');\n    const [debit, setDebit] = useState('');\n    const [categoryList, setcategoryList] = useState(\"\");\n    const [categorySelected, setCategorySelected] = useState(\"\");\n    const [newCategory, setNewCategory] = useState(\"\");\n    const [selected_Category, setSelected_Category] = useState(\"\");\n    const [savedTransaction, setSavedTransaction] = useState('');\n    const [categorySelectFontWieght, setCategorySelectFontWieght] = useState(\"bolder\");\n    const [selectTransactonFontWeight, setSelectTransactonFontWeight] = useState(\"bolder\");\n    const [categorySelectColor, setCategorySelectColor] = useState(\"gray\");\n    const [selectTransactonColor, setSelectTransactonColor] = useState(\"gray\");\n    const [stream, setStream] = useState([]);\n    const [savedTransctionList, setSavedTransctionList] = useState([]);\n    \n    const {access, setAccess} = useAccess('')\n    const {createFlowModalIsOpen, setCreateFlowIsOpen} = useGlobalState([]);\n    const {streamList, setStreamList} = useGlobalState([]);\n    const {reRender, setReRender} = useGlobalState([0]);\n\n    \n    \n    const set_Access = (Access_token) => {\n        setAccess(Access_token)\n    }\n\n\n    // set stream data............................................................................................\n    useEffect(() => {\n        setStream(\n          streamList.map(function(item){\n            return(\n                <button className='streamBTNs' id={'stream'+item.id} required onClick={(e)=>{ \n                    e.preventDefault(); \n                    setSelected_Streamm(item.id);\n                    const streamBTNs = document.getElementsByClassName('streamBTNs')\n\n                    for( var i =0; i < streamBTNs.length; i++){\n                        streamBTNs[i].style.backgroundColor = 'white'\n                        streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n                    }\n\n                    e.target.style.backgroundColor = 'rgb(142, 143, 196)'\n                    e.target.style.color = 'white'\n                }}>\n                    {item.name}\n                </button>\n            )\n          })\n        );\n    \n    }, [streamList]);\n\n\n    // modal management......................................................................................................\n\n    function closeModal(e) {\n        e.preventDefault();\n        window.location.assign(\"/ledger\")\n    }\n\n    useEffect(() => {\n        load_categories()\n        load_savedTransactions()\n    }, []);\n\n\n    // reacord create.................................................................................................\n    const record_create_Success = async(data, page) => {\n        setCreateFlowIsOpen(false);\n        setReRender(reRender+1)\n        alert(\"record added\")\n        setDescription('')\n        setCredit('')\n        setDebit('')\n        window.location.assign(\"/ledger\")\n    };\n\n    const create_Data = async(e)=>{\n        e.preventDefault()\n        await create_cashFlow(description, selected_Streamm, credit, debit, categorySelected, record_create_Success, access, set_Access);\n    };\n\n\n    // get saved transactions........................................................................................\n    const getSavedTransction_success = (text) => {\n        const data = JSON.parse(text)\n        setSavedTransctionList(\n            data.results.map(function(item){\n              return(\n                <option value={JSON.stringify(item)}>{item.description}</option> \n              )\n            })\n        )\n    }\n\n    const getSavedTransction_fail = () => {\n        \n    }\n    \n    const load_savedTransactions = () => {\n        get_savedTransctions(getSavedTransction_success, getSavedTransction_fail, access, setAccess)\n        \n    }\n\n    //apply saved transaaction \n    const applySavedTransaction = (e) => {\n        const selected = JSON.parse(e.target.value)\n        if(selected !== \"\"){\n            setCategorySelected(selected.category)\n            setCredit(selected.Credit)\n            setDebit(selected.Debit)\n            setSelected_Streamm(selected.cashStream)\n            const streamBTNs = document.getElementsByClassName('streamBTNs')\n            for( var i =0; i < streamBTNs.length; i++){\n                streamBTNs[i].style.backgroundColor = 'white'\n                streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n            }\n            document.getElementById('stream'+selected.cashStream).style.backgroundColor = 'rgb(142, 143, 196)'\n            document.getElementById('stream'+selected.cashStream).style.color = 'white'\n            setDescription(selected.description)\n        }else{\n            setCategorySelected('')\n            const categoriesInput = document.getElementsByClassName('categoriesInput')\n            for( var i =0; i < categoriesInput.length; i++){\n                categoriesInput[i].checked = false\n            }\n            setCredit('')\n            setDebit('')\n            setSelected_Streamm('')\n            const streamBTNs = document.getElementsByClassName('streamBTNs')\n            for( var i =0; i < streamBTNs.length; i++){\n                streamBTNs[i].style.backgroundColor = 'white'\n                streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n            }\n            setDescription('')\n        }\n    }\n\n\n    // GET category ..................................................................................................\n    const getCategories_success = async(data) => {\n        setcategoryList(\n            data.results.map(function(item){\n              return(\n                <option value={JSON.stringify(item.id)}>{item.name}</option> \n              )\n            })\n        )\n\n    };\n\n    const getCategories_fail = async(failed) => {\n        console.log(failed)\n    };\n\n    const load_categories = () => {\n        get_categories(getCategories_success, getCategories_fail, access, setAccess)\n        \n    }\n    \n\n    // category created................................................................................................\n    const create_Category_Success = () => {\n        alert('category created')\n        load_categories() \n        setNewCategory('')\n    }\n\n    const create_Category = async(e)=>{\n        e.preventDefault()\n        await create_categories(newCategory, create_Category_Success, access, set_Access);\n    };\n\n    \n    // save transactions..............................................................................................\n    useEffect(\n        () => {\n            if(savedTransaction == '' || savedTransaction === JSON.stringify('')){\n                setSelectTransactonFontWeight(\"bolder\")\n                setCategorySelectColor('gray')\n            }else{\n                setSelectTransactonFontWeight(\"normal\")\n                setCategorySelectColor('balck')\n            }\n\n            if(categorySelected == '' || categorySelected === JSON.stringify('')){\n                setCategorySelectFontWieght('bold')\n                setSelectTransactonColor('gray')\n            }else{\n                setCategorySelectFontWieght('normal')\n                setSelectTransactonColor('balck')\n            }\n        },[savedTransaction, categorySelected]\n    )\n\n    const saveTransaction_Success = async(data, page) => {\n        alert(\"transaction saved\")\n        load_savedTransactions()\n    };\n\n    const saveTransaction = (e) => {\n        e.preventDefault()\n        create_savedTransctions(description, selected_Streamm, credit, debit, categorySelected, saveTransaction_Success, access, set_Access) \n    }\n\n  return (\n    <>\n        <div id='createFormMobiileOverlay'>\n            <form id=\"createFormMobile\" className='column' >\n                <div id='record_Header_Overlay' className='row'>\n                    <h2>Add Record</h2> \n                    <button onClick={closeModal}></button>\n                </div>\n                \n                <div id='descriptionOverlay' className=\"\">\n                    Description<br/>\n                    <input className=\"record_form\" autoFocus type=\"text\" id=\"description\" placeholder=\"e.g. worker salary\" onChange={(e)=>{setDescription(e.target.value)}} value={description} /><br/>\n                </div>\n\n                <div id='accountOverlay'>\n                    <p id='accountOverlay_p'>Account<br/></p> \n                    <div>\n                        {stream}\n                    </div>\n                </div><br/>\n                \n                <div id='AmountOverlay' className=\"inputTextOverlay\">\n                    <p id='AmountOverlay_p'>Amount<br/></p> \n                    <div className='row'>\n                        <div>\n                            Credit<NumberFormat \n                                thousandSeparator={true} \n                                prefix={'$'}\n                                className=\"record_form\" \n                                type=\"credit\"\n                                placeholder=\"0.00\" \n                                onChange={(e)=>{setCredit(e.target.value)}} \n                                value={credit}\n                            />\n                        </div>\n                        \n                        <div>\n                            <span>Debit</span>\n                            <NumberFormat \n                                thousandSeparator={true} \n                                prefix={'$'} \n                                className=\"record_form\" \n                                type=\"debit\" \n                                placeholder=\"0.00\" \n                                onChange={(e)=>{setDebit(e.target.value)}} \n                                value={debit}\n                            />\n                        </div>\n                    </div>\n                </div>\n        \n                <div id='categoryOverlay' className='column'>\n                    <p id='categoryOverlay_p'>Category <br/></p> \n                    <label>\n                        <select value={categorySelected} onChange={(e)=>{setCategorySelected(e.target.value)}} style={{fontWeight:categorySelectFontWieght, color:categorySelectColor}} >\n                            <option value={JSON.stringify('')}>Choose category</option>\n                                {categoryList }\n                            {/* <option value=\"grapefruit\">coco</option> */}\n                        </select>\n\n                        <div id='addCategoryOverlay'>\n                                <input className=\"add_category\" placeholder=\"Add new category\"  type=\"text\" id=\"category\" onChange={(e)=>{setNewCategory(e.target.value)}} value={newCategory} />\n                                <button onClick={create_Category}></button>\n                        </div>\n                    </label>\n                </div>\n\n                <div id='savedTransactionOverlay' className='row'>\n                    <label>\n                        <select value={savedTransaction} onChange={(e)=>{setSavedTransaction(e.target.value); applySavedTransaction(e)}} style={{fontWeight:selectTransactonFontWeight, color:selectTransactonColor}} >\n                            <option value={JSON.stringify('')}>Choose transactions</option>\n                                {savedTransctionList}\n                        </select>\n                    </label>\n                    <div className='column'>\n                        <button onClick={saveTransaction}></button>\n                        Save transaction\n                    </div>\n                </div>\n                \n                <div id=\"BTN_overlay\" >\n                    <div>\n                        <button id=\"submit\"  value=\"Done\" onClick={closeModal}>cancel</button>\n                        <button id=\"submit\" type=\"submit\" value=\"Done\" onClick={create_Data}>Done</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <SubNav_mobile/>\n    </>\n  )\n}\n\nexport default CreateFlow_mobile","/home/gcg/Desktop/Programing /python/Django main projects/projects/businessManagement/react_BusinessManagement/src/features/ledger/components/EditFlow_mobile.js",["528","529","530","531","532","533","534","535"],[],"import { useState, useEffect } from 'react';\nimport React from 'react'\nimport './editFlow.css'\nimport useGlobalState from \"../../../Store_&_State/GlobalState\"\nimport useAccess from \"../../auths/accessToken\"\nimport {edit_cashFlow, get_edit_cashFlow} from './api/cashFow_CRUD'\nimport {get_categories, create_categories} from \"./api/categories_api\"\nimport {get_savedTransctions, create_savedTransctions} from './api/savedTransaction_api'\nimport NumberFormat from 'react-number-format';\nimport SubNav_mobile from '../../defualt_Layouts/subNav_mobile';\n\nfunction EditFlow_Mobile(prop) {\n    const [description, setDescription] = useState(\"\");\n    const [selected_Streamm, setSelected_Streamm] = useState(\"\");\n    const [credit, setCredit] = useState('');\n    const [debit, setDebit] = useState('');\n    const [categoryList, setcategoryList] = useState(\"\");\n    const [categorySelected, setCategorySelected] = useState(\"\");\n    const [newCategory, setNewCategory] = useState(\"\");\n    // const [selected_Category, setSelected_Category] = useState(\"\");\n    const [savedTransaction, setSavedTransaction] = useState('');\n    const [categorySelectFontWieght, setCategorySelectFontWieght] = useState(\"bolder\");\n    const [selectTransactonFontWeight, setSelectTransactonFontWeight] = useState(\"bolder\");\n    const [categorySelectColor, setCategorySelectColor] = useState(\"\");\n    const [selectTransactonColor, setSelectTransactonColor] = useState(\"\");\n    const [stream, setStream] = useState([]);\n    const [savedTransctionList, setSavedTransctionList] = useState([]);\n    \n    const {access, setAccess} = useAccess('')\n    const {editFlowIsOpen, setEditFlowIsOpen} = useGlobalState([]);\n    const {streamList, setStreamList} = useGlobalState([]);\n    const {reRender, setReRender} = useGlobalState([0]);\n    const {flowId, setFlowId} = useGlobalState([]);\n\n    \n    \n    const set_Access = (Access_token) => {\n        setAccess(Access_token)\n    }\n\n\n    // set stream data............................................................................................\n    useEffect(() => {\n        setStream(\n          streamList.map(function(item){\n            return(\n                <button className='streamBTNs' id={'stream'+item.id} required onClick={(e)=>{ \n                    e.preventDefault(); \n                    setSelected_Streamm(item.id);\n                    const streamBTNs = document.getElementsByClassName('streamBTNs')\n\n                    for( var i =0; i < streamBTNs.length; i++){\n                        streamBTNs[i].style.backgroundColor = 'white'\n                        streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n                    }\n\n                    e.target.style.backgroundColor = 'rgb(142, 143, 196)'\n                    e.target.style.color = 'white'\n                }}>\n                    {item.name}\n                </button>\n            )\n          })\n        );\n    \n    }, [streamList]);\n\n    // reacord edit.................................................................................................\n    const record_edit_Success = async() => {\n        setEditFlowIsOpen(false);\n        prop.blur(0)\n        setReRender(reRender+1)\n        alert(\"record edited\")\n        setDescription('')\n        setCredit('')\n        setDebit('')\n    };\n\n    const edit_Data = async(e)=>{\n        // alert('hj')\n        e.preventDefault()\n        await edit_cashFlow(flowId, description, selected_Streamm, credit, debit, categorySelected, record_edit_Success, access, set_Access);\n    };\n\n\n    // get saved transactions........................................................................................\n    const getSavedTransction_success = (text) => {\n        const data = JSON.parse(text)\n        setSavedTransctionList(\n            data.results.map(function(item){\n              return(\n                <option value={JSON.stringify(item)}>{item.description}</option> \n              )\n            })\n        )\n    }\n\n    const getSavedTransction_fail = () => {\n        \n    }\n    \n    const load_savedTransactions = () => {\n        get_savedTransctions(getSavedTransction_success, getSavedTransction_fail, access, setAccess)\n        \n    }\n\n    //apply saved transaaction \n    const applySavedTransaction = (e) => {\n        const selected = JSON.parse(e.target.value)\n        if(selected !== \"\"){\n            setCategorySelected(selected.category)\n            setCredit(selected.Credit)\n            setDebit(selected.Debit)\n            setSelected_Streamm(selected.cashStream)\n            const streamBTNs = document.getElementsByClassName('streamBTNs')\n            for( var i =0; i < streamBTNs.length; i++){\n                streamBTNs[i].style.backgroundColor = 'white'\n                streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n            }\n            document.getElementById('stream'+selected.cashStream).style.backgroundColor = 'rgb(142, 143, 196)'\n            document.getElementById('stream'+selected.cashStream).style.color = 'white'\n            setDescription(selected.description)\n        }else{\n            setCategorySelected('')\n            const categoriesInput = document.getElementsByClassName('categoriesInput')\n            for( var i =0; i < categoriesInput.length; i++){\n                categoriesInput[i].checked = false\n            }\n            setCredit('')\n            setDebit('')\n            setSelected_Streamm('')\n            const streamBTNs = document.getElementsByClassName('streamBTNs')\n            for( var i =0; i < streamBTNs.length; i++){\n                streamBTNs[i].style.backgroundColor = 'white'\n                streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n            }\n            setDescription('')\n        }\n    }\n\n\n    // GET category ..................................................................................................\n    const getCategories_success = async(data) => {\n        setcategoryList(\n            data.results.map(function(item){\n              return(\n                <option value={JSON.stringify(item.id)}>{item.name}</option> \n              )\n            })\n        )\n\n    };\n\n    const getCategories_fail = async(failed) => {\n        console.log(failed)\n    };\n\n    const load_categories = () => {\n        get_categories(getCategories_success, getCategories_fail, access, setAccess)\n        \n    }\n    \n\n    // category created................................................................................................\n    const create_Category_Success = () => {\n        alert('category created')\n        load_categories() \n        setNewCategory('')\n    }\n\n    const create_Category = async(e)=>{\n        e.preventDefault()\n        await create_categories(newCategory, create_Category_Success, access, set_Access);\n    };\n\n    \n    // save transactions..............................................................................................\n    useEffect(\n        () => {\n            if(savedTransaction === '' || savedTransaction === JSON.stringify('')){\n                setSelectTransactonFontWeight(\"bolder\")\n                setSelectTransactonColor('gray')\n            }else{\n                setSelectTransactonFontWeight(\"normal\")\n                setSelectTransactonColor('black')\n            }\n\n            if(categorySelected === '' || categorySelected === JSON.stringify('')){\n                setCategorySelectFontWieght('bold')\n                setCategorySelectColor('gray')\n            }else{\n                setCategorySelectFontWieght('normal')\n                setCategorySelectColor('black')\n            }\n        },[savedTransaction, categorySelected]\n    )\n\n    const saveTransaction_Success = async(data, page) => {\n        alert(\"transaction saved\")\n        load_savedTransactions()\n    };\n\n    const saveTransaction = (e) => {\n        e.preventDefault()\n        create_savedTransctions(description, selected_Streamm, credit, debit, categorySelected, saveTransaction_Success, access, set_Access) \n    }\n\n    // get get Edit data........................................................................................\n    const getEdit_data_success = (text) => {\n        const values = JSON.parse(text)\n        setCategorySelected(values.category)\n        setCredit(values.Credit)\n        setDebit(values.Debit)\n        setSelected_Streamm(values.cashStream)\n        const streamBTNs = document.getElementsByClassName('streamBTNs')\n        for( var i =0; i < streamBTNs.length; i++){\n            streamBTNs[i].style.backgroundColor = 'white'\n            streamBTNs[i].style.color = 'rgb(142, 143, 196)'\n        }\n        document.getElementById('stream'+values.cashStream).style.backgroundColor = 'rgb(142, 143, 196)'\n        document.getElementById('stream'+values.cashStream).style.color = 'white'\n        setDescription(values.description)\n    }\n\n    const getEdit_data_fail = () => {\n        \n    }\n\n    const load_edit_data = () => {\n        get_edit_cashFlow(flowId, getEdit_data_success, getSavedTransction_fail, access, setAccess)\n    }\n\n    // modal management......................................................................................................\n    function closeModal(e) {\n        e.preventDefault();\n        window.location.assign(\"/ledger\")\n    }\n\n    useEffect(() => {\n        load_categories()\n        load_savedTransactions()\n        load_edit_data()\n    }, []);\n\n  return (\n    <>\n        <div id='editFormMobileOverlay'>\n            <form id=\"editFormMobile\" className='column' >\n                <div id='record_Header_Overlay' className='row'>\n                    <h2>Edit Record</h2> \n                    <button onClick={closeModal}></button>\n                </div>\n                \n                <div id='descriptionOverlay' className=\"\">\n                    Description<br/>\n                    <input className=\"record_form\" autoFocus type=\"text\" id=\"description\" placeholder=\"e.g. worker salary\" onChange={(e)=>{setDescription(e.target.value)}} value={description} /><br/>\n                </div>\n\n                <div id='accountOverlay'>\n                    <p id='accountOverlay_p'>Account<br/></p> \n                    <div>\n                        {stream}\n                    </div>\n                </div><br/>\n                \n                <div id='AmountOverlay' className=\"inputTextOverlay\">\n                    <p id='AmountOverlay_p'>Amount<br/></p> \n                    <div className='row'>\n                        <div>\n                            Credit<NumberFormat \n                                thousandSeparator={true} \n                                prefix={'$'}\n                                className=\"record_form\" \n                                type=\"credit\"\n                                placeholder=\"0.00\" \n                                onChange={(e)=>{setCredit(e.target.value)}} \n                                value={credit}\n                            />\n                        </div>\n                        \n                        <div>\n                            <span>Debit</span>\n                            <NumberFormat \n                            thousandSeparator={true} \n                                prefix={'$'} \n                                className=\"record_form\" \n                                type=\"debit\" \n                                placeholder=\"0.00\" \n                                onChange={(e)=>{setDebit(e.target.value)}} \n                                value={debit}\n                            />\n                        </div>\n                    </div>\n                </div>\n        \n                <div id='categoryOverlay' className='column'>\n                    <p id='categoryOverlay_p'>Category <br/></p> \n                    <label>\n                        <select value={categorySelected} onChange={(e)=>{setCategorySelected(e.target.value)}} style={{fontWeight:categorySelectFontWieght, color:categorySelectColor}} >\n                            <option value={JSON.stringify('')}>Choose category</option>\n                                {categoryList }\n                            {/* <option value=\"grapefruit\">coco</option> */}\n                        </select>\n\n                        <div id='addCategoryOverlay'>\n                                <input className=\"add_category\" placeholder=\"Add new category\"  type=\"text\" id=\"category\" onChange={(e)=>{setNewCategory(e.target.value)}} value={newCategory} />\n                                <button onClick={create_Category}></button>\n                        </div>\n                    </label>\n                </div>\n\n                <div id='savedTransactionOverlay' className='row'>\n                    <label>\n                        <select value={savedTransaction} onChange={(e)=>{setSavedTransaction(e.target.value); applySavedTransaction(e)}} style={{fontWeight:selectTransactonFontWeight, color:selectTransactonColor}} >\n                            <option value={JSON.stringify('')}>Choose transactions</option>\n                                {savedTransctionList}\n                        </select>\n                    </label>\n                    <div className='column'>\n                        <button onClick={saveTransaction}></button>\n                        Save transaction\n                    </div>\n                </div>\n                \n                <div id=\"BTN_overlay\" >\n                    <div>\n                        <button id=\"submit\"  value=\"Done\" onClick={closeModal}>cancel</button>\n                        <button id=\"submit\" type=\"submit\" value=\"Done\" onClick={edit_Data}>Done</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <SubNav_mobile/>\n    </>\n  )\n}\n\nexport default EditFlow_Mobile",{"ruleId":"536","severity":1,"message":"537","line":1,"column":16,"nodeType":"538","messageId":"539","endLine":1,"endColumn":24},{"ruleId":"536","severity":1,"message":"537","line":1,"column":16,"nodeType":"538","messageId":"539","endLine":1,"endColumn":24},{"ruleId":"536","severity":1,"message":"540","line":1,"column":37,"nodeType":"538","messageId":"539","endLine":1,"endColumn":44},{"ruleId":"536","severity":1,"message":"541","line":2,"column":23,"nodeType":"538","messageId":"539","endLine":2,"endColumn":34},{"ruleId":"542","severity":1,"message":"543","line":25,"column":11,"nodeType":"544","endLine":25,"endColumn":44,"suggestions":"545"},{"ruleId":"536","severity":1,"message":"537","line":1,"column":16,"nodeType":"538","messageId":"539","endLine":1,"endColumn":24},{"ruleId":"546","severity":1,"message":"547","line":65,"column":42,"nodeType":"548","messageId":"549","endLine":65,"endColumn":44},{"ruleId":"542","severity":1,"message":"550","line":85,"column":12,"nodeType":"544","endLine":85,"endColumn":21,"suggestions":"551"},{"ruleId":"536","severity":1,"message":"537","line":1,"column":16,"nodeType":"538","messageId":"539","endLine":1,"endColumn":24},{"ruleId":"536","severity":1,"message":"540","line":1,"column":37,"nodeType":"538","messageId":"539","endLine":1,"endColumn":44},{"ruleId":"536","severity":1,"message":"541","line":2,"column":23,"nodeType":"538","messageId":"539","endLine":2,"endColumn":34},{"ruleId":"542","severity":1,"message":"552","line":9,"column":5,"nodeType":"538","endLine":9,"endColumn":14,"suggestions":"553"},{"ruleId":"536","severity":1,"message":"554","line":6,"column":8,"nodeType":"538","messageId":"539","endLine":6,"endColumn":19},{"ruleId":"555","severity":1,"message":"556","line":49,"column":73,"nodeType":"557","messageId":"558","endLine":49,"endColumn":94},{"ruleId":"555","severity":1,"message":"559","line":50,"column":71,"nodeType":"557","messageId":"558","endLine":50,"endColumn":90},{"ruleId":"536","severity":1,"message":"560","line":1,"column":16,"nodeType":"538","messageId":"539","endLine":1,"endColumn":25},{"ruleId":"536","severity":1,"message":"541","line":3,"column":23,"nodeType":"538","messageId":"539","endLine":3,"endColumn":34},{"ruleId":"536","severity":1,"message":"561","line":3,"column":8,"nodeType":"538","messageId":"539","endLine":3,"endColumn":21},{"ruleId":"536","severity":1,"message":"540","line":1,"column":31,"nodeType":"538","messageId":"539","endLine":1,"endColumn":38},{"ruleId":"536","severity":1,"message":"562","line":2,"column":8,"nodeType":"538","messageId":"539","endLine":2,"endColumn":17},{"ruleId":"536","severity":1,"message":"563","line":17,"column":10,"nodeType":"538","messageId":"539","endLine":17,"endColumn":21},{"ruleId":"536","severity":1,"message":"564","line":24,"column":25,"nodeType":"538","messageId":"539","endLine":24,"endColumn":41},{"ruleId":"536","severity":1,"message":"565","line":25,"column":22,"nodeType":"538","messageId":"539","endLine":25,"endColumn":35},{"ruleId":"542","severity":1,"message":"566","line":37,"column":7,"nodeType":"544","endLine":37,"endColumn":9,"suggestions":"567"},{"ruleId":"555","severity":1,"message":"568","line":103,"column":9,"nodeType":"557","messageId":"558","endLine":103,"endColumn":25},{"ruleId":"536","severity":1,"message":"569","line":10,"column":10,"nodeType":"538","messageId":"539","endLine":10,"endColumn":16},{"ruleId":"536","severity":1,"message":"560","line":2,"column":16,"nodeType":"538","messageId":"539","endLine":2,"endColumn":25},{"ruleId":"536","severity":1,"message":"570","line":2,"column":37,"nodeType":"538","messageId":"539","endLine":2,"endColumn":43},{"ruleId":"536","severity":1,"message":"571","line":9,"column":12,"nodeType":"538","messageId":"539","endLine":9,"endColumn":15},{"ruleId":"542","severity":1,"message":"572","line":32,"column":8,"nodeType":"544","endLine":32,"endColumn":10,"suggestions":"573"},{"ruleId":"536","severity":1,"message":"574","line":2,"column":8,"nodeType":"538","messageId":"539","endLine":2,"endColumn":16},{"ruleId":"536","severity":1,"message":"540","line":1,"column":31,"nodeType":"538","messageId":"539","endLine":1,"endColumn":38},{"ruleId":"536","severity":1,"message":"575","line":7,"column":10,"nodeType":"538","messageId":"539","endLine":7,"endColumn":20},{"ruleId":"536","severity":1,"message":"576","line":9,"column":8,"nodeType":"538","messageId":"539","endLine":9,"endColumn":14},{"ruleId":"536","severity":1,"message":"577","line":16,"column":24,"nodeType":"538","messageId":"539","endLine":16,"endColumn":39},{"ruleId":"536","severity":1,"message":"578","line":17,"column":22,"nodeType":"538","messageId":"539","endLine":17,"endColumn":35},{"ruleId":"536","severity":1,"message":"579","line":18,"column":20,"nodeType":"538","messageId":"539","endLine":18,"endColumn":31},{"ruleId":"536","severity":1,"message":"580","line":20,"column":10,"nodeType":"538","messageId":"539","endLine":20,"endColumn":20},{"ruleId":"536","severity":1,"message":"581","line":21,"column":10,"nodeType":"538","messageId":"539","endLine":21,"endColumn":18},{"ruleId":"536","severity":1,"message":"582","line":25,"column":10,"nodeType":"538","messageId":"539","endLine":25,"endColumn":21},{"ruleId":"583","severity":1,"message":"584","line":73,"column":17,"nodeType":"585","messageId":"586","endLine":73,"endColumn":19},{"ruleId":"583","severity":1,"message":"584","line":77,"column":15,"nodeType":"585","messageId":"586","endLine":77,"endColumn":17},{"ruleId":"542","severity":1,"message":"587","line":81,"column":6,"nodeType":"544","endLine":81,"endColumn":54,"suggestions":"588"},{"ruleId":"542","severity":1,"message":"589","line":99,"column":6,"nodeType":"544","endLine":99,"endColumn":18,"suggestions":"590"},{"ruleId":"583","severity":1,"message":"584","line":111,"column":20,"nodeType":"585","messageId":"586","endLine":111,"endColumn":22},{"ruleId":"583","severity":1,"message":"584","line":48,"column":31,"nodeType":"585","messageId":"586","endLine":48,"endColumn":33},{"ruleId":"536","severity":1,"message":"540","line":2,"column":31,"nodeType":"538","messageId":"539","endLine":2,"endColumn":38},{"ruleId":"536","severity":1,"message":"591","line":3,"column":40,"nodeType":"538","messageId":"539","endLine":3,"endColumn":53},{"ruleId":"536","severity":1,"message":"575","line":7,"column":10,"nodeType":"538","messageId":"539","endLine":7,"endColumn":20},{"ruleId":"536","severity":1,"message":"592","line":18,"column":20,"nodeType":"538","messageId":"539","endLine":18,"endColumn":31},{"ruleId":"536","severity":1,"message":"593","line":34,"column":10,"nodeType":"538","messageId":"539","endLine":34,"endColumn":31},{"ruleId":"536","severity":1,"message":"594","line":35,"column":10,"nodeType":"538","messageId":"539","endLine":35,"endColumn":24},{"ruleId":"536","severity":1,"message":"595","line":36,"column":20,"nodeType":"538","messageId":"539","endLine":36,"endColumn":31},{"ruleId":"536","severity":1,"message":"596","line":38,"column":22,"nodeType":"538","messageId":"539","endLine":38,"endColumn":35},{"ruleId":"536","severity":1,"message":"597","line":39,"column":18,"nodeType":"538","messageId":"539","endLine":39,"endColumn":27},{"ruleId":"536","severity":1,"message":"598","line":40,"column":10,"nodeType":"538","messageId":"539","endLine":40,"endColumn":20},{"ruleId":"536","severity":1,"message":"599","line":41,"column":10,"nodeType":"538","messageId":"539","endLine":41,"endColumn":18},{"ruleId":"536","severity":1,"message":"600","line":43,"column":22,"nodeType":"538","messageId":"539","endLine":43,"endColumn":35},{"ruleId":"536","severity":1,"message":"601","line":44,"column":20,"nodeType":"538","messageId":"539","endLine":44,"endColumn":31},{"ruleId":"536","severity":1,"message":"602","line":45,"column":26,"nodeType":"538","messageId":"539","endLine":45,"endColumn":43},{"ruleId":"536","severity":1,"message":"603","line":46,"column":18,"nodeType":"538","messageId":"539","endLine":46,"endColumn":27},{"ruleId":"536","severity":1,"message":"604","line":51,"column":10,"nodeType":"538","messageId":"539","endLine":51,"endColumn":23},{"ruleId":"536","severity":1,"message":"605","line":52,"column":10,"nodeType":"538","messageId":"539","endLine":52,"endColumn":20},{"ruleId":"546","severity":1,"message":"606","line":128,"column":17,"nodeType":"607","messageId":"549","endLine":128,"endColumn":25},{"ruleId":"536","severity":1,"message":"608","line":135,"column":25,"nodeType":"538","messageId":"539","endLine":135,"endColumn":35},{"ruleId":"609","severity":1,"message":"610","line":146,"column":29,"nodeType":"538","messageId":"611","endLine":146,"endColumn":30},{"ruleId":"546","severity":1,"message":"606","line":283,"column":19,"nodeType":"607","messageId":"549","endLine":283,"endColumn":27},{"ruleId":"536","severity":1,"message":"608","line":290,"column":27,"nodeType":"538","messageId":"539","endLine":290,"endColumn":37},{"ruleId":"609","severity":1,"message":"610","line":301,"column":31,"nodeType":"538","messageId":"611","endLine":301,"endColumn":32},{"ruleId":"542","severity":1,"message":"612","line":410,"column":7,"nodeType":"544","endLine":410,"endColumn":27,"suggestions":"613"},{"ruleId":"542","severity":1,"message":"614","line":416,"column":7,"nodeType":"544","endLine":416,"endColumn":41,"suggestions":"615"},{"ruleId":"542","severity":1,"message":"616","line":469,"column":6,"nodeType":"544","endLine":469,"endColumn":66,"suggestions":"617"},{"ruleId":"536","severity":1,"message":"618","line":133,"column":9,"nodeType":"538","messageId":"539","endLine":133,"endColumn":13},{"ruleId":"536","severity":1,"message":"618","line":177,"column":13,"nodeType":"538","messageId":"539","endLine":177,"endColumn":17},{"ruleId":"536","severity":1,"message":"618","line":259,"column":13,"nodeType":"538","messageId":"539","endLine":259,"endColumn":17},{"ruleId":"536","severity":1,"message":"574","line":2,"column":8,"nodeType":"538","messageId":"539","endLine":2,"endColumn":16},{"ruleId":"536","severity":1,"message":"619","line":20,"column":12,"nodeType":"538","messageId":"539","endLine":20,"endColumn":29},{"ruleId":"536","severity":1,"message":"620","line":20,"column":31,"nodeType":"538","messageId":"539","endLine":20,"endColumn":51},{"ruleId":"536","severity":1,"message":"596","line":28,"column":24,"nodeType":"538","messageId":"539","endLine":28,"endColumn":37},{"ruleId":"609","severity":1,"message":"610","line":136,"column":22,"nodeType":"538","messageId":"611","endLine":136,"endColumn":23},{"ruleId":"609","severity":1,"message":"610","line":143,"column":22,"nodeType":"538","messageId":"611","endLine":143,"endColumn":23},{"ruleId":"583","severity":1,"message":"584","line":190,"column":33,"nodeType":"585","messageId":"586","endLine":190,"endColumn":35},{"ruleId":"536","severity":1,"message":"618","line":64,"column":13,"nodeType":"538","messageId":"539","endLine":64,"endColumn":17},{"ruleId":"536","severity":1,"message":"618","line":67,"column":13,"nodeType":"538","messageId":"539","endLine":67,"endColumn":17},{"ruleId":"536","severity":1,"message":"621","line":7,"column":8,"nodeType":"538","messageId":"539","endLine":7,"endColumn":19},{"ruleId":"536","severity":1,"message":"622","line":38,"column":12,"nodeType":"538","messageId":"539","endLine":38,"endColumn":25},{"ruleId":"536","severity":1,"message":"623","line":38,"column":27,"nodeType":"538","messageId":"539","endLine":38,"endColumn":43},{"ruleId":"536","severity":1,"message":"624","line":39,"column":12,"nodeType":"538","messageId":"539","endLine":39,"endColumn":24},{"ruleId":"536","severity":1,"message":"625","line":39,"column":26,"nodeType":"538","messageId":"539","endLine":39,"endColumn":41},{"ruleId":"536","severity":1,"message":"626","line":40,"column":12,"nodeType":"538","messageId":"539","endLine":40,"endColumn":25},{"ruleId":"536","severity":1,"message":"627","line":40,"column":27,"nodeType":"538","messageId":"539","endLine":40,"endColumn":43},{"ruleId":"536","severity":1,"message":"628","line":2,"column":10,"nodeType":"538","messageId":"539","endLine":2,"endColumn":17},{"ruleId":"536","severity":1,"message":"560","line":4,"column":20,"nodeType":"538","messageId":"539","endLine":4,"endColumn":29},{"ruleId":"536","severity":1,"message":"629","line":15,"column":8,"nodeType":"538","messageId":"539","endLine":15,"endColumn":25},{"ruleId":"536","severity":1,"message":"630","line":19,"column":8,"nodeType":"538","messageId":"539","endLine":19,"endColumn":30},{"ruleId":"536","severity":1,"message":"631","line":23,"column":8,"nodeType":"538","messageId":"539","endLine":23,"endColumn":31},{"ruleId":"536","severity":1,"message":"632","line":27,"column":8,"nodeType":"538","messageId":"539","endLine":27,"endColumn":28},{"ruleId":"536","severity":1,"message":"633","line":56,"column":32,"nodeType":"538","messageId":"539","endLine":56,"endColumn":53},{"ruleId":"536","severity":1,"message":"634","line":57,"column":31,"nodeType":"538","messageId":"539","endLine":57,"endColumn":51},{"ruleId":"536","severity":1,"message":"635","line":58,"column":32,"nodeType":"538","messageId":"539","endLine":58,"endColumn":53},{"ruleId":"536","severity":1,"message":"623","line":60,"column":27,"nodeType":"538","messageId":"539","endLine":60,"endColumn":43},{"ruleId":"536","severity":1,"message":"625","line":61,"column":26,"nodeType":"538","messageId":"539","endLine":61,"endColumn":41},{"ruleId":"536","severity":1,"message":"627","line":62,"column":27,"nodeType":"538","messageId":"539","endLine":62,"endColumn":43},{"ruleId":"536","severity":1,"message":"636","line":4,"column":9,"nodeType":"538","messageId":"539","endLine":4,"endColumn":24},{"ruleId":"536","severity":1,"message":"576","line":10,"column":8,"nodeType":"538","messageId":"539","endLine":10,"endColumn":14},{"ruleId":"536","severity":1,"message":"637","line":16,"column":8,"nodeType":"538","messageId":"539","endLine":16,"endColumn":30},{"ruleId":"536","severity":1,"message":"596","line":20,"column":24,"nodeType":"538","messageId":"539","endLine":20,"endColumn":37},{"ruleId":"536","severity":1,"message":"638","line":25,"column":25,"nodeType":"538","messageId":"539","endLine":25,"endColumn":39},{"ruleId":"536","severity":1,"message":"580","line":37,"column":12,"nodeType":"538","messageId":"539","endLine":37,"endColumn":22},{"ruleId":"536","severity":1,"message":"581","line":38,"column":12,"nodeType":"538","messageId":"539","endLine":38,"endColumn":20},{"ruleId":"536","severity":1,"message":"639","line":39,"column":12,"nodeType":"538","messageId":"539","endLine":39,"endColumn":26},{"ruleId":"536","severity":1,"message":"640","line":62,"column":31,"nodeType":"538","messageId":"539","endLine":62,"endColumn":41},{"ruleId":"542","severity":1,"message":"641","line":94,"column":8,"nodeType":"544","endLine":94,"endColumn":33,"suggestions":"642"},{"ruleId":"542","severity":1,"message":"643","line":118,"column":8,"nodeType":"544","endLine":118,"endColumn":10,"suggestions":"644"},{"ruleId":"536","severity":1,"message":"645","line":137,"column":11,"nodeType":"538","messageId":"539","endLine":137,"endColumn":26},{"ruleId":"555","severity":1,"message":"568","line":236,"column":13,"nodeType":"557","messageId":"558","endLine":236,"endColumn":29},{"ruleId":"536","severity":1,"message":"646","line":21,"column":12,"nodeType":"538","messageId":"539","endLine":21,"endColumn":27},{"ruleId":"536","severity":1,"message":"647","line":27,"column":33,"nodeType":"538","messageId":"539","endLine":27,"endColumn":55},{"ruleId":"583","severity":1,"message":"584","line":95,"column":24,"nodeType":"585","messageId":"586","endLine":95,"endColumn":26},{"ruleId":"542","severity":1,"message":"616","line":102,"column":8,"nodeType":"544","endLine":102,"endColumn":70,"suggestions":"648"},{"ruleId":"555","severity":1,"message":"568","line":238,"column":13,"nodeType":"557","messageId":"558","endLine":238,"endColumn":29},{"ruleId":"536","severity":1,"message":"649","line":16,"column":12,"nodeType":"538","messageId":"539","endLine":16,"endColumn":20},{"ruleId":"536","severity":1,"message":"650","line":16,"column":22,"nodeType":"538","messageId":"539","endLine":16,"endColumn":33},{"ruleId":"536","severity":1,"message":"651","line":17,"column":12,"nodeType":"538","messageId":"539","endLine":17,"endColumn":18},{"ruleId":"536","severity":1,"message":"652","line":17,"column":20,"nodeType":"538","messageId":"539","endLine":17,"endColumn":29},{"ruleId":"536","severity":1,"message":"653","line":19,"column":29,"nodeType":"538","messageId":"539","endLine":19,"endColumn":47},{"ruleId":"536","severity":1,"message":"654","line":20,"column":12,"nodeType":"538","messageId":"539","endLine":20,"endColumn":28},{"ruleId":"536","severity":1,"message":"655","line":20,"column":30,"nodeType":"538","messageId":"539","endLine":20,"endColumn":49},{"ruleId":"536","severity":1,"message":"656","line":21,"column":12,"nodeType":"538","messageId":"539","endLine":21,"endColumn":25},{"ruleId":"536","severity":1,"message":"657","line":21,"column":27,"nodeType":"538","messageId":"539","endLine":21,"endColumn":43},{"ruleId":"536","severity":1,"message":"658","line":22,"column":12,"nodeType":"538","messageId":"539","endLine":22,"endColumn":18},{"ruleId":"536","severity":1,"message":"659","line":22,"column":20,"nodeType":"538","messageId":"539","endLine":22,"endColumn":29},{"ruleId":"536","severity":1,"message":"660","line":23,"column":12,"nodeType":"538","messageId":"539","endLine":23,"endColumn":24},{"ruleId":"536","severity":1,"message":"661","line":23,"column":26,"nodeType":"538","messageId":"539","endLine":23,"endColumn":41},{"ruleId":"536","severity":1,"message":"662","line":24,"column":12,"nodeType":"538","messageId":"539","endLine":24,"endColumn":18},{"ruleId":"536","severity":1,"message":"663","line":24,"column":20,"nodeType":"538","messageId":"539","endLine":24,"endColumn":29},{"ruleId":"536","severity":1,"message":"639","line":27,"column":12,"nodeType":"538","messageId":"539","endLine":27,"endColumn":26},{"ruleId":"536","severity":1,"message":"602","line":27,"column":28,"nodeType":"538","messageId":"539","endLine":27,"endColumn":45},{"ruleId":"664","severity":1,"message":"665","line":48,"column":28,"nodeType":"666","messageId":"667","endLine":48,"endColumn":74},{"ruleId":"664","severity":1,"message":"665","line":56,"column":28,"nodeType":"666","messageId":"667","endLine":56,"endColumn":74},{"ruleId":"546","severity":1,"message":"668","line":84,"column":11,"nodeType":"607","messageId":"669","endLine":84,"endColumn":19},{"ruleId":"670","severity":1,"message":"671","line":116,"column":59,"nodeType":"585","messageId":"672","endLine":116,"endColumn":60},{"ruleId":"542","severity":1,"message":"673","line":154,"column":8,"nodeType":"544","endLine":154,"endColumn":25,"suggestions":"674"},{"ruleId":"555","severity":1,"message":"568","line":309,"column":9,"nodeType":"557","messageId":"558","endLine":309,"endColumn":25},{"ruleId":"536","severity":1,"message":"537","line":2,"column":10,"nodeType":"538","messageId":"539","endLine":2,"endColumn":18},{"ruleId":"536","severity":1,"message":"560","line":2,"column":20,"nodeType":"538","messageId":"539","endLine":2,"endColumn":29},{"ruleId":"536","severity":1,"message":"619","line":20,"column":12,"nodeType":"538","messageId":"539","endLine":20,"endColumn":29},{"ruleId":"536","severity":1,"message":"620","line":20,"column":31,"nodeType":"538","messageId":"539","endLine":20,"endColumn":51},{"ruleId":"536","severity":1,"message":"596","line":28,"column":24,"nodeType":"538","messageId":"539","endLine":28,"endColumn":37},{"ruleId":"536","severity":1,"message":"675","line":30,"column":20,"nodeType":"538","messageId":"539","endLine":30,"endColumn":29},{"ruleId":"609","severity":1,"message":"610","line":139,"column":22,"nodeType":"538","messageId":"611","endLine":139,"endColumn":23},{"ruleId":"609","severity":1,"message":"610","line":146,"column":22,"nodeType":"538","messageId":"611","endLine":146,"endColumn":23},{"ruleId":"583","severity":1,"message":"584","line":193,"column":33,"nodeType":"585","messageId":"586","endLine":193,"endColumn":35},{"ruleId":"536","severity":1,"message":"676","line":228,"column":11,"nodeType":"538","messageId":"539","endLine":228,"endColumn":28},{"ruleId":"555","severity":1,"message":"568","line":26,"column":9,"nodeType":"557","messageId":"558","endLine":26,"endColumn":25},{"ruleId":"536","severity":1,"message":"628","line":2,"column":10,"nodeType":"538","messageId":"539","endLine":2,"endColumn":17},{"ruleId":"536","severity":1,"message":"560","line":4,"column":20,"nodeType":"538","messageId":"539","endLine":4,"endColumn":29},{"ruleId":"536","severity":1,"message":"677","line":21,"column":12,"nodeType":"538","messageId":"539","endLine":21,"endColumn":18},{"ruleId":"536","severity":1,"message":"603","line":21,"column":20,"nodeType":"538","messageId":"539","endLine":21,"endColumn":29},{"ruleId":"536","severity":1,"message":"678","line":44,"column":26,"nodeType":"538","messageId":"539","endLine":44,"endColumn":41},{"ruleId":"536","severity":1,"message":"679","line":45,"column":25,"nodeType":"538","messageId":"539","endLine":45,"endColumn":39},{"ruleId":"536","severity":1,"message":"680","line":46,"column":26,"nodeType":"538","messageId":"539","endLine":46,"endColumn":41},{"ruleId":"536","severity":1,"message":"623","line":48,"column":27,"nodeType":"538","messageId":"539","endLine":48,"endColumn":43},{"ruleId":"536","severity":1,"message":"625","line":49,"column":26,"nodeType":"538","messageId":"539","endLine":49,"endColumn":41},{"ruleId":"536","severity":1,"message":"627","line":50,"column":27,"nodeType":"538","messageId":"539","endLine":50,"endColumn":43},{"ruleId":"536","severity":1,"message":"619","line":20,"column":12,"nodeType":"538","messageId":"539","endLine":20,"endColumn":29},{"ruleId":"536","severity":1,"message":"620","line":20,"column":31,"nodeType":"538","messageId":"539","endLine":20,"endColumn":51},{"ruleId":"536","severity":1,"message":"593","line":30,"column":12,"nodeType":"538","messageId":"539","endLine":30,"endColumn":33},{"ruleId":"536","severity":1,"message":"596","line":31,"column":24,"nodeType":"538","messageId":"539","endLine":31,"endColumn":37},{"ruleId":"542","severity":1,"message":"681","line":78,"column":8,"nodeType":"544","endLine":78,"endColumn":10,"suggestions":"682"},{"ruleId":"609","severity":1,"message":"610","line":138,"column":22,"nodeType":"538","messageId":"611","endLine":138,"endColumn":23},{"ruleId":"609","severity":1,"message":"610","line":145,"column":22,"nodeType":"538","messageId":"611","endLine":145,"endColumn":23},{"ruleId":"583","severity":1,"message":"584","line":192,"column":33,"nodeType":"585","messageId":"586","endLine":192,"endColumn":35},{"ruleId":"583","severity":1,"message":"584","line":200,"column":33,"nodeType":"585","messageId":"586","endLine":200,"endColumn":35},{"ruleId":"555","severity":1,"message":"568","line":308,"column":9,"nodeType":"557","messageId":"558","endLine":308,"endColumn":25},{"ruleId":"536","severity":1,"message":"594","line":30,"column":12,"nodeType":"538","messageId":"539","endLine":30,"endColumn":26},{"ruleId":"536","severity":1,"message":"596","line":31,"column":24,"nodeType":"538","messageId":"539","endLine":31,"endColumn":37},{"ruleId":"536","severity":1,"message":"675","line":33,"column":20,"nodeType":"538","messageId":"539","endLine":33,"endColumn":29},{"ruleId":"609","severity":1,"message":"610","line":126,"column":22,"nodeType":"538","messageId":"611","endLine":126,"endColumn":23},{"ruleId":"609","severity":1,"message":"610","line":133,"column":22,"nodeType":"538","messageId":"611","endLine":133,"endColumn":23},{"ruleId":"536","severity":1,"message":"676","line":225,"column":11,"nodeType":"538","messageId":"539","endLine":225,"endColumn":28},{"ruleId":"542","severity":1,"message":"683","line":243,"column":8,"nodeType":"544","endLine":243,"endColumn":10,"suggestions":"684"},{"ruleId":"555","severity":1,"message":"568","line":333,"column":9,"nodeType":"557","messageId":"558","endLine":333,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'useDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'maxScore' and 'numOfQuestions'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMinScore' needs the current value of 'maxScore'.","ArrayExpression",["685"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useMemo has a missing dependency: 'validateAns'. Either include it or remove the dependency array.",["686"],"React Hook useEffect contains a call to 'setProgress'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [currentNum, numOfQuestions] as a second argument to the useEffect Hook.",["687"],"'LandingPage' is defined but never used.","react/jsx-pascal-case","Imported JSX component CreateFlow_mobile must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component EditFlow_Mobile must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'SubNav_mobile' is defined but never used.","'useAccess' is defined but never used.","'useSelector' is defined but never used.","'setTotal_balance' is assigned a value but never used.","'setGrandTotal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["688"],"Imported JSX component SubNav_mobile must be in PascalCase or SCREAMING_SNAKE_CASE","'access' is assigned a value but never used.","'useRef' is defined but never used.","'val' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'effect'. Either include it or remove the dependency array. If 'effect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["689"],"'ReactDOM' is defined but never used.","'ScrollSync' is defined but never used.","'Moment' is defined but never used.","'setStreamFilter' is assigned a value but never used.","'setPriodStart' is assigned a value but never used.","'setPriodEnd' is assigned a value but never used.","'start_date' is assigned a value but never used.","'end_date' is assigned a value but never used.","'StreamPages' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getStreamData'. Either include it or remove the dependency array.",["690"],"React Hook useEffect has a missing dependency: 'setStream'. Either include it or remove the dependency array.",["691"],"'edit_cashFlow' is defined but never used.","'setFlowPage' is assigned a value but never used.","'createFlowModalIsOpen' is assigned a value but never used.","'editFlowIsOpen' is assigned a value but never used.","'setReRender' is assigned a value but never used.","'setStreamList' is assigned a value but never used.","'setStream' is assigned a value but never used.","'priodStart' is assigned a value but never used.","'priodEnd' is assigned a value but never used.","'setStart_date' is assigned a value but never used.","'setEnd_date' is assigned a value but never used.","'setFilterCategory' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'total_balance' is assigned a value but never used.","'grandTotal' is assigned a value but never used.","Array.prototype.map() expects a return value from function.","FunctionExpression","'editDelete' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'addCashFlow' and 'page'. Either include them or remove the dependency array.",["692"],"React Hook useEffect has missing dependencies: 'addFirst' and 'page'. Either include them or remove the dependency array.",["693"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["694"],"'text' is assigned a value but never used.","'selected_Category' is assigned a value but never used.","'setSelected_Category' is assigned a value but never used.","'home_active' is defined but never used.","'PColor_active' is assigned a value but never used.","'setPColor_active' is assigned a value but never used.","'PColor_hover' is assigned a value but never used.","'setPColor_hover' is assigned a value but never used.","'PColor_normal' is assigned a value but never used.","'setPColor_normal' is assigned a value but never used.","'NavLink' is defined but never used.","'graph_active_icon' is defined but never used.","'ratio_icon_active_icon' is defined but never used.","'filter_icon_active_icon' is defined but never used.","'settings_active_icon' is defined but never used.","'setBoderBottom_active' is assigned a value but never used.","'setBoderBottom_hover' is assigned a value but never used.","'setBoderBottom_normal' is assigned a value but never used.","'create_cashFlow' is defined but never used.","'filter_icon_hover_icon' is defined but never used.","'setNewCategory' is assigned a value but never used.","'filterCategory' is assigned a value but never used.","'streamBTNs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setStreamFilter'. Either include it or remove the dependency array.",["695"],"React Hook useEffect has a missing dependency: 'load_categories'. Either include it or remove the dependency array.",["696"],"'create_Category' is assigned a value but never used.","'ratioDetailList' is assigned a value but never used.","'setRatioPeriodInterval' is assigned a value but never used.",["697"],"'dateFrom' is assigned a value but never used.","'setDateFrom' is assigned a value but never used.","'dateTo' is assigned a value but never used.","'setDateTo' is assigned a value but never used.","'setRatioDetailList' is assigned a value but never used.","'totalExpenditure' is assigned a value but never used.","'setTotalExpenditure' is assigned a value but never used.","'totalExpensis' is assigned a value but never used.","'setTotalExpensis' is assigned a value but never used.","'profit' is assigned a value but never used.","'setProfit' is assigned a value but never used.","'profitMargin' is assigned a value but never used.","'setProfitMargin' is assigned a value but never used.","'markup' is assigned a value but never used.","'setMarkup' is assigned a value but never used.","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","Array.prototype.map() expects a value to be returned at the end of function.","expectedAtEnd","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'ratioPeriodInterval'. Either include it or remove the dependency array.",["698"],"'setFlowId' is assigned a value but never used.","'getEdit_data_fail' is assigned a value but never used.","'search' is assigned a value but never used.","'setBoder_active' is assigned a value but never used.","'setBoder_hover' is assigned a value but never used.","'setBoder_normal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'load_categories' and 'load_savedTransactions'. Either include them or remove the dependency array.",["699"],"React Hook useEffect has missing dependencies: 'load_categories', 'load_edit_data', and 'load_savedTransactions'. Either include them or remove the dependency array.",["700"],{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},"Update the dependencies array to be: [answeredCorrect, answeredFailed, maxScore, numOfQuestions]",{"range":"733","text":"734"},"Update the dependencies array to be: [data_Id, validateAns]",{"range":"735","text":"736"},"Add dependencies array: [currentNum, numOfQuestions]",{"range":"737","text":"738"},"Update the dependencies array to be: [dispatch]",{"range":"739","text":"740"},"Update the dependencies array to be: [effect]",{"range":"741","text":"742"},"Update the dependencies array to be: [priodStart, access, priodEnd, dateFrom, dateTo, getStreamData]",{"range":"743","text":"744"},"Update the dependencies array to be: [setStream, streamList]",{"range":"745","text":"746"},"Update the dependencies array to be: [addCashFlow, addCashFlow_Triger, page]",{"range":"747","text":"748"},"Update the dependencies array to be: [stream, access, flowList, flowPage, page, addFirst]",{"range":"749","text":"750"},"Update the dependencies array to be: [streamList, stream, reRender, search, start_date, end_date, getData]",{"range":"751","text":"752"},"Update the dependencies array to be: [streamList, streamFilter, setStreamFilter]",{"range":"753","text":"754"},"Update the dependencies array to be: [load_categories]",{"range":"755","text":"756"},"Update the dependencies array to be: [ratioPeriodInterval, ratioDateFrom, ratioDateTo, ratioPeriod, getData]",{"range":"757","text":"758"},"Update the dependencies array to be: [ratioDetailList, ratioPeriodInterval]",{"range":"759","text":"760"},"Update the dependencies array to be: [load_categories, load_savedTransactions]",{"range":"761","text":"762"},"Update the dependencies array to be: [load_categories, load_edit_data, load_savedTransactions]",{"range":"763","text":"764"},[832,865],"[answeredCorrect, answeredFailed, maxScore, numOfQuestions]",[3258,3267],"[data_Id, validateAns]",[420,420],", [currentNum, numOfQuestions]",[1353,1355],"[dispatch]",[919,921],"[effect]",[2338,2386],"[priodStart, access, priodEnd, dateFrom, dateTo, getStreamData]",[2790,2802],"[setStream, streamList]",[16197,16217],"[addCashFlow, addCashFlow_Triger, page]",[16291,16325],"[stream, access, flowList, flowPage, page, addFirst]",[17769,17829],"[streamList, stream, reRender, search, start_date, end_date, getData]",[3920,3945],"[streamList, streamFilter, setStreamFilter]",[4719,4721],"[load_categories]",[3298,3360],"[ratioPeriodInterval, ratioDateFrom, ratioDateTo, ratioPeriod, getData]",[7511,7528],"[ratioDetailList, ratioPeriodInterval]",[3198,3200],"[load_categories, load_savedTransactions]",[9345,9347],"[load_categories, load_edit_data, load_savedTransactions]"]